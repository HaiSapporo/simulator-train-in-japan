<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:ctrl="clr-namespace:WatakuCity.NextStation.Controls;assembly=NextStation"
                    xmlns:cvt="clr-namespace:WatakuCity.NextStation.Converter;assembly=NextStation">
    <!-- Brushes -->

    <!-- 単色ラインカラー用ブラシ -->
    <x:Array x:Key="SolidLineColorBrushes" Type="SolidColorBrush">
        <!-- 埼京線 -->
        <SolidColorBrush Color="#FF009B8B" PresentationOptions:Freeze="True"/>

        <!-- りんかい線 -->
        <SolidColorBrush Color="#FF002E80" PresentationOptions:Freeze="True"/>
    </x:Array>

    <!-- 路線図用ブラシ -->
    <x:Array x:Key="GradientLineColorBrushes" Type="LinearGradientBrush">
        <!-- 埼京線 -->
        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1" PresentationOptions:Freeze="True">
            <GradientStopCollection>
                <GradientStop Color="#FF80D0C0" Offset="0"/>
                <GradientStop Color="#FF009B8B" Offset="1"/>
            </GradientStopCollection>
        </LinearGradientBrush>
        
        <!-- りんかい線 -->
        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1" PresentationOptions:Freeze="True">
            <GradientStopCollection>
                <GradientStop Color="#FF0050DC" Offset="0"/>
                <GradientStop Color="#FF002E80" Offset="1"/>
            </GradientStopCollection>
        </LinearGradientBrush>
    </x:Array>

    <!-- 列車種別用ブラシ -->
    <x:Array x:Key="TrainTypeBrushes" Type="LinearGradientBrush">
        <!-- 各駅停車 -->
        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1" PresentationOptions:Freeze="True">
            <GradientStopCollection>
                <GradientStop Color="#FF00A090" Offset="0"/>
                <GradientStop Color="#FF80D0C0" Offset="1"/>
            </GradientStopCollection>
        </LinearGradientBrush>
        
        <!-- 快速 -->
        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1" PresentationOptions:Freeze="True">
            <GradientStopCollection>
                <GradientStop Color="#FF0080FF" Offset="0"/>
                <GradientStop Color="#FF80C0FF" Offset="1"/>
            </GradientStopCollection>
        </LinearGradientBrush>
        
        <!-- 通勤快速 -->
        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1" PresentationOptions:Freeze="True">
            <GradientStopCollection>
                <GradientStop Color="#FFE00000" Offset="0"/>
                <GradientStop Color="#FFFF5F5F" Offset="1"/>
            </GradientStopCollection>
        </LinearGradientBrush>
    </x:Array>
    
    <!-- 通過駅などの無効化されたテキストの文字色 -->
    <SolidColorBrush x:Key="InactiveText" Color="#FFC0C0C0" PresentationOptions:Freeze="True"/>

    <!-- 停車駅などの有効なテキストの文字色 -->
    <SolidColorBrush x:Key="ActiveText" Color="#FF000000" PresentationOptions:Freeze="True"/>

    <!-- 路線図用ブラシ デフォルト -->
    <LinearGradientBrush x:Key="DefaultLineGradient" StartPoint="0.5,0" EndPoint="0.5,1" PresentationOptions:Freeze="True">
        <GradientStopCollection>
            <GradientStop Color="#FFCBCBCB" Offset="0"/>
            <GradientStop Color="#FF9B9B9B" Offset="1"/>
        </GradientStopCollection>
    </LinearGradientBrush>

    <!-- Converters -->

    <cvt:SplitWithLinefeed x:Key="SplitWithLinefeed"/>
    <cvt:RemoveLinefeed x:Key="RemoveLinefeed"/>
    <cvt:BrushSelector x:Key="BrushSelector"/>
    <cvt:EquivalenceConverter x:Key="EquivalenceConverter"/>
    <cvt:ExitPositionConverter x:Key="ExitPositionConverter" CarWidth="80" PlatformObjectWidth="54"/>
    <cvt:PlatformWidthConverter x:Key="PlatformWidthConverter" CarWidth="80"/>
    <cvt:TrainOffsetConverter x:Key="TrainOffsetConverter" CarWidth="80"/>
    <cvt:TrainStateConverter x:Key="TrainStateConverter"/>
    <cvt:ReverseSignConverter x:Key="ReverseSignConverter"/>
    <cvt:RouteMapSelector x:Key="RouteMapSelector" TargetPage="0"/>
    <cvt:IsBiggerConverter x:Key="IsBiggerConverter"/>
    <cvt:IsSmallerConverter x:Key="IsSmallerConverter"/>

    <!-- ControlStyles -->

    <Style x:Key="TrainType" TargetType="Control">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <Grid Width="192" Height="50">
                        <Path Name="Background">
                            <Path.Fill>
                                <MultiBinding Converter="{StaticResource BrushSelector}">
                                    <Binding Source="{StaticResource TrainTypeBrushes}"/>
                                    <Binding Path="TrainInfo.TrainType.ColorIndex"/>
                                </MultiBinding>
                            </Path.Fill>
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure StartPoint="0,0">
                                        <LineSegment Point="191,0" IsStroked="True"/>
                                        <LineSegment Point="191,45" IsStroked="True"/>
                                        <ArcSegment IsLargeArc="False" Point="186,50" RotationAngle="0" Size="5,5" SweepDirection="Clockwise"/>
                                        <LineSegment Point="5,50" IsStroked="True"/>
                                        <ArcSegment IsLargeArc="False" Point="0,45" RotationAngle="0" Size="5,5" SweepDirection="Clockwise"/>
                                        <LineSegment Point="0,0" IsStroked="True"/>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                        <ctrl:VerticalTextControl x:Name="Japanese" Margin="4,-3,4,0" FontSize="40" Foreground="#FFFFFFFF" Text="{Binding TrainInfo.TrainType.Kanji}" TextAlignment="Center" BoldSimulation="True" FontFamily="Meiryo UI">
                            <ctrl:VerticalTextControl.RenderTransform>
                                <ScaleTransform ScaleY="1.1"/>
                            </ctrl:VerticalTextControl.RenderTransform>
                        </ctrl:VerticalTextControl>
                        <Viewbox StretchDirection="DownOnly" Margin="4,-2,4,2" VerticalAlignment="Top">
                            <TextBlock Name="English" Opacity="0" FontSize="44" Foreground="#FFFFFFFF" Text="{Binding TrainInfo.TrainType.English}" TextAlignment="Center" FontWeight="Bold" FontFamily="Microsoft Sans Serif"/>
                        </Viewbox>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Text.Length, ElementName=Japanese}" Value="2">
                            <Setter TargetName="Japanese" Property="AdvanceWidth" Value="180"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding TrainInfo.TrainType.Kanji}" Value="通勤快速">
                            <Setter TargetName="English" Property="Margin" Value="0,15"/>
                            <Setter TargetName="English" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleY="1.4"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        
                        <DataTrigger Binding="{Binding MainArea.Language}" Value="English">
                            <Setter TargetName="Japanese" Property="Opacity" Value="0"/>
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Name="EnterEnglish">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Japanese" Storyboard.TargetProperty="Opacity" Duration="0:0:0.4" From="1.0" To="0.0"/>
                                        <DoubleAnimation Storyboard.TargetName="English" Storyboard.TargetProperty="Opacity" Duration="0:0:0.4" From="0.0" To="1.0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard Name="ExitEnglish">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Japanese" Storyboard.TargetProperty="Opacity" Duration="0:0:0.4" From="0.0" To="1.0"/>
                                        <DoubleAnimation Storyboard.TargetName="English" Storyboard.TargetProperty="Opacity" Duration="0:0:0.4" From="1.0" To="0.0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ElapsedTimeOfCurrentRoutine}" Value="0">
                            <DataTrigger.EnterActions>
                                <RemoveStoryboard BeginStoryboardName="EnterEnglish" />
                                <RemoveStoryboard BeginStoryboardName="ExitEnglish" />
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding StationInfo.IsTerminal}" Value="True">
                <Setter Property="Visibility" Value="Hidden"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Destination" TargetType="Control">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <Grid>
                        <StackPanel Name="Japanese" Orientation="Horizontal">
                            <TextBlock FontFamily="Microsoft Sans Serif" FontSize="40" FontWeight="Bold" HorizontalAlignment="Left" Text="{Binding TrainInfo.Destination.Kanji}"/>
                            <TextBlock Margin="16,0" FontFamily="Microsoft Sans Serif" FontSize="40" FontWeight="Bold" HorizontalAlignment="Left" Text="行"/>
                        </StackPanel>
                        <StackPanel Name="English" Orientation="Horizontal" Opacity="0">
                            <TextBlock FontFamily="Microsoft Sans Serif" FontSize="40" FontWeight="Bold" HorizontalAlignment="Left" Text="for"/>
                            <TextBlock Margin="16,0" FontFamily="Microsoft Sans Serif" FontSize="40" FontWeight="Bold" HorizontalAlignment="Left" Text="{Binding TrainInfo.Destination.English}"/>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>                        
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding MainArea.Language}" Value="English"/>
                                <Condition Binding="{Binding TrainInfo.TrainState, Converter={StaticResource TrainStateConverter}, ConverterParameter=Departing}" Value="False"/>
                                <Condition Binding="{Binding StationInfo.IsOrigin}" Value="False"/>
                                <Condition Binding="{Binding StationInfo.IsTerminal}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Japanese" Property="Opacity" Value="0"/>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Name="EnterEnglish">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Japanese" Storyboard.TargetProperty="Opacity" Duration="0:0:0.4" From="1.0" To="0.0"/>
                                        <DoubleAnimation Storyboard.TargetName="English" Storyboard.TargetProperty="Opacity" Duration="0:0:0.4" From="0.0" To="1.0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard Name="ExitEnglish">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Japanese" Storyboard.TargetProperty="Opacity" Duration="0:0:0.4" From="0.0" To="1.0"/>
                                        <DoubleAnimation Storyboard.TargetName="English" Storyboard.TargetProperty="Opacity" Duration="0:0:0.4" From="1.0" To="0.0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>

                        <DataTrigger Binding="{Binding ElapsedTimeOfCurrentRoutine}" Value="0">
                            <DataTrigger.EnterActions>                                
                                <RemoveStoryboard BeginStoryboardName="EnterEnglish"/>
                                <RemoveStoryboard BeginStoryboardName="ExitEnglish"/>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding TrainInfo.TrainState}" Value="Departing">
                <Setter Property="Visibility" Value="Hidden"/>
            </DataTrigger>
            
            <DataTrigger Binding="{Binding StationInfo.IsOrigin}" Value="True">
                <Setter Property="Visibility" Value="Hidden"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding StationInfo.IsTerminal}" Value="True">
                <Setter Property="Visibility" Value="Hidden"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="StationNameAtOrigin" TargetType="Control">
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="Width" Value="830"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="270"/>
                            <ColumnDefinition Width="45"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid Name="Kanji" Opacity="0" Grid.ColumnSpan="3">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="270"/>
                                <ColumnDefinition Width="45"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <StackPanel Margin="0,0,10,0" Width="260" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                                <Viewbox Stretch="Fill" StretchDirection="DownOnly" MinHeight="54" HorizontalAlignment="Right">
                                    <TextBlock Name="Caption" MinWidth="192" Foreground="{TemplateBinding Foreground}" FontFamily="Meiryo UI" FontSize="54" FontWeight="Bold" Text="{Binding TrainInfo.TrainName.Kanji}" TextAlignment="Right" LineStackingStrategy="BlockLineHeight" LineHeight="54"/>
                                </Viewbox>
                                <Viewbox Name="ServiceInfoContainer" Stretch="Fill" MinHeight="2" StretchDirection="DownOnly" HorizontalAlignment="Right" Margin="0,10,0,0">
                                    <TextBlock Name="ServiceInfo" MinWidth="192" Foreground="{TemplateBinding Foreground}" FontFamily="Meiryo" FontSize="32" FontWeight="Bold" Text="{Binding TrainInfo.ServiceInfo.Kanji}" TextAlignment="Right" LineStackingStrategy="BlockLineHeight" LineHeight="24"/>
                                </Viewbox>
                            </StackPanel>
                            <StackPanel Margin="16,0,0,10" Height="110" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Bottom" Grid.Column="2">
                                <Viewbox Stretch="Fill" StretchDirection="DownOnly" Margin="0,-8" MaxWidth="430" VerticalAlignment="Bottom">
                                    <ctrl:VerticalTextControl x:Name="StationName" Foreground="{TemplateBinding Foreground}" FontFamily="Meiryo UI" FontSize="80" BoldSimulation="True" TextAlignment="Center" Text="{Binding TrainInfo.Destination.Kanji, Converter={StaticResource RemoveLinefeed}}" VerticalAlignment="Bottom"/>
                                </Viewbox>
                                <TextBlock Name="AdditionalText" Margin="20,0,-5,-5" Foreground="{TemplateBinding Foreground}" FontFamily="Microsoft Sans Serif" FontSize="54" FontWeight="Bold" Text="行" VerticalAlignment="Bottom"/>
                                <StackPanel.RenderTransform>
                                    <ScaleTransform x:Name="StationNameScale"/>
                                </StackPanel.RenderTransform>
                            </StackPanel>
                        </Grid>
                        <Grid Name="English" Opacity="0" Grid.ColumnSpan="3" VerticalAlignment="Bottom">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="270"/>
                                <ColumnDefinition Width="45"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <StackPanel Margin="0,0,10,0" Width="260" MaxHeight="94" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                                <Viewbox Stretch="Fill" StretchDirection="DownOnly" MinHeight="30" MaxHeight="65" HorizontalAlignment="Right">
                                    <TextBlock Name="CaptionEnglish" MinWidth="192" Foreground="{TemplateBinding Foreground}" FontFamily="Microsoft Sans Serif" FontSize="54" FontWeight="Bold" Text="{Binding TrainInfo.TrainName.English}" TextAlignment="left" LineStackingStrategy="BlockLineHeight" LineHeight="45"/>
                                </Viewbox>
                                <Viewbox Name="ServiceInfoContainerEnglish" Width="260" MinHeight="20" MaxHeight="45" Stretch="Fill" StretchDirection="DownOnly" HorizontalAlignment="Right">
                                    <TextBlock Name="ServiceInfoEnglish" Foreground="{TemplateBinding Foreground}" FontFamily="Microsoft Sans Serif" FontSize="28" FontWeight="Bold" Text="{Binding TrainInfo.ServiceInfo.English}" TextAlignment="Right" LineStackingStrategy="BlockLineHeight" LineHeight="26"/>
                                </Viewbox>
                            </StackPanel>
                            <StackPanel Margin="16,0,0,-5" Height="125" HorizontalAlignment="Left" VerticalAlignment="Bottom" Grid.Column="2">
                                <TextBlock Name="AdditionalTextEnglish" Foreground="{TemplateBinding Foreground}" FontFamily="Microsoft Sans Serif" FontSize="36" FontWeight="Bold" Text="for"/>
                                <Viewbox Stretch="Fill" Margin="0,-8,0,0" StretchDirection="DownOnly" MaxWidth="500" VerticalAlignment="Bottom">
                                    <ctrl:VerticalTextControl x:Name="StationNameEnglish" Foreground="{TemplateBinding Foreground}" FontFamily="Microsoft Sans Serif" FontSize="80" BoldSimulation="True" Text="{Binding TrainInfo.Destination.English, Converter={StaticResource RemoveLinefeed}}" VerticalAlignment="Bottom"/>
                                </Viewbox>
                                <StackPanel.RenderTransform>
                                    <ScaleTransform x:Name="StationNameEnglishScale"/>
                                </StackPanel.RenderTransform>
                            </StackPanel>
                        </Grid>
                        <Border x:Name="LineColor" Margin="0,-5" Width="45" Height="128" Grid.Column="1" VerticalAlignment="Bottom">
                            <Border.Background>
                                <MultiBinding Converter="{StaticResource BrushSelector}">
                                    <Binding Source="{StaticResource SolidLineColorBrushes}"/>
                                    <Binding Path="TrainInfo.TrainName.ColorIndex"/>
                                </MultiBinding>
                            </Border.Background>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>                        
                        <DataTrigger  Binding="{Binding Text.Length, ElementName=StationName}" Value="2">
                            <Setter TargetName="StationName" Property="AdvanceWidth" Value="150"/>
                        </DataTrigger>

                        <DataTrigger  Binding="{Binding Text.Length, ElementName=StationName}" Value="3">
                            <Setter TargetName="StationName" Property="AdvanceWidth" Value="125"/>
                        </DataTrigger>

                        <DataTrigger  Binding="{Binding Text.Length, ElementName=ServiceInfo}" Value="0">
                            <Setter TargetName="ServiceInfo" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>

                        <DataTrigger  Binding="{Binding Text.Length, ElementName=ServiceInfoEnglish}" Value="0">
                            <Setter TargetName="ServiceInfoEnglish" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding MainArea.Language}" Value="Kanji">
                            <Setter TargetName="Kanji" Property="Opacity" Value="1"/>
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Name="EnterKanji">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Kanji" Storyboard.TargetProperty="Opacity" Duration="0:0:0.4" From="0.0" To="1.0"/>
                                        <DoubleAnimation Storyboard.TargetName="StationNameScale" Storyboard.TargetProperty="CenterY" Duration="0:0:0" From="120" To="0"/>
                                        <DoubleAnimation Storyboard.TargetName="StationNameScale" Storyboard.TargetProperty="ScaleY" Duration="0:0:0.4" From="0" To="1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard Name="ExitKanji">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Kanji" Storyboard.TargetProperty="Opacity" Duration="0:0:0.4" From="1.0" To="0.0"/>
                                        <DoubleAnimation Storyboard.TargetName="StationNameScale" Storyboard.TargetProperty="CenterY" Duration="0:0:0" From="0" To="120"/>
                                        <DoubleAnimation Storyboard.TargetName="StationNameScale" Storyboard.TargetProperty="ScaleY" Duration="0:0:0.4" From="1" To="0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding MainArea.Language}" Value="English">
                            <Setter TargetName="English" Property="Opacity" Value="1"/>
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Name="EnterEnglish">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="English" Storyboard.TargetProperty="Opacity" Duration="0:0:0.4" From="0.0" To="1.0"/>
                                        <DoubleAnimation Storyboard.TargetName="StationNameEnglishScale" Storyboard.TargetProperty="CenterY" Duration="0:0:0" From="120" To="0"/>
                                        <DoubleAnimation Storyboard.TargetName="StationNameEnglishScale" Storyboard.TargetProperty="ScaleY" Duration="0:0:0.4" From="0" To="1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard Name="ExitEnglish">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="English" Storyboard.TargetProperty="Opacity" Duration="0:0:0.4" From="1.0" To="0.0"/>
                                        <DoubleAnimation Storyboard.TargetName="StationNameEnglishScale" Storyboard.TargetProperty="CenterY" Duration="0:0:0" From="0" To="120"/>
                                        <DoubleAnimation Storyboard.TargetName="StationNameEnglishScale" Storyboard.TargetProperty="ScaleY" Duration="0:0:0.4" From="1" To="0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ElapsedTimeOfCurrentRoutine}" Value="0">
                            <DataTrigger.EnterActions>
                                <RemoveStoryboard BeginStoryboardName="EnterKanji" />
                                <RemoveStoryboard BeginStoryboardName="EnterEnglish" />
                                <RemoveStoryboard BeginStoryboardName="ExitKanji" />
                                <RemoveStoryboard BeginStoryboardName="ExitEnglish" />
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StationName" TargetType="Control">
        <Setter Property="Foreground" Value="{StaticResource ActiveText}"/>
        <Setter Property="Width" Value="830"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <Grid Margin="0,0,0,2">
                        <Grid Name="Kanji" Opacity="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="210"/>
                                <ColumnDefinition Width="620"/>
                            </Grid.ColumnDefinitions>
                            <Viewbox Stretch="Fill" StretchDirection="DownOnly" Grid.Column="0" Margin="0,0,0,-10" Width="192" HorizontalAlignment="Left" VerticalAlignment="Bottom">
                                <TextBlock Name="Caption" MinWidth="192" Foreground="{TemplateBinding Foreground}" FontFamily="Meiryo" FontSize="38" FontWeight="Bold" Text="次は" TextAlignment="Right"/>
                            </Viewbox>
                            <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom">
                                <Viewbox Stretch="Fill" StretchDirection="DownOnly" Margin="0,-8" MaxWidth="620" VerticalAlignment="Bottom">
                                    <ctrl:VerticalTextControl x:Name="StationName" Foreground="{TemplateBinding Foreground}" FontFamily="Meiryo UI" FontSize="92" BoldSimulation="True" TextAlignment="Center" Text="{Binding StationInfo.Name.Kanji}" HorizontalAlignment="Center" VerticalAlignment="Bottom"/>
                                </Viewbox>
                                <TextBlock Name="AdditionalText" Visibility="Collapsed" Margin="40,0,0,0" Foreground="{TemplateBinding Foreground}" FontFamily="Microsoft Sans Serif" FontSize="54" FontWeight="Bold" Text="行" VerticalAlignment="Bottom"/>
                                <StackPanel.RenderTransform>
                                    <ScaleTransform x:Name="StationNameScale"/>
                                </StackPanel.RenderTransform>
                            </StackPanel>
                        </Grid>
                        <Grid Name="English" Opacity="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="210"/>
                                <ColumnDefinition Width="620"/>
                            </Grid.ColumnDefinitions>
                            <Viewbox Stretch="Fill" StretchDirection="DownOnly" Grid.Column="0" Margin="0,0,0,10" Width="192" HorizontalAlignment="Left" VerticalAlignment="Bottom">
                                <TextBlock Name="CaptionEnglish" MinWidth="192" Foreground="{TemplateBinding Foreground}" FontFamily="Microsoft Sans Serif" FontSize="38" FontWeight="Bold" Text="Next" TextAlignment="Right" LineStackingStrategy="BlockLineHeight" LineHeight="38"/>
                            </Viewbox>
                            <StackPanel Name="StationNameEnglishContainer" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom">
                                <TextBlock Name="AdditionalTextEnglish" Visibility="Collapsed" Margin="0,0,40,10" Foreground="{TemplateBinding Foreground}" FontFamily="Microsoft Sans Serif" FontSize="54" FontWeight="Bold" Text="for" VerticalAlignment="Bottom"/>
                                <Viewbox Stretch="Fill" StretchDirection="DownOnly" MaxWidth="620" Height="100" HorizontalAlignment="Center" VerticalAlignment="Bottom" Grid.ColumnSpan="2">
                                    <ctrl:VerticalTextControl x:Name="StationNameEnglish" Foreground="{TemplateBinding Foreground}" FontFamily="Microsoft Sans Serif" FontSize="96" BoldSimulation="True" TextAlignment="Center" Text="{Binding StationInfo.Name.English}" HorizontalAlignment="Center" VerticalAlignment="Bottom"/>
                                </Viewbox>
                                <StackPanel.RenderTransform>
                                    <ScaleTransform x:Name="StationNameEnglishScale"/>
                                </StackPanel.RenderTransform>
                            </StackPanel>
                        </Grid>
                        <Grid Name="Hiragana" Opacity="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="210"/>
                                <ColumnDefinition Width="620"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Name="CaptionHiragana" Grid.Column="0" Margin="0,0,0,-10" Foreground="{TemplateBinding Foreground}" FontFamily="Meiryo" FontSize="38" FontWeight="Bold" Width="192" Text="つぎは" TextAlignment="Right" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                            <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom">
                                <Viewbox Stretch="Fill" StretchDirection="DownOnly" Margin="0,-8" MaxWidth="620" VerticalAlignment="Bottom">
                                    <ctrl:VerticalTextControl x:Name="StationNameHiragana" Foreground="{TemplateBinding Foreground}" FontFamily="Meiryo UI" FontSize="92" BoldSimulation="True" TextAlignment="Center" Text="{Binding StationInfo.Name.Hiragana}" HorizontalAlignment="Center" VerticalAlignment="Bottom"/>
                                </Viewbox>
                                <TextBlock Name="AdditionalTextHiragana" Visibility="Collapsed" Margin="40,0,0,0" Foreground="{TemplateBinding Foreground}" FontFamily="Microsoft Sans Serif" FontSize="54" FontWeight="Bold" Text="行" VerticalAlignment="Bottom"/>
                                <StackPanel.RenderTransform>
                                    <ScaleTransform x:Name="StationNameHiraganaScale"/>
                                </StackPanel.RenderTransform>
                            </StackPanel>
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <DataTrigger  Binding="{Binding Text.Length, ElementName=StationName}" Value="2">
                            <Setter TargetName="StationName" Property="AdvanceWidth" Value="180"/>
                        </DataTrigger>

                        <DataTrigger  Binding="{Binding Text.Length, ElementName=StationName}" Value="3">
                            <Setter TargetName="StationName" Property="AdvanceWidth" Value="125"/>
                        </DataTrigger>

                        <DataTrigger  Binding="{Binding Text.Length, ElementName=StationNameHiragana}" Value="2">
                            <Setter TargetName="StationNameHiragana" Property="AdvanceWidth" Value="180"/>
                        </DataTrigger>

                        <DataTrigger  Binding="{Binding Text.Length, ElementName=StationNameHiragana}" Value="3">
                            <Setter TargetName="StationNameHiragana" Property="AdvanceWidth" Value="125"/>
                        </DataTrigger>
                        
                        <DataTrigger Binding="{Binding MainArea.Language}" Value="Kanji">
                            <Setter TargetName="Kanji" Property="Opacity" Value="1"/>
                            <Setter TargetName="Hiragana" Property="Opacity" Value="0"/>
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Name="EnterKanji">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Kanji" Storyboard.TargetProperty="Opacity" Duration="0:0:0.4" From="0.0" To="1.0"/>
                                        <DoubleAnimation Storyboard.TargetName="StationNameScale" Storyboard.TargetProperty="CenterY" Duration="0:0:0" From="95" To="0"/>
                                        <DoubleAnimation Storyboard.TargetName="StationNameScale" Storyboard.TargetProperty="ScaleY" Duration="0:0:0.4" From="0" To="1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard Name="ExitKanji">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Kanji" Storyboard.TargetProperty="Opacity" Duration="0:0:0.4" From="1.0" To="0.0"/>
                                        <DoubleAnimation Storyboard.TargetName="StationNameScale" Storyboard.TargetProperty="CenterY" Duration="0:0:0" From="0" To="95"/>
                                        <DoubleAnimation Storyboard.TargetName="StationNameScale" Storyboard.TargetProperty="ScaleY" Duration="0:0:0.4" From="1" To="0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding MainArea.Language}" Value="English">
                            <Setter TargetName="English" Property="Opacity" Value="1"/>
                            <Setter TargetName="Hiragana" Property="Opacity" Value="0"/>
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Name="EnterEnglish">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="English" Storyboard.TargetProperty="Opacity" Duration="0:0:0.4" From="0.0" To="1.0"/>
                                        <DoubleAnimation Storyboard.TargetName="StationNameEnglishScale" Storyboard.TargetProperty="CenterY" Duration="0:0:0" From="95" To="0"/>
                                        <DoubleAnimation Storyboard.TargetName="StationNameEnglishScale" Storyboard.TargetProperty="ScaleY" Duration="0:0:0.4" From="0" To="1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard Name="ExitEnglish">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="English" Storyboard.TargetProperty="Opacity" Duration="0:0:0.4" From="1.0" To="0.0"/>
                                        <DoubleAnimation Storyboard.TargetName="StationNameEnglishScale" Storyboard.TargetProperty="CenterY" Duration="0:0:0" From="0" To="95"/>
                                        <DoubleAnimation Storyboard.TargetName="StationNameEnglishScale" Storyboard.TargetProperty="ScaleY" Duration="0:0:0.4" From="1" To="0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding MainArea.Language}" Value="Hiragana">
                            <Setter TargetName="Hiragana" Property="Opacity" Value="1"/>
                            <Setter TargetName="English" Property="Opacity" Value="0"/>
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Name="EnterHiragana">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Hiragana" Storyboard.TargetProperty="Opacity" Duration="0:0:0.4" From="0.0" To="1.0"/>
                                        <DoubleAnimation Storyboard.TargetName="StationNameHiraganaScale" Storyboard.TargetProperty="CenterY" Duration="0:0:0" From="95" To="0"/>
                                        <DoubleAnimation Storyboard.TargetName="StationNameHiraganaScale" Storyboard.TargetProperty="ScaleY" Duration="0:0:0.4" From="0" To="1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard Name="ExitHiragana">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Hiragana" Storyboard.TargetProperty="Opacity" Duration="0:0:0.4" From="1.0" To="0.0"/>
                                        <DoubleAnimation Storyboard.TargetName="StationNameHiraganaScale" Storyboard.TargetProperty="CenterY" Duration="0:0:0" From="0" To="95"/>
                                        <DoubleAnimation Storyboard.TargetName="StationNameHiraganaScale" Storyboard.TargetProperty="ScaleY" Duration="0:0:0.4" From="1" To="0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding TrainInfo.TrainState}" Value="Arriving">
                            <Setter TargetName="Caption" Property="Text" Value="まもなく"/>
                            <Setter TargetName="CaptionEnglish" Property="Text" Value="Arriving at"/>
                            <Setter TargetName="CaptionHiragana" Property="Text" Value="まもなく"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding TrainInfo.TrainState}" Value="Stopping">
                            <Setter TargetName="Caption" Property="Text" Value="ただいま"/>
                            <Setter TargetName="CaptionEnglish" Property="Text" Value="Now&#xA;Stopping at"/>
                            <Setter TargetName="CaptionEnglish" Property="TextAlignment" Value="Left"/>
                            <Setter TargetName="CaptionHiragana" Property="Text" Value="ただいま"/>
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding TrainInfo.TrainState}" Value="Running"/>
                                <Condition Binding="{Binding StationInfo.IsTerminal}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Caption" Property="Text" Value="次は終点"/>
                            <Setter TargetName="CaptionHiragana" Property="Text" Value="つぎは終点"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding TrainInfo.TrainState}" Value="Arriving"/>
                                <Condition Binding="{Binding StationInfo.IsTerminal}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Caption" Property="Text" Value="まもなく終点"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding TrainInfo.TrainState}" Value="Stopping"/>
                                <Condition Binding="{Binding StationInfo.IsTerminal}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Caption" Property="Text" Value="終点"/>
                        </MultiDataTrigger>

                        <DataTrigger Binding="{Binding TrainInfo.TrainState}" Value="Departing">
                            <Setter TargetName="StationName" Property="Text" Value="{Binding TrainInfo.Destination.Kanji}"/>
                            <Setter TargetName="StationNameEnglish" Property="Text" Value="{Binding TrainInfo.Destination.English}"/>
                            <Setter TargetName="StationNameEnglishContainer" Property="HorizontalAlignment" Value="Left"/>                            
                            <Setter TargetName="Caption" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="CaptionEnglish" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="CaptionHiragana" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="AdditionalText" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="AdditionalTextEnglish" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="AdditionalTextHiragana" Property="Visibility" Value="Visible"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ElapsedTimeOfCurrentRoutine}" Value="0">
                            <DataTrigger.EnterActions>
                                <RemoveStoryboard BeginStoryboardName="EnterKanji" />
                                <RemoveStoryboard BeginStoryboardName="EnterEnglish" />
                                <RemoveStoryboard BeginStoryboardName="EnterHiragana" />
                                <RemoveStoryboard BeginStoryboardName="ExitKanji" />
                                <RemoveStoryboard BeginStoryboardName="ExitEnglish" />
                                <RemoveStoryboard BeginStoryboardName="ExitHiragana" />
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CurrentTime" TargetType="Control">
        <Setter Property="Foreground" Value="{StaticResource ActiveText}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <Grid Width="100">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <TextBlock FontFamily="Microsoft Sans Serif" Foreground="{TemplateBinding Foreground}" FontSize="36" Width="40" TextAlignment="Right" Text="{Binding Time.Hour}"></TextBlock>
                            <TextBlock FontFamily="Microsoft Sans Serif" Foreground="{TemplateBinding Foreground}" FontSize="36" Text=":">
                                <TextBlock.Triggers>
                                    <EventTrigger RoutedEvent="TextBlock.Loaded">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Duration="0:0:1" RepeatBehavior="Forever">
                                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
                                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </TextBlock.Triggers>
                            </TextBlock>
                            <TextBlock FontFamily="Microsoft Sans Serif" Foreground="{TemplateBinding Foreground}" FontSize="36" Width="40" TextAlignment="Right" Text="{Binding Time.Minute}"></TextBlock>
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding TrainInfo.TrainState}" Value="Stopping"/>
                    <Condition Binding="{Binding StationInfo.IsOrigin}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="#FFFFFFFF"/>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CarNumber" TargetType="Control">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <Grid Width="100" Height="50">
                        <Path>
                            <Path.Fill>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <GradientStop Color="#FF404040" Offset="0"/>
                                    <GradientStop Color="#FFA0A0A0" Offset="1"/>
                                </LinearGradientBrush>
                            </Path.Fill>
                            <Path.Data>
                                <PathGeometry>
                                    <PathFigure StartPoint="0,0">
                                        <LineSegment Point="99,0" IsStroked="True"/>
                                        <LineSegment Point="99,45" IsStroked="True"/>
                                        <ArcSegment IsLargeArc="False" Point="94,50" RotationAngle="0" Size="5,5" SweepDirection="Clockwise"/>
                                        <LineSegment Point="5,50" IsStroked="True"/>
                                        <ArcSegment IsLargeArc="False" Point="0,45" RotationAngle="0" Size="5,5" SweepDirection="Clockwise"/>
                                        <LineSegment Point="0,0" IsStroked="True"/>
                                    </PathFigure>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                        <Grid Name="Japanese">
                            <TextBlock Margin="0" FontFamily="Microsoft Sans Serif" FontSize="48" FontWeight="Bold" Foreground="#FFFFFFFF" Width="54" TextAlignment="Center" HorizontalAlignment="Left" Text="{Binding CarNumber}"/>
                            <TextBlock Margin="5,4" FontFamily="Microsoft Sans Serif" FontSize="20" FontWeight="Bold" Foreground="#FFFFFFFF" VerticalAlignment="Bottom" TextAlignment="Right" Text="号車"/>
                        </Grid>
                        <Grid Name="English" Opacity="0">
                            <TextBlock Margin="5,0" FontFamily="Microsoft Sans Serif" FontSize="48" FontWeight="Bold" Foreground="#FFFFFFFF" Width="54" TextAlignment="Center" HorizontalAlignment="Right" Text="{Binding CarNumber}"/>
                            <TextBlock Margin="5,4" FontFamily="Microsoft Sans Serif" FontSize="20" FontWeight="Bold" Foreground="#FFFFFFFF" HorizontalAlignment="Left" VerticalAlignment="Bottom" TextAlignment="Center" Text="Car&#xA;No."/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding MainArea.Language}" Value="English">
                            <Setter TargetName="Japanese" Property="Opacity" Value="0"/>
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Name="EnterEnglish">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Japanese" Storyboard.TargetProperty="Opacity" Duration="0:0:0.4" From="1.0" To="0.0"/>
                                        <DoubleAnimation Storyboard.TargetName="English" Storyboard.TargetProperty="Opacity" Duration="0:0:0.4" From="0.0" To="1.0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard Name="ExitEnglish">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Japanese" Storyboard.TargetProperty="Opacity" Duration="0:0:0.4" From="0.0" To="1.0"/>
                                        <DoubleAnimation Storyboard.TargetName="English" Storyboard.TargetProperty="Opacity" Duration="0:0:0.4" From="1.0" To="0.0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ElapsedTimeOfCurrentRoutine}" Value="0">
                            <DataTrigger.EnterActions>
                                <RemoveStoryboard BeginStoryboardName="EnterEnglish" />
                                <RemoveStoryboard BeginStoryboardName="ExitEnglish" />
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="LineIcon" TargetType="ctrl:LineIcon">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ctrl:LineIcon">
                    <Viewbox>
                        <Border Width="64" Height="64" Background="{TemplateBinding PrimaryLineColor}">
                            <Border Width="64" Height="32" VerticalAlignment="Bottom" Background="{TemplateBinding SecondaryLineColor}"/>
                        </Border>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IconType" Value="TrainIcon">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ctrl:LineIcon">
                            <Viewbox>
                                <Border Name="Base" Width="64" Height="64" CornerRadius="3" Background="{TemplateBinding PrimaryLineColor}">
                                    <Grid>
                                        <Border Width="36" Height="40" Background="#FFFFFFFF" CornerRadius="6" Margin="0,6" VerticalAlignment="Top">
                                            <Canvas>
                                                <Line Stroke="{Binding ElementName=Base, Path=Background}" StrokeThickness="3" X1="11" X2="25" Y1="4" Y2="4"></Line>
                                                <Line Stroke="{Binding ElementName=Base, Path=Background}" StrokeThickness="14" X1="4" X2="32" Y1="16" Y2="16"></Line>
                                                <Ellipse Fill="{Binding ElementName=Base, Path=Background}" Width="4" Height="4" Canvas.Left="5" Canvas.Top="30"></Ellipse>
                                                <Ellipse Fill="{Binding ElementName=Base, Path=Background}" Width="4" Height="4" Canvas.Right="5" Canvas.Top="30"></Ellipse>
                                            </Canvas>
                                        </Border>
                                        <Polygon Fill="#FFFFFFFF" Points="22,45,42,45,52,58,48,58,41,49,23,49,16,58,12,58"></Polygon>
                                    </Grid>
                                </Border>
                            </Viewbox>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IconType" Value="Subway">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ctrl:LineIcon">
                            <Viewbox>
                                <Grid Width="64" Height="64">
                                    <Ellipse Width="64" Height="64" StrokeThickness="10" Stroke="{TemplateBinding PrimaryLineColor}"/>
                                    <TextBlock FontFamily="Microsoft Sans Serif" FontSize="38" FontWeight="Bold" Foreground="{TemplateBinding LineLetterColor}" Text="{TemplateBinding LineLetter}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Grid>
                            </Viewbox>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ObjectIcon" TargetType="Control">
        <Style.Resources>           
            <ControlTemplate x:Key="Stairs" TargetType="Control">
                <Canvas Width="60" Height="60">
                    <Ellipse Width="5" Height="5" Fill="#FF000000" Canvas.Left="37" Canvas.Top="6"/>
                    <Path Fill="#FF000000">
                        <Path.Data>
                            <PathGeometry>
                                <PathFigure StartPoint="38,12">
                                    <ArcSegment IsLargeArc="False" Point="29,24" RotationAngle="0" Size="12,12" SweepDirection="Counterclockwise"/>
                                    <LineSegment Point="32,24" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="34,18" RotationAngle="0" Size="10,10" SweepDirection="Clockwise"/>
                                    <LineSegment Point="33,40" IsStroked="True"/>
                                    <LineSegment Point="36,40" IsStroked="True"/>
                                    <LineSegment Point="38,27" IsStroked="True"/>
                                    <LineSegment Point="41,28" IsStroked="True"/>
                                    <LineSegment Point="39,34" IsStroked="True"/>
                                    <LineSegment Point="42,36" IsStroked="True"/>
                                    <LineSegment Point="46,25" IsStroked="True"/>
                                    <LineSegment Point="40,22" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="38,12" RotationAngle="0" Size="10,10" SweepDirection="Counterclockwise"/>
                                </PathFigure>
                            </PathGeometry>
                        </Path.Data>
                    </Path>
                    <Ellipse Width="5" Height="5" Fill="#FF000000" Canvas.Left="14" Canvas.Top="12"/>
                    <Path Fill="#FF000000">
                        <Path.Data>
                            <PathGeometry>
                                <PathFigure StartPoint="16,18">
                                    <ArcSegment IsLargeArc="False" Point="8,30" RotationAngle="0" Size="20,20" SweepDirection="Clockwise"/>
                                    <LineSegment Point="10,32" IsStroked="True"/>
                                    <LineSegment Point="15,28" IsStroked="True"/>
                                    <LineSegment Point="15,48" IsStroked="True"/>
                                    <LineSegment Point="18,48" IsStroked="True"/>
                                    <LineSegment Point="19,39" IsStroked="True"/>
                                    <LineSegment Point="26,43" IsStroked="True"/>
                                    <LineSegment Point="26,40" IsStroked="True"/>
                                    <LineSegment Point="20,35" IsStroked="True"/>
                                    <LineSegment Point="21,26" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="23,32" RotationAngle="0" Size="6,8" SweepDirection="Clockwise"/>
                                    <LineSegment Point="26,32" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="16,18" RotationAngle="0" Size="12,14" SweepDirection="Counterclockwise"/>
                                </PathFigure>
                            </PathGeometry>
                        </Path.Data>
                    </Path>
                    <Polyline Stroke="#FF000000" StrokeThickness="4" Points="4,56 13,56 13,52 22,52 22,48 31,48 31,44 40,44 40,40 49,40 49,36 57,36"/>
                </Canvas>
            </ControlTemplate>

            <ControlTemplate x:Key="Escalator" TargetType="Control">
                <Canvas Width="60" Height="60">
                    <Ellipse Width="5" Height="5" Fill="#FF000000" Canvas.Left="22.5" Canvas.Top="8"/>
                    <Path Fill="#FF000000">
                        <Path.Data>
                            <PathGeometry>
                                <PathFigure StartPoint="28,15">
                                    <ArcSegment IsLargeArc="False" Point="30,18" RotationAngle="0" Size="4,4" SweepDirection="Clockwise"/>
                                    <LineSegment Point="29,32" IsStroked="True"/>
                                    <LineSegment Point="21,32" IsStroked="True"/>
                                    <LineSegment Point="20,18" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="22,15" RotationAngle="0" Size="4,4" SweepDirection="Clockwise"/>
                                    <LineSegment Point="28,15" IsStroked="True"/>
                                </PathFigure>
                            </PathGeometry>
                        </Path.Data>
                    </Path>

                    <Path Fill="#FFFFFFFF" Stroke="#FF000000" StrokeThickness="3">
                        <Path.Data>
                            <PathGeometry>
                                <PathFigure StartPoint="10,40">
                                    <LineSegment Point="15,40" IsStroked="True"/>
                                    <LineSegment Point="40,15" IsStroked="True"/>
                                    <LineSegment Point="50,15" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="50,25" RotationAngle="0" Size="5,5" SweepDirection="Clockwise"/>
                                    <LineSegment Point="45,25" IsStroked="True"/>
                                    <LineSegment Point="20,50" IsStroked="True"/>
                                    <LineSegment Point="10,50" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="10,40" RotationAngle="0" Size="5,5" SweepDirection="Clockwise"/>
                                    <LineSegment Point="10,40" IsStroked="True"/>
                                </PathFigure>
                            </PathGeometry>
                        </Path.Data>
                    </Path>
                </Canvas>
            </ControlTemplate>

            <ControlTemplate x:Key="UpEscalator" TargetType="Control">
                <Canvas Width="60" Height="60">
                    <Ellipse Width="5" Height="5" Fill="#FF000000" Canvas.Left="22.5" Canvas.Top="8"/>
                    <Path Fill="#FF000000">
                        <Path.Data>
                            <PathGeometry>
                                <PathFigure StartPoint="28,15">
                                    <ArcSegment IsLargeArc="False" Point="30,18" RotationAngle="0" Size="4,4" SweepDirection="Clockwise"/>
                                    <LineSegment Point="29,32" IsStroked="True"/>
                                    <LineSegment Point="21,32" IsStroked="True"/>
                                    <LineSegment Point="20,18" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="22,15" RotationAngle="0" Size="4,4" SweepDirection="Clockwise"/>
                                    <LineSegment Point="28,15" IsStroked="True"/>
                                </PathFigure>
                            </PathGeometry>
                        </Path.Data>
                    </Path>
                    
                    <Path Fill="#FFFFFFFF" Stroke="#FF000000" StrokeThickness="3">
                        <Path.Data>
                            <PathGeometry>
                                <PathFigure StartPoint="10,40">
                                    <LineSegment Point="15,40" IsStroked="True"/>
                                    <LineSegment Point="40,15" IsStroked="True"/>
                                    <LineSegment Point="50,15" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="50,25" RotationAngle="0" Size="5,5" SweepDirection="Clockwise"/>
                                    <LineSegment Point="45,25" IsStroked="True"/>
                                    <LineSegment Point="20,50" IsStroked="True"/>
                                    <LineSegment Point="10,50" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="10,40" RotationAngle="0" Size="5,5" SweepDirection="Clockwise"/>
                                    <LineSegment Point="10,40" IsStroked="True"/>
                                </PathFigure>
                            </PathGeometry>
                        </Path.Data>
                    </Path>
                    
                    <Polygon Fill="#FF000000" Points="53,37 53,47 50,50 50,42 42,50 40,48 48,40 40,40 43,37"/>
                </Canvas>
            </ControlTemplate>

            <ControlTemplate x:Key="DownEscalator" TargetType="Control">
                <Canvas Width="60" Height="60" RenderTransformOrigin="0.5,0.5">
                    <Ellipse Width="5" Height="5" Fill="#FF000000" Canvas.Left="22.5" Canvas.Top="8"/>
                    <Path Fill="#FF000000">
                        <Path.Data>
                            <PathGeometry>
                                <PathFigure StartPoint="28,15">
                                    <ArcSegment IsLargeArc="False" Point="30,18" RotationAngle="0" Size="4,4" SweepDirection="Clockwise"/>
                                    <LineSegment Point="29,32" IsStroked="True"/>
                                    <LineSegment Point="21,32" IsStroked="True"/>
                                    <LineSegment Point="20,18" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="22,15" RotationAngle="0" Size="4,4" SweepDirection="Clockwise"/>
                                    <LineSegment Point="28,15" IsStroked="True"/>
                                </PathFigure>
                            </PathGeometry>
                        </Path.Data>
                    </Path>

                    <Path Fill="#FFFFFFFF" Stroke="#FF000000" StrokeThickness="3">
                        <Path.Data>
                            <PathGeometry>
                                <PathFigure StartPoint="10,40">
                                    <LineSegment Point="15,40" IsStroked="True"/>
                                    <LineSegment Point="40,15" IsStroked="True"/>
                                    <LineSegment Point="50,15" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="50,25" RotationAngle="0" Size="5,5" SweepDirection="Clockwise"/>
                                    <LineSegment Point="45,25" IsStroked="True"/>
                                    <LineSegment Point="20,50" IsStroked="True"/>
                                    <LineSegment Point="10,50" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="10,40" RotationAngle="0" Size="5,5" SweepDirection="Clockwise"/>
                                    <LineSegment Point="10,40" IsStroked="True"/>
                                </PathFigure>
                            </PathGeometry>
                        </Path.Data>
                    </Path>
                    
                    <Polygon Fill="#FF000000" Points="40,50 40,40 43,37 43,45 51,37 53,39 45,47 53,47 50,50"/>
                    <Canvas.RenderTransform>
                        <ScaleTransform ScaleX="-1"/>
                    </Canvas.RenderTransform>
                </Canvas>
            </ControlTemplate>

            <ControlTemplate x:Key="Elevator" TargetType="Control">
                <Canvas Width="60" Height="60">
                    <Polygon Fill="#FF000000" Points="21,20 29,13 29,9 23,14 23,2 19,2 19,14 13,9 13,13"/>
                    <Polygon Fill="#FF000000" Points="39,2 47,9 47,13 41,8 41,20 37,20 37,8 31,13 31,9"/>
                    <Rectangle Stroke="#FF000000" StrokeThickness="3.5" Width="36" Height="34" Canvas.Left="12" Canvas.Bottom="5"/>

                    <Ellipse Width="3" Height="3" Fill="#FF000000" Canvas.Left="19.5" Canvas.Top="30"/>
                    <Path Fill="#FF000000">
                        <Path.Data>
                            <PathGeometry>
                                <PathFigure StartPoint="21,34">
                                    <LineSegment Point="19,34" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="17,38" RotationAngle="0" Size="4,4" SweepDirection="Counterclockwise"/>
                                    <LineSegment Point="17,40" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="18,42" RotationAngle="0" Size="2,2" SweepDirection="Counterclockwise"/>
                                    <LineSegment Point="18,50" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="20,50" RotationAngle="0" Size="1,1" SweepDirection="Counterclockwise"/>
                                    <LineSegment Point="21,42" IsStroked="True"/>
                                    <LineSegment Point="22,50" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="24,50" RotationAngle="0" Size="1,1" SweepDirection="Counterclockwise"/>
                                    <LineSegment Point="24,42" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="25,40" RotationAngle="0" Size="2,2" SweepDirection="Counterclockwise"/>
                                    <LineSegment Point="25,38" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="23,34" RotationAngle="0" Size="4,4" SweepDirection="Counterclockwise"/>
                                </PathFigure>
                            </PathGeometry>
                        </Path.Data>
                    </Path>
                    
                    <Ellipse Width="3" Height="3" Fill="#FF000000" Canvas.Left="28.5" Canvas.Top="30"/>
                    <Path Fill="#FF000000">
                        <Path.Data>
                            <PathGeometry>
                                <PathFigure StartPoint="30,34">
                                    <LineSegment Point="28,34" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="26,38" RotationAngle="0" Size="4,4" SweepDirection="Counterclockwise"/>
                                    <LineSegment Point="26,40" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="27,42" RotationAngle="0" Size="2,2" SweepDirection="Counterclockwise"/>
                                    <LineSegment Point="27,50" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="29,50" RotationAngle="0" Size="1,1" SweepDirection="Counterclockwise"/>
                                    <LineSegment Point="30,42" IsStroked="True"/>
                                    <LineSegment Point="31,50" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="33,50" RotationAngle="0" Size="1,1" SweepDirection="Counterclockwise"/>
                                    <LineSegment Point="33,42" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="34,40" RotationAngle="0" Size="2,2" SweepDirection="Counterclockwise"/>
                                    <LineSegment Point="34,38" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="32,34" RotationAngle="0" Size="4,4" SweepDirection="Counterclockwise"/>
                                </PathFigure>
                            </PathGeometry>
                        </Path.Data>
                    </Path>

                    <Ellipse Width="3" Height="3" Fill="#FF000000" Canvas.Left="37.5" Canvas.Top="30"/>
                    <Path Fill="#FF000000">
                        <Path.Data>
                            <PathGeometry>
                                <PathFigure StartPoint="39,34">
                                    <LineSegment Point="37,34" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="35,38" RotationAngle="0" Size="4,4" SweepDirection="Counterclockwise"/>
                                    <LineSegment Point="35,40" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="36,42" RotationAngle="0" Size="2,2" SweepDirection="Counterclockwise"/>
                                    <LineSegment Point="36,50" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="38,50" RotationAngle="0" Size="1,1" SweepDirection="Counterclockwise"/>
                                    <LineSegment Point="39,42" IsStroked="True"/>
                                    <LineSegment Point="40,50" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="42,50" RotationAngle="0" Size="1,1" SweepDirection="Counterclockwise"/>
                                    <LineSegment Point="42,42" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="43,40" RotationAngle="0" Size="2,2" SweepDirection="Counterclockwise"/>
                                    <LineSegment Point="43,38" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="41,34" RotationAngle="0" Size="4,4" SweepDirection="Counterclockwise"/>
                                </PathFigure>
                            </PathGeometry>
                        </Path.Data>
                    </Path>
                </Canvas>
            </ControlTemplate>
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <Viewbox Stretch="Fill">
                        <Border Width="64" Height="64" Background="#FFFFFFFF" BorderBrush="#FF000000" BorderThickness="2" CornerRadius="4">
                            <Control Name="View" Template="{StaticResource Stairs}" RenderTransformOrigin="0.5,0.5"/>
                        </Border>
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Key}" Value="UpEscalator">
                            <Setter TargetName="View" Property="Template" Value="{StaticResource UpEscalator}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Key}" Value="DownEscalator">
                            <Setter TargetName="View" Property="Template" Value="{StaticResource DownEscalator}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Key}" Value="Escalator">
                            <Setter TargetName="View" Property="Template" Value="{StaticResource Escalator}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Key}" Value="Elevator">
                            <Setter TargetName="View" Property="Template" Value="{StaticResource Elevator}"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Direction}" Value="Opposite">
                            <Setter TargetName="View" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="-1"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>                        
                        <DataTrigger Binding="{Binding Direction}" Value="None">
                            <Setter TargetName="View" Property="FlowDirection" Value="LeftToRight"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TranferListOfDetailedRouteMap" TargetType="ItemsControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ItemsControl">
                    <Viewbox Name="Container" Margin="2,0" Width="100" Height="140" VerticalAlignment="Top" StretchDirection="DownOnly" HorizontalAlignment="Left">
                        <StackPanel IsItemsHost="True"/>
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding DataContext.OptionalArea.Language, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Value="English">
                            <Setter TargetName="Container" Property="Height" Value="160"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Margin="0,2" Orientation="Horizontal" DataContext="{Binding LineInfo}">
                        <ctrl:LineIcon x:Name="LineIcon" Style="{StaticResource LineIcon}" DataContext="{Binding Icons[0]}" Width="16" Height="16" HorizontalAlignment="Left" VerticalAlignment="Top" IconType="{Binding IconType}" PrimaryLineColor="{Binding LineColor}" SecondaryLineColor="{Binding LineColor2}" LineLetter="{Binding LineLetter}" LineLetterColor="{StaticResource ActiveText}"/>
                        <Viewbox Margin="2,0,0,0" Width="82" MinHeight="18" MaxHeight="54" Stretch="Fill" StretchDirection="DownOnly" HorizontalAlignment="Left" VerticalAlignment="Top">
                            <TextBlock Name="LineName" FontFamily="Microsoft Sans Serif" FontSize="16" Foreground="{StaticResource ActiveText}" Text="{Binding Kanji}"/>
                        </Viewbox>
                    </StackPanel>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding DataContext.OptionalArea.Language, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="English">
                            <Setter TargetName="LineName" Property="Text" Value="{Binding English}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding DataContext.StationState, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Default">
                            <Setter TargetName="LineIcon" Property="PrimaryLineColor" Value="{StaticResource InactiveText}"/>
                            <Setter TargetName="LineIcon" Property="SecondaryLineColor" Value="{StaticResource InactiveText}"/>
                            <Setter TargetName="LineIcon" Property="LineLetterColor" Value="{StaticResource InactiveText}"/>
                            <Setter TargetName="LineName" Property="Foreground" Value="{StaticResource InactiveText}"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DetailedRouteMapList" TargetType="ItemsControl">
        <Setter Property="AlternationCount" Value="8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ItemsControl">
                    <StackPanel Name="Host" IsItemsHost="True" Orientation="Horizontal" HorizontalAlignment="Right"/>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Side}" Value="Right">
                            <Setter TargetName="Host" Property="FlowDirection" Value="RightToLeft"/>
                            <Setter TargetName="Host" Property="HorizontalAlignment" Value="Left"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <DataTemplate.Resources>
                        <cvt:TransferDisplaySelector x:Key="TransferDisplaySelectorKanji" TargetMode="DetailedRouteMap" TargetLanguage="Kanji"/>
                        <cvt:TransferDisplaySelector x:Key="TransferDisplaySelectorEnglish" TargetMode="DetailedRouteMap" TargetLanguage="English"/>
                        <TranslateTransform x:Key="MarkerOffset" X="-52" PresentationOptions:Freeze="True"/>
                        <ControlTemplate x:Key="Marker" TargetType="Control">
                            <Canvas Width="52">
                                <Polygon Fill="#FFFFFFFF" Points="0,0, 28,0, 51,23, 28,46, 0,46, 23,23"/>
                                <Polygon Points="3,0, 25,0, 48,23, 25,46, 3,46, 26,23">
                                    <Polygon.Fill>
                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                            <GradientStop x:Name="GradientStop1" Color="#FFFF0000" Offset="0"/>
                                            <GradientStop x:Name="GradientStop2" Color="#FFC00000" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Polygon.Fill>
                                    <Polygon.Triggers>
                                        <EventTrigger RoutedEvent="Polygon.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="GradientStop1" Storyboard.TargetProperty="Color" Duration="0:0:1.5" RepeatBehavior="Forever">
                                                        <DiscreteColorKeyFrame KeyTime="0:0:0.75" Value="#FFCBCBCB"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="GradientStop2" Storyboard.TargetProperty="Color" Duration="0:0:1.5" RepeatBehavior="Forever">
                                                        <DiscreteColorKeyFrame KeyTime="0:0:0.75" Value="#FF9B9B9B"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Polygon.Triggers>
                                </Polygon>
                            </Canvas>
                        </ControlTemplate>
                    </DataTemplate.Resources>
                    <Grid Margin="-0.2,0">
                        <Canvas Name="LineColor" Margin="0,162,0,0" Height="46" VerticalAlignment="Top">
                            <Path Name="BeforeStation">
                                <Path.Fill>
                                    <MultiBinding Converter="{StaticResource BrushSelector}">
                                        <Binding Source="{StaticResource GradientLineColorBrushes}"/>
                                        <Binding Path="LineColorIndexAtBeforeStation"/>
                                    </MultiBinding>
                                </Path.Fill>
                                <Path.Data>
                                    <PathGeometry>
                                        <PathFigure StartPoint="0,0">
                                            <LineSegment Point="53,0" IsStroked="True"/>
                                            <LineSegment Point="53,46" IsStroked="True"/>
                                            <LineSegment Point="0,46" IsStroked="True"/>
                                            <LineSegment Point="0,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Path.Data>
                            </Path>
                            <Path Name="AfterStation">
                                <Path.Fill>
                                    <MultiBinding Converter="{StaticResource BrushSelector}">
                                        <Binding Source="{StaticResource GradientLineColorBrushes}"/>
                                        <Binding Path="LineColorIndexAtAfterStation"/>
                                    </MultiBinding>
                                </Path.Fill>
                                <Path.Data>
                                    <PathGeometry>
                                        <PathFigure StartPoint="52,0">
                                            <LineSegment Point="105,0" IsStroked="True"/>
                                            <LineSegment Point="105,46" IsStroked="True"/>
                                            <LineSegment Point="52,46" IsStroked="True"/>
                                            <LineSegment Point="52,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Path.Data>
                            </Path>
                            <ContentControl Canvas.Right="45" Canvas.Top="11" Width="40">
                                <TextBlock Name="Min" Visibility="Hidden" Foreground="#FFFFFFFF" FontFamily="Microsoft Sans Serif" FontSize="24" HorizontalAlignment="Center" Text="分"/>
                            </ContentControl>
                        </Canvas>
                        <StackPanel Name="Container" Width="105" FlowDirection="LeftToRight">
                            <ContentControl Name="hoge" Height="160">
                                <Viewbox Name="StationNameContainer" Width="155" Height="105" Stretch="Fill" StretchDirection="DownOnly" VerticalAlignment="Bottom">
                                    <ctrl:VerticalTextMultiLine x:Name="StationName" ItemsSource="{Binding StationName.Kanji, Converter={StaticResource SplitWithLinefeed}}"
                                                                AlternationCount="2"
                                                                FontFamily="Meiryo"
                                                                FontSize="36"
                                                                Foreground="{StaticResource InactiveText}"
                                                                IsVertical="True">
                                        <ctrl:VerticalTextMultiLine.Template>
                                            <ControlTemplate TargetType="ctrl:VerticalTextMultiLine">
                                                <StackPanel IsItemsHost="True"/>
                                            </ControlTemplate>
                                        </ctrl:VerticalTextMultiLine.Template>
                                        <ctrl:VerticalTextMultiLine.ItemContainerStyle>
                                            <Style TargetType="ContentPresenter">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Items.Count, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ctrl:VerticalTextMultiLine}}}" Value="2">
                                                        <Setter Property="Margin" Value="0,-3"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ctrl:VerticalTextMultiLine.ItemContainerStyle>
                                        <ctrl:VerticalTextMultiLine.ItemTemplate>
                                            <DataTemplate>
                                                <ctrl:VerticalTextControl x:Name="Text"
                                                                  AdvanceWidth="{Binding AdvanceWidth, RelativeSource={RelativeSource  Mode=FindAncestor, AncestorType={x:Type ctrl:VerticalTextMultiLine}}}"
                                                                  FontFamily="{Binding FontFamily, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ctrl:VerticalTextMultiLine}}}"
                                                                  FontSize="{Binding FontSize, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ctrl:VerticalTextMultiLine}}}"
                                                                  Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ctrl:VerticalTextMultiLine}}}"
                                                                  IsVertical="{Binding IsVertical, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ctrl:VerticalTextMultiLine}}}"
                                                                  Text="{Binding}"
                                                                  TextAlignment="Right"/>
                                                <DataTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding DataContext.OptionalArea.Language, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="English">
                                                        <Setter TargetName="Text" Property="TextAlignment" Value="Left"/>
                                                    </DataTrigger>
                                                    <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                                        <Setter TargetName="Text" Property="Margin" Value="16,0,0,0"/>
                                                    </Trigger>
                                                </DataTemplate.Triggers>
                                            </DataTemplate>
                                        </ctrl:VerticalTextMultiLine.ItemTemplate>
                                    </ctrl:VerticalTextMultiLine>
                                    <Viewbox.LayoutTransform>
                                        <RotateTransform Angle="90"/>
                                    </Viewbox.LayoutTransform>
                                </Viewbox>
                            </ContentControl>

                            <Grid Name="StationInfo" Margin="0,2" Height="46">
                                <ContentControl Width="22" Height="32">
                                    <Polygon Fill="#FFFFFFFF" Points="0,0, 6,0, 21,16, 6,31, 0,31, 15,16"/>
                                </ContentControl>
                                <TextBlock Name="ArrivalTime" Width="52" Height="36" Visibility="Hidden" FontFamily="Microsoft Sans Serif" FontSize="32" FontWeight="Bold" Foreground="{StaticResource ActiveText}" Text="{Binding ArrivalTime}" TextAlignment="Center" Background="#FFFFFFFF"/>
                                <Control Name="Marker"/>
                            </Grid>
                            <ContentControl Name="Transfers" FlowDirection="LeftToRight" DataContext="{Binding Transfer, Converter={StaticResource TransferDisplaySelectorKanji}}">
                                <ItemsControl ItemsSource="{Binding Lines}" Style="{StaticResource TranferListOfDetailedRouteMap}"/>
                            </ContentControl>
                        </StackPanel>
                    </Grid>
                    <DataTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding StationName.Kanji.Length}" Value="2"/>
                                <Condition Binding="{Binding DataContext.OptionalArea.Language, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Value="Kanji"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="StationName" Property="AdvanceWidth" Value="200"/>
                        </MultiDataTrigger>

                        <DataTrigger Binding="{Binding IsStartOfDetailedRouteMap}" Value="True">
                            <Setter TargetName="Container" Property="HorizontalAlignment" Value="Right"/>
                            <Setter TargetName="LineColor" Property="Width" Value="165"/>
                            <Setter TargetName="BeforeStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="36,0">
                                            <LineSegment Point="113,0" IsStroked="True"/>
                                            <LineSegment Point="113,46" IsStroked="True"/>
                                            <LineSegment Point="41,46" IsStroked="True"/>
                                            <ArcSegment IsLargeArc="False" Point="36,41" RotationAngle="0" Size="5,5" SweepDirection="Clockwise"/>
                                            <LineSegment Point="36,5" IsStroked="True"/>
                                            <ArcSegment IsLargeArc="False" Point="41,0" RotationAngle="0" Size="5,5" SweepDirection="Clockwise"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="AfterStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="112,0">
                                            <LineSegment Point="165,0" IsStroked="True"/>
                                            <LineSegment Point="165,46" IsStroked="True"/>
                                            <LineSegment Point="112,46" IsStroked="True"/>
                                            <LineSegment Point="112,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsStartOfDetailedRouteMap}" Value="True"/>
                                <Condition Binding="{Binding DataContext.DetailedRouteMap.Count, RelativeSource={RelativeSource AncestorType=ItemsControl}}" Value="8"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="LineColor" Property="Background" Value="{StaticResource DefaultLineGradient}"/>
                        </MultiDataTrigger>

                        <DataTrigger Binding="{Binding IsEndOfDetailedRouteMap}" Value="True">
                            <Setter TargetName="Container" Property="HorizontalAlignment" Value="Left"/>
                            <Setter TargetName="LineColor" Property="Width" Value="168"/>
                            <Setter TargetName="AfterStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="52,0">
                                            <LineSegment Point="123,0" IsStroked="True"/>
                                            <LineSegment Point="145,23" IsStroked="True"/>
                                            <LineSegment Point="123,46" IsStroked="True"/>
                                            <LineSegment Point="52,46" IsStroked="True"/>
                                            <LineSegment Point="52,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Min" Property="Visibility" Value="Visible"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding IsTerminal}" Value="True">
                            <Setter TargetName="AfterStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="52,0">
                                            <LineSegment Point="125,0" IsStroked="True"/>
                                            <ArcSegment IsLargeArc="False" Point="130,5" RotationAngle="0" Size="5,5" SweepDirection="Clockwise"/>
                                            <LineSegment Point="130,41" IsStroked="True"/>
                                            <ArcSegment IsLargeArc="False" Point="125,46" RotationAngle="0" Size="5,5" SweepDirection="Clockwise"/>
                                            <LineSegment Point="52,46" IsStroked="True"/>
                                            <LineSegment Point="52,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsTerminal}" Value="True"/>
                                <Condition Binding="{Binding IsLineEnd}" Value="False"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.Direction, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Value="Forward"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="LineColor" Property="Background" Value="{StaticResource DefaultLineGradient}"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsTerminal}" Value="True"/>
                                <Condition Binding="{Binding IsLineStart}" Value="False"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.Direction, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Value="Opposite"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="LineColor" Property="Background" Value="{StaticResource DefaultLineGradient}"/>
                        </MultiDataTrigger>

                        <DataTrigger Binding="{Binding IsOrigin}" Value="True">
                            <Setter TargetName="Transfers" Property="Visibility" Value="Hidden"/>
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsOrigin}" Value="True"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.TrainState, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Value="Stopping"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="LineColor" Property="Background" Value="#00000000"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsOrigin}" Value="True"/>
                                <Condition Binding="{Binding DataContext.DetailedRouteMap.Count, RelativeSource={RelativeSource AncestorType=ItemsControl}}" Value="8"/>
                                <Condition Binding="{Binding DataContext.DetailedRouteMap[7].IsTerminal, RelativeSource={RelativeSource AncestorType=ItemsControl}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="LineColor" Property="Background" Value="#00000000"/>
                        </MultiDataTrigger>

                        <DataTrigger Binding="{Binding IsOmissionStart}" Value="True">
                            <Setter TargetName="AfterStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="52,0">
                                            <LineSegment Point="102,0" IsStroked="True"/>
                                            <ArcSegment IsLargeArc="False" Point="102,22" RotationAngle="0" Size="8.5,12.5" SweepDirection="Clockwise"/>
                                            <ArcSegment IsLargeArc="False" Point="102,46" RotationAngle="0" Size="8,13.5" SweepDirection="Counterclockwise"/>
                                            <LineSegment Point="52,46" IsStroked="True"/>
                                            <LineSegment Point="52,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding IsOmissionEnd}" Value="True">
                            <Setter TargetName="BeforeStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="3,0">
                                            <LineSegment Point="53,0" IsStroked="True"/>
                                            <LineSegment Point="53,46" IsStroked="True"/>
                                            <LineSegment Point="5,46" IsStroked="True"/>
                                            <ArcSegment IsLargeArc="False" Point="3,24" RotationAngle="0" Size="8.5,12.5" SweepDirection="Clockwise"/>
                                            <ArcSegment IsLargeArc="False" Point="3,0" RotationAngle="0" Size="8,13.5" SweepDirection="Counterclockwise"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        
                        <DataTrigger Binding="{Binding IsCurrent}" Value="True">
                            <Setter TargetName="Marker" Property="Template" Value="{StaticResource Marker}"/>
                        </DataTrigger>
                        
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsCurrent}" Value="True"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.TrainState, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Value="Running"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Marker" Property="RenderTransform" Value="{StaticResource MarkerOffset}"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsCurrent}" Value="True"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.TrainState, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Value="Arriving"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Marker" Property="RenderTransform" Value="{StaticResource MarkerOffset}"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsCurrent}" Value="True"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.TrainState, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Value="Stopping"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ArrivalTime" Property="Foreground" Value="#00000000"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsCurrent}" Value="True"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.TrainState, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Value="Departing"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ArrivalTime" Property="Foreground" Value="#00000000"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsCurrent}" Value="True"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.TrainState, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Value="Stopping"/>
                                <Condition Binding="{Binding IsOrigin}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="BeforeStation" Property="Fill" Value="{StaticResource DefaultLineGradient}"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsCurrent}" Value="True"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.TrainState, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Value="Departing"/>
                                <Condition Binding="{Binding IsOrigin}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="BeforeStation" Property="Fill" Value="{StaticResource DefaultLineGradient}"/>
                        </MultiDataTrigger>

                        <DataTrigger Binding="{Binding StationState}" Value="Stop">
                            <Setter TargetName="StationName" Property="Foreground" Value="{StaticResource ActiveText}"/>
                            <Setter TargetName="ArrivalTime" Property="Visibility" Value="Visible"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding StationState}" Value="Default">
                            <Setter TargetName="BeforeStation" Property="Fill" Value="{StaticResource DefaultLineGradient}"/>
                            <Setter TargetName="AfterStation" Property="Fill" Value="{StaticResource DefaultLineGradient}"/>
                            <Setter TargetName="StationInfo" Property="Visibility" Value="Hidden"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding DataContext.OptionalArea.Language, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Value="English">
                            <Setter TargetName="StationName" Property="ItemsSource" Value="{Binding StationName.English, Converter={StaticResource SplitWithLinefeed}}"/>
                            <Setter TargetName="StationName" Property="FontFamily" Value="Microsoft Sans Serif"/>
                            <Setter TargetName="StationName" Property="IsVertical" Value="False"/>
                            <Setter TargetName="StationName" Property="HorizontalAlignment" Value="Left"/>
                            <Setter TargetName="StationNameContainer" Property="Width" Value="160"/>

                            <Setter TargetName="StationNameContainer" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="270"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="hoge" Property="RenderTransformOrigin" Value="0,0.5"/>
                            <Setter TargetName="hoge" Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform Angle="30"/>
                                        <TranslateTransform X="28" Y="-20"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Min" Property="Text" Value="min"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding DataContext.Side, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Value="Right">
                            <Setter TargetName="StationInfo" Property="FlowDirection" Value="RightToLeft"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RouteMapList" TargetType="ItemsControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ItemsControl">
                    <StackPanel Name="Host" IsItemsHost="True" Orientation="Horizontal"/>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding DataContext.TrainInfo.Direction, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Value="Forward"/>
                                <Condition Binding="{Binding DataContext.Side, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Value="Right"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Host" Property="FlowDirection" Value="RightToLeft"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding DataContext.TrainInfo.Direction, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Value="Opposite"/>
                                <Condition Binding="{Binding DataContext.Side, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Value="Left"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Host" Property="FlowDirection" Value="RightToLeft"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ContentPresenter">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding DataContext.TrainInfo.Direction, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Opposite">
                            <Setter Property="Panel.ZIndex" Value="{Binding StationId, Converter={StaticResource ReverseSignConverter}}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <DataTemplate.Resources>
                        <RotateTransform x:Key="VerticalText" Angle="90" PresentationOptions:Freeze="True"/>
                        <RotateTransform x:Key="EnglishText" Angle="210" CenterX="36" CenterY="61" PresentationOptions:Freeze="True"/>
                        <TranslateTransform x:Key="MarkerOffset" X="-30" PresentationOptions:Freeze="True"/>
                        <ControlTemplate x:Key="Marker" TargetType="Control">
                            <Canvas Name="Marker" Width="34">
                                <Polygon Fill="#FFFFFFFF" Points="0,0, 18,0, 33,16, 18,32, 0,32, 15,16"/>
                                <Polygon Name="Flasher" Points="2,0, 16,0, 31,16, 16,32, 2,32, 17,16">
                                    <Polygon.Fill>
                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                            <GradientStop x:Name="GradientStop1" Color="#FFFF0000" Offset="0"/>
                                            <GradientStop x:Name="GradientStop2" Color="#FFC00000" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Polygon.Fill>
                                    <Polygon.Triggers>
                                        <EventTrigger RoutedEvent="Polygon.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="GradientStop1" Storyboard.TargetProperty="Color" Duration="0:0:1.5" RepeatBehavior="Forever">
                                                        <DiscreteColorKeyFrame KeyTime="0:0:0.75" Value="#FFCBCBCB"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="GradientStop2" Storyboard.TargetProperty="Color" Duration="0:0:1.5" RepeatBehavior="Forever">
                                                        <DiscreteColorKeyFrame KeyTime="0:0:0.75" Value="#FF9B9B9B"/>
                                                    </ColorAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Polygon.Triggers>
                                </Polygon>
                            </Canvas>
                        </ControlTemplate>
                    </DataTemplate.Resources>
                    <Grid Margin="-0.2,0">
                        <Canvas Name="LineColor" Margin="0,132,0,0" Width="55" Height="32" VerticalAlignment="Top">
                            <Path Name="BeforeStation">
                                <Path.Fill>
                                    <MultiBinding Converter="{StaticResource BrushSelector}">
                                        <Binding Source="{StaticResource GradientLineColorBrushes}"/>
                                        <Binding Path="LineColorIndexAtBeforeStation"/>
                                    </MultiBinding>
                                </Path.Fill>
                                <Path.Data>
                                    <PathGeometry>
                                        <PathFigure StartPoint="0,0">
                                            <LineSegment Point="28,0" IsStroked="True"/>
                                            <LineSegment Point="28,32" IsStroked="True"/>
                                            <LineSegment Point="0,32" IsStroked="True"/>
                                            <LineSegment Point="0,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Path.Data>
                            </Path>
                            <Path Name="AfterStation">
                                <Path.Fill>
                                    <MultiBinding Converter="{StaticResource BrushSelector}">
                                        <Binding Source="{StaticResource GradientLineColorBrushes}"/>
                                        <Binding Path="LineColorIndexAtAfterStation"/>
                                    </MultiBinding>
                                </Path.Fill>
                                <Path.Data>
                                    <PathGeometry>
                                        <PathFigure StartPoint="27,0">
                                            <LineSegment Point="55,0" IsStroked="True"/>
                                            <LineSegment Point="55,32" IsStroked="True"/>
                                            <LineSegment Point="27,32" IsStroked="True"/>
                                            <LineSegment Point="27,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Path.Data>
                            </Path>
                            <Control Name="Option"/>
                        </Canvas>
                        <StackPanel Name="Container" Width="55" FlowDirection="LeftToRight">
                            <ContentControl Name="StationNameArea" Height="130">
                                <Viewbox Name="StationNameContainer" Width="124" Height="55" Stretch="Fill" StretchDirection="DownOnly" VerticalAlignment="Bottom">
                                    <ctrl:VerticalTextMultiLine x:Name="StationName" ItemsSource="{Binding StationName.Kanji, Converter={StaticResource SplitWithLinefeed}}"
                                                                AlternationCount="2"
                                                                FontFamily="Meiryo"
                                                                FontSize="30"
                                                                Foreground="{StaticResource InactiveText}"
                                                                IsVertical="True">
                                        <ctrl:VerticalTextMultiLine.Template>
                                            <ControlTemplate TargetType="ctrl:VerticalTextMultiLine">
                                                <StackPanel IsItemsHost="True"/>
                                            </ControlTemplate>
                                        </ctrl:VerticalTextMultiLine.Template>
                                        <ctrl:VerticalTextMultiLine.ItemContainerStyle>
                                            <Style TargetType="ContentPresenter">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Items.Count, RelativeSource={RelativeSource AncestorType={x:Type ctrl:VerticalTextMultiLine}}}" Value="2">
                                                        <Setter Property="Margin" Value="0,-3"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ctrl:VerticalTextMultiLine.ItemContainerStyle>
                                        <ctrl:VerticalTextMultiLine.ItemTemplate>
                                            <DataTemplate>
                                                <ctrl:VerticalTextControl x:Name="Text"
                                                                  AdvanceWidth="{Binding AdvanceWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ctrl:VerticalTextMultiLine}}}"
                                                                  FontFamily="{Binding FontFamily, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ctrl:VerticalTextMultiLine}}}"
                                                                  FontSize="{Binding FontSize, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ctrl:VerticalTextMultiLine}}}"
                                                                  Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ctrl:VerticalTextMultiLine}}}"
                                                                  IsVertical="{Binding IsVertical, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ctrl:VerticalTextMultiLine}}}"
                                                                  Text="{Binding}"
                                                                  TextAlignment="Right"/>
                                                <DataTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding DataContext.OptionalArea.Language, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ctrl:NextStationView}}}" Value="English">
                                                        <Setter TargetName="Text" Property="TextAlignment" Value="Left"/>
                                                    </DataTrigger>
                                                    <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                                        <Setter TargetName="Text" Property="Margin" Value="26,0,0,0"/>
                                                    </Trigger>
                                                </DataTemplate.Triggers>
                                            </DataTemplate>
                                        </ctrl:VerticalTextMultiLine.ItemTemplate>
                                    </ctrl:VerticalTextMultiLine>
                                    <Viewbox.LayoutTransform>
                                        <RotateTransform Angle="90"/>
                                    </Viewbox.LayoutTransform>
                                </Viewbox>
                            </ContentControl>
                            <Grid Name="StationInfo" Margin="0,2" Height="32">
                                <ContentControl Width="16" Height="22" Margin="0,2,0,0">
                                    <Polygon Fill="#FFFFFFFF" Points="0,0, 5,0, 16,11, 5,21, 0,21, 11,11"/>
                                </ContentControl>
                                <TextBlock Name="ArrivalTime" Height="24" Width="31" Visibility="Collapsed" FontFamily="Microsoft Sans Serif" FontSize="23" FontWeight="Bold" Foreground="{StaticResource ActiveText}" Text="{Binding ArrivalTime}" TextAlignment="Center" Background="#FFFFFFFF"/>
                                <Control Name="Marker"/>
                            </Grid>
                        </StackPanel>
                    </Grid>

                    <DataTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding DataContext.OptionalArea.Language, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Kanji"/>
                                <Condition Binding="{Binding StationName.Kanji.Length}" Value="2"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="StationName" Property="AdvanceWidth" Value="150"/>
                        </MultiDataTrigger>

                        <DataTrigger Binding="{Binding DataContext.TrainInfo.Direction, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Opposite">
                            <Setter TargetName="BeforeStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="27,0">
                                            <LineSegment Point="55,0" IsStroked="True"/>
                                            <LineSegment Point="55,32" IsStroked="True"/>
                                            <LineSegment Point="27,32" IsStroked="True"/>
                                            <LineSegment Point="27,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="AfterStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="0,0">
                                            <LineSegment Point="28,0" IsStroked="True"/>
                                            <LineSegment Point="28,32" IsStroked="True"/>
                                            <LineSegment Point="0,32" IsStroked="True"/>
                                            <LineSegment Point="0,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsLineStart}" Value="True"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.Direction, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Forward"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Container" Property="HorizontalAlignment" Value="Right"/>
                            <Setter TargetName="LineColor" Property="Margin" Value="15,132,0,0"/>
                            <Setter TargetName="LineColor" Property="Width" Value="80"/>
                            <Setter TargetName="BeforeStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="0,0">
                                            <LineSegment Point="55,0" IsStroked="True"/>
                                            <LineSegment Point="55,32" IsStroked="True"/>
                                            <LineSegment Point="5,32" IsStroked="True"/>
                                            <ArcSegment IsLargeArc="False" Point="0,27" RotationAngle="0" Size="5,5" SweepDirection="Clockwise"/>
                                            <LineSegment Point="0,5" IsStroked="True"/>
                                            <ArcSegment IsLargeArc="False" Point="5,0" RotationAngle="0" Size="5,5" SweepDirection="Clockwise"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="AfterStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="54,0">
                                            <LineSegment Point="80,0" IsStroked="True"/>
                                            <LineSegment Point="80,32" IsStroked="True"/>
                                            <LineSegment Point="54,32" IsStroked="True"/>
                                            <LineSegment Point="54,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsLineStart}" Value="True"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.Direction, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Opposite"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Container" Property="HorizontalAlignment" Value="Right"/>
                            <Setter TargetName="LineColor" Property="Margin" Value="25,132,0,0"/>
                            <Setter TargetName="LineColor" Property="Width" Value="80"/>
                            <Setter TargetName="AfterStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="0,0">
                                            <LineSegment Point="55,0" IsStroked="True"/>
                                            <LineSegment Point="55,32" IsStroked="True"/>
                                            <LineSegment Point="5,32" IsStroked="True"/>
                                            <ArcSegment IsLargeArc="False" Point="0,27" RotationAngle="0" Size="5,5" SweepDirection="Clockwise"/>
                                            <LineSegment Point="0,5" IsStroked="True"/>
                                            <ArcSegment IsLargeArc="False" Point="5,0" RotationAngle="0" Size="5,5" SweepDirection="Clockwise"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="BeforeStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="54,0">
                                            <LineSegment Point="80,0" IsStroked="True"/>
                                            <LineSegment Point="80,32" IsStroked="True"/>
                                            <LineSegment Point="54,32" IsStroked="True"/>
                                            <LineSegment Point="54,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Option" Property="Canvas.Top" Value="8"/>
                            <Setter TargetName="Option" Property="Canvas.Left" Value="8"/>
                            <Setter TargetName="Option" Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Control">
                                        <Viewbox HorizontalAlignment="Left" Width="28" Stretch="Fill" StretchDirection="DownOnly">
                                            <TextBlock Name="Min" Foreground="#FFFFFFFF" FontFamily="Microsoft Sans Serif" FontSize="20" Text="分"/>
                                        </Viewbox>
                                        <ControlTemplate.Triggers>
                                            <DataTrigger Binding="{Binding DataContext.OptionalArea.Language, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="English">
                                                <Setter TargetName="Min" Property="Text" Value="min"/>
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding DataContext.TrainInfo.Direction, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Forward"/>
                                <Condition Binding="{Binding IsOrigin}" Value="True"/>
                                <Condition Binding="{Binding IsLineStart}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="LineColor" Property="Background" Value="{StaticResource DefaultLineGradient}"/>
                            <Setter TargetName="BeforeStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="0,0">
                                            <LineSegment Point="28,0" IsStroked="True"/>
                                            <LineSegment Point="28,32" IsStroked="True"/>
                                            <LineSegment Point="5,32" IsStroked="True"/>
                                            <ArcSegment IsLargeArc="False" Point="0,27" RotationAngle="0" Size="5,5" SweepDirection="Clockwise"/>
                                            <LineSegment Point="0,5" IsStroked="True"/>
                                            <ArcSegment IsLargeArc="False" Point="5,0" RotationAngle="0" Size="5,5" SweepDirection="Clockwise"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding DataContext.TrainInfo.Direction, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Opposite"/>
                                <Condition Binding="{Binding IsOrigin}" Value="True"/>
                                <Condition Binding="{Binding IsLineEnd}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="LineColor" Property="Background" Value="{StaticResource DefaultLineGradient}"/>
                            <Setter TargetName="BeforeStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="27,0">
                                            <LineSegment Point="50,0" IsStroked="True"/>
                                            <ArcSegment IsLargeArc="False" Point="55,5" RotationAngle="0" Size="5,5" SweepDirection="Clockwise"/>
                                            <LineSegment Point="55,27" IsStroked="True"/>
                                            <ArcSegment IsLargeArc="False" Point="50,32" RotationAngle="0" Size="5,5" SweepDirection="Clockwise"/>
                                            <LineSegment Point="27,32" IsStroked="True"/>
                                            <LineSegment Point="27,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding DataContext.TrainInfo.Direction, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Forward"/>
                                <Condition Binding="{Binding IsTerminal}" Value="True"/>
                                <Condition Binding="{Binding IsLineEnd}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="LineColor" Property="Background" Value="{StaticResource DefaultLineGradient}"/>
                            <Setter TargetName="AfterStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="27,0">
                                            <LineSegment Point="50,0" IsStroked="True"/>
                                            <ArcSegment IsLargeArc="False" Point="55,5" RotationAngle="0" Size="5,5" SweepDirection="Clockwise"/>
                                            <LineSegment Point="55,27" IsStroked="True"/>
                                            <ArcSegment IsLargeArc="False" Point="50,32" RotationAngle="0" Size="5,5" SweepDirection="Clockwise"/>
                                            <LineSegment Point="27,32" IsStroked="True"/>
                                            <LineSegment Point="27,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding DataContext.TrainInfo.Direction, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Opposite"/>
                                <Condition Binding="{Binding IsTerminal}" Value="True"/>
                                <Condition Binding="{Binding IsLineStart}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="LineColor" Property="Background" Value="{StaticResource DefaultLineGradient}"/>
                            <Setter TargetName="AfterStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="0,0">
                                            <LineSegment Point="28,0" IsStroked="True"/>
                                            <LineSegment Point="28,32" IsStroked="True"/>
                                            <LineSegment Point="5,32" IsStroked="True"/>
                                            <ArcSegment IsLargeArc="False" Point="0,27" RotationAngle="0" Size="5,5" SweepDirection="Clockwise"/>
                                            <LineSegment Point="0,5" IsStroked="True"/>
                                            <ArcSegment IsLargeArc="False" Point="5,0" RotationAngle="0" Size="5,5" SweepDirection="Clockwise"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsLineEnd}" Value="True"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.Direction, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Forward"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Container" Property="HorizontalAlignment" Value="Left"/>
                            <Setter TargetName="LineColor" Property="Width" Value="80"/>
                            <Setter TargetName="AfterStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="27,0">
                                            <LineSegment Point="75,0" IsStroked="True"/>
                                            <ArcSegment IsLargeArc="False" Point="80,5" RotationAngle="0" Size="5,5" SweepDirection="Clockwise"/>
                                            <LineSegment Point="80,27" IsStroked="True"/>
                                            <ArcSegment IsLargeArc="False" Point="75,32" RotationAngle="0" Size="5,5" SweepDirection="Clockwise"/>
                                            <LineSegment Point="27,32" IsStroked="True"/>
                                            <LineSegment Point="27,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Option" Property="Margin" Value="50,8,0,0"/>
                            <Setter TargetName="Option" Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Control">
                                        <Viewbox HorizontalAlignment="Left" Margin="-2,0" Width="28" Stretch="Fill" StretchDirection="DownOnly">
                                            <TextBlock Name="Min" Foreground="#FFFFFFFF" FontFamily="Microsoft Sans Serif" FontSize="20" Text="分"/>
                                        </Viewbox>
                                        <ControlTemplate.Triggers>
                                            <DataTrigger Binding="{Binding DataContext.OptionalArea.Language, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="English">
                                                <Setter TargetName="Min" Property="Text" Value="min"/>
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsLineEnd}" Value="True"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.Direction, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Opposite"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Container" Property="HorizontalAlignment" Value="Left"/>
                            <Setter TargetName="LineColor" Property="Width" Value="75"/>
                            <Setter TargetName="BeforeStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="27,0">
                                            <LineSegment Point="70,0" IsStroked="True"/>
                                            <ArcSegment IsLargeArc="False" Point="75,5" RotationAngle="0" Size="5,5" SweepDirection="Clockwise"/>
                                            <LineSegment Point="75,27" IsStroked="True"/>
                                            <ArcSegment IsLargeArc="False" Point="70,32" RotationAngle="0" Size="5,5" SweepDirection="Clockwise"/>
                                            <LineSegment Point="27,32" IsStroked="True"/>
                                            <LineSegment Point="27,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsRouteMapBlockEnd}" Value="True"/>
                                <Condition Binding="{Binding IsLineEnd}" Value="False"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.Direction, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Forward"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Container" Property="HorizontalAlignment" Value="Left"/>
                            <Setter TargetName="LineColor" Property="Width" Value="110"/>
                            <Setter TargetName="AfterStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="27,0">
                                            <LineSegment Point="72,0" IsStroked="True"/>
                                            <LineSegment Point="87,16" IsStroked="True"/>
                                            <LineSegment Point="72,32" IsStroked="True"/>
                                            <LineSegment Point="27,32" IsStroked="True"/>
                                            <LineSegment Point="27,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Option" Property="Margin" Value="75,0,0,0"/>
                            <Setter TargetName="Option" Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Control">
                                        <Grid>
                                            <Viewbox HorizontalAlignment="Left" Margin="-26,5,0,-2" Width="28" Stretch="Fill" StretchDirection="DownOnly">
                                                <TextBlock Name="Min" Foreground="#FFFFFFFF" FontFamily="Microsoft Sans Serif" FontSize="20" Text="分"/>
                                            </Viewbox>
                                            <Path Fill="{Binding ElementName=AfterStation, Path=Fill}">
                                                <Path.Data>
                                                    <PathGeometry>
                                                        <PathFigure StartPoint="0,0">
                                                            <LineSegment Point="5,0" IsStroked="True"/>
                                                            <LineSegment Point="20,16" IsStroked="True"/>
                                                            <LineSegment Point="5,32" IsStroked="True"/>
                                                            <LineSegment Point="0,32" IsStroked="True"/>
                                                            <LineSegment Point="15,16" IsStroked="True"/>
                                                            <LineSegment Point="0,0" IsStroked="True"/>
                                                        </PathFigure>
                                                    </PathGeometry>
                                                </Path.Data>
                                            </Path>
                                            <Path Fill="{Binding ElementName=AfterStation, Path=Fill}">
                                                <Path.Data>
                                                    <PathGeometry>
                                                        <PathFigure StartPoint="8,0">
                                                            <LineSegment Point="13,0" IsStroked="True"/>
                                                            <LineSegment Point="28,16" IsStroked="True"/>
                                                            <LineSegment Point="13,32" IsStroked="True"/>
                                                            <LineSegment Point="8,32" IsStroked="True"/>
                                                            <LineSegment Point="23,16" IsStroked="True"/>
                                                            <LineSegment Point="8,0" IsStroked="True"/>
                                                        </PathFigure>
                                                    </PathGeometry>
                                                </Path.Data>
                                            </Path>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <DataTrigger Binding="{Binding DataContext.OptionalArea.Language, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="English">
                                                <Setter TargetName="Min" Property="Text" Value="min"/>
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsRouteMapBlockEnd}" Value="True"/>
                                <Condition Binding="{Binding IsLineEnd}" Value="False"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.Direction, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Opposite"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Container" Property="HorizontalAlignment" Value="Left"/>
                            <Setter TargetName="LineColor" Property="Width" Value="90"/>
                            <Setter TargetName="BeforeStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="27,0">
                                            <LineSegment Point="70,0" IsStroked="True"/>
                                            <LineSegment Point="55,16" IsStroked="True"/>
                                            <LineSegment Point="70,32" IsStroked="True"/>
                                            <LineSegment Point="27,32" IsStroked="True"/>
                                            <LineSegment Point="27,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Option" Property="Margin" Value="58,0,0,0"/>
                            <Setter TargetName="Option" Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Control">
                                        <Grid>
                                            <Path Fill="{Binding ElementName=BeforeStation, Path=Fill}">
                                                <Path.Data>
                                                    <PathGeometry>
                                                        <PathFigure StartPoint="20,0">
                                                            <LineSegment Point="15,0" IsStroked="True"/>
                                                            <LineSegment Point="0,16" IsStroked="True"/>
                                                            <LineSegment Point="15,32" IsStroked="True"/>
                                                            <LineSegment Point="20,32" IsStroked="True"/>
                                                            <LineSegment Point="5,16" IsStroked="True"/>
                                                            <LineSegment Point="20,0" IsStroked="True"/>
                                                        </PathFigure>
                                                    </PathGeometry>
                                                </Path.Data>
                                            </Path>
                                            <Path Fill="{Binding ElementName=BeforeStation, Path=Fill}">
                                                <Path.Data>
                                                    <PathGeometry>
                                                        <PathFigure StartPoint="28,0">
                                                            <LineSegment Point="23,0" IsStroked="True"/>
                                                            <LineSegment Point="8,16" IsStroked="True"/>
                                                            <LineSegment Point="23,32" IsStroked="True"/>
                                                            <LineSegment Point="28,32" IsStroked="True"/>
                                                            <LineSegment Point="13,16" IsStroked="True"/>
                                                            <LineSegment Point="28,0" IsStroked="True"/>
                                                        </PathFigure>
                                                    </PathGeometry>
                                                </Path.Data>
                                            </Path>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsRouteMapBlockStart}" Value="True"/>
                                <Condition Binding="{Binding IsLineStart}" Value="False"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.Direction, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Forward"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Container" Property="HorizontalAlignment" Value="Right"/>
                            <Setter TargetName="LineColor" Property="Margin" Value="10,132,0,0"/>
                            <Setter TargetName="LineColor" Property="Width" Value="85"/>
                            <Setter TargetName="BeforeStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="16,0">
                                            <LineSegment Point="60,0" IsStroked="True"/>
                                            <LineSegment Point="60,32" IsStroked="True"/>
                                            <LineSegment Point="16,32" IsStroked="True"/>
                                            <LineSegment Point="31,16" IsStroked="True"/>
                                            <LineSegment Point="16,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="AfterStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="59,0">
                                            <LineSegment Point="85,0" IsStroked="True"/>
                                            <LineSegment Point="85,32" IsStroked="True"/>
                                            <LineSegment Point="59,32" IsStroked="True"/>
                                            <LineSegment Point="59,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Option" Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Control">
                                        <Canvas>
                                            <Path Fill="{Binding ElementName=BeforeStation, Path=Fill}">
                                                <Path.Data>
                                                    <PathGeometry>
                                                        <PathFigure StartPoint="0,0">
                                                            <LineSegment Point="5,0" IsStroked="True"/>
                                                            <LineSegment Point="20,16" IsStroked="True"/>
                                                            <LineSegment Point="5,32" IsStroked="True"/>
                                                            <LineSegment Point="0,32" IsStroked="True"/>
                                                            <LineSegment Point="15,16" IsStroked="True"/>
                                                            <LineSegment Point="0,0" IsStroked="True"/>
                                                        </PathFigure>
                                                    </PathGeometry>
                                                </Path.Data>
                                            </Path>
                                            <Path Fill="{Binding ElementName=BeforeStation, Path=Fill}">
                                                <Path.Data>
                                                    <PathGeometry>
                                                        <PathFigure StartPoint="8,0">
                                                            <LineSegment Point="13,0" IsStroked="True"/>
                                                            <LineSegment Point="28,16" IsStroked="True"/>
                                                            <LineSegment Point="13,32" IsStroked="True"/>
                                                            <LineSegment Point="8,32" IsStroked="True"/>
                                                            <LineSegment Point="23,16" IsStroked="True"/>
                                                            <LineSegment Point="8,0" IsStroked="True"/>
                                                        </PathFigure>
                                                    </PathGeometry>
                                                </Path.Data>
                                            </Path>
                                        </Canvas>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsRouteMapBlockStart}" Value="True"/>
                                <Condition Binding="{Binding IsLineStart}" Value="False"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.Direction, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Opposite"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Container" Property="HorizontalAlignment" Value="Right"/>
                            <Setter TargetName="LineColor" Property="Margin" Value="5,132,0,0"/>
                            <Setter TargetName="LineColor" Property="Width" Value="100"/>
                            <Setter TargetName="AfterStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="16,0">
                                            <LineSegment Point="75,0" IsStroked="True"/>
                                            <LineSegment Point="75,32" IsStroked="True"/>
                                            <LineSegment Point="31,32" IsStroked="True"/>
                                            <LineSegment Point="16,16" IsStroked="True"/>
                                            <LineSegment Point="31,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="BeforeStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="74,0">
                                            <LineSegment Point="100,0" IsStroked="True"/>
                                            <LineSegment Point="100,32" IsStroked="True"/>
                                            <LineSegment Point="74,32" IsStroked="True"/>
                                            <LineSegment Point="74,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Option" Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Control">
                                        <Canvas>
                                            <Viewbox HorizontalAlignment="Left" Margin="28,8,0,0" Width="28" Stretch="Fill" StretchDirection="DownOnly">
                                                <TextBlock Name="Min" Foreground="#FFFFFFFF" FontFamily="Microsoft Sans Serif" FontSize="20" Text="分"/>
                                            </Viewbox>
                                            <Path Fill="{Binding ElementName=AfterStation, Path=Fill}">
                                                <Path.Data>
                                                    <PathGeometry>
                                                        <PathFigure StartPoint="20,0">
                                                            <LineSegment Point="15,0" IsStroked="True"/>
                                                            <LineSegment Point="0,16" IsStroked="True"/>
                                                            <LineSegment Point="15,32" IsStroked="True"/>
                                                            <LineSegment Point="20,32" IsStroked="True"/>
                                                            <LineSegment Point="5,16" IsStroked="True"/>
                                                            <LineSegment Point="20,0" IsStroked="True"/>
                                                        </PathFigure>
                                                    </PathGeometry>
                                                </Path.Data>
                                            </Path>
                                            <Path Fill="{Binding ElementName=AfterStation, Path=Fill}">
                                                <Path.Data>
                                                    <PathGeometry>
                                                        <PathFigure StartPoint="28,0">
                                                            <LineSegment Point="23,0" IsStroked="True"/>
                                                            <LineSegment Point="8,16" IsStroked="True"/>
                                                            <LineSegment Point="23,32" IsStroked="True"/>
                                                            <LineSegment Point="28,32" IsStroked="True"/>
                                                            <LineSegment Point="13,16" IsStroked="True"/>
                                                            <LineSegment Point="28,0" IsStroked="True"/>
                                                        </PathFigure>
                                                    </PathGeometry>
                                                </Path.Data>
                                            </Path>
                                        </Canvas>
                                        <ControlTemplate.Triggers>
                                            <DataTrigger Binding="{Binding DataContext.OptionalArea.Language, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="English">
                                                <Setter TargetName="Min" Property="Text" Value="min"/>
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsCurrent}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Marker" Property="Template" Value="{StaticResource Marker}"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsCurrent}" Value="True"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.TrainState, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Running"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Marker" Property="RenderTransform" Value="{StaticResource MarkerOffset}"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsCurrent}" Value="True"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.TrainState, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Arriving"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Marker" Property="RenderTransform" Value="{StaticResource MarkerOffset}"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsCurrent}" Value="True"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.TrainState, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Stopping"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ArrivalTime" Property="Foreground" Value="#00000000"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsCurrent}" Value="True"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.TrainState, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Departing"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ArrivalTime" Property="Foreground" Value="#00000000"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsCurrent}" Value="True"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.TrainState, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Stopping"/>
                                <Condition Binding="{Binding IsOrigin}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="BeforeStation" Property="Fill" Value="{StaticResource DefaultLineGradient}"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsCurrent}" Value="True"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.TrainState, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Departing"/>
                                <Condition Binding="{Binding IsOrigin}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="BeforeStation" Property="Fill" Value="{StaticResource DefaultLineGradient}"/>
                        </MultiDataTrigger>

                        <DataTrigger Binding="{Binding StationState}" Value="Stop">
                            <Setter TargetName="StationName" Property="Foreground" Value="{StaticResource ActiveText}"/>
                            <Setter TargetName="ArrivalTime" Property="Visibility" Value="Visible"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding StationState}" Value="Default">
                            <Setter TargetName="BeforeStation" Property="Fill" Value="{StaticResource DefaultLineGradient}"/>
                            <Setter TargetName="AfterStation" Property="Fill" Value="{StaticResource DefaultLineGradient}"/>
                            <Setter TargetName="StationInfo" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding DataContext.OptionalArea.Language, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="English">
                            <Setter TargetName="StationName" Property="ItemsSource" Value="{Binding StationName.English, Converter={StaticResource SplitWithLinefeed}}"/>
                            <Setter TargetName="StationName" Property="FontFamily" Value="Microsoft Sans Serif"/>
                            <Setter TargetName="StationName" Property="IsVertical" Value="False"/>
                            <Setter TargetName="StationName" Property="HorizontalAlignment" Value="Left"/>
                            <Setter TargetName="StationNameContainer" Property="Width" Value="130"/>
                            <Setter TargetName="StationNameContainer" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="270"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="StationNameArea" Property="RenderTransformOrigin" Value="0,0.5"/>
                            <Setter TargetName="StationNameArea" Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform Angle="30"/>
                                        <TranslateTransform X="26" Y="-9"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding DataContext.Side, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Right">
                            <Setter TargetName="StationInfo" Property="FlowDirection" Value="RightToLeft"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="DetailedRouteMap" TargetType="Control">
        <Grid>
            <ItemsControl ItemsSource="{Binding DetailedRouteMap}" Style="{StaticResource DetailedRouteMapList}"/>
            <TextBlock Name="Caption" Margin="16,0" FontFamily="Meiryo" FontSize="14" VerticalAlignment="Bottom" TextAlignment="Right" Text="のりかえ、待合わせ時間は含まれません。電車により多少時間が異なります。"/>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding OptionalArea.Language}" Value="English">
                <Setter TargetName="Caption" Property="Visibility" Value="Hidden"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="RouteMap" TargetType="Control">
        <Grid>
            <ItemsControl ItemsSource="{Binding RouteMaps, Converter={StaticResource RouteMapSelector}}">
                <ItemsControl.Template>
                    <ControlTemplate>
                        <StackPanel IsItemsHost="True" Orientation="Vertical"/>
                    </ControlTemplate>
                </ItemsControl.Template>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <ItemsControl ItemsSource="{Binding Stations}" Style="{StaticResource RouteMapList}"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <TextBlock Name="Caption" Margin="16,0" FontFamily="Meiryo" FontSize="14" VerticalAlignment="Bottom" TextAlignment="Right" Text="のりかえ、待合わせ時間は含まれません。電車により多少時間が異なります。"/>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding OptionalArea.Language}" Value="English">
                <Setter TargetName="Caption" Property="Visibility" Value="Hidden"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="DoorsOnThisSide" TargetType="Control">
        <StackPanel>
            <TextBlock Margin="0,0,0,-5" Height="50" Foreground="#FF00A090" FontFamily="Meiryo" FontSize="34" FontWeight="Bold" Text="こちら側のドアが開きます" TextAlignment="Center"/>
            <Border BorderThickness="0,2" Height="280" BorderBrush="#FF707070">
                <Grid>
                    <Grid.Resources>
                        <SolidColorBrush x:Key="WindowColor" x:Name="WindowColor" Color="#FFF5FAFF"/>
                        <LinearGradientBrush x:Key="Door" StartPoint="0.5,0" EndPoint="0.5,1" PresentationOptions:Freeze="True">
                            <GradientStop Color="#FFF0F8F8" Offset="0.3"/>
                            <GradientStop Color="#FFD2DADA" Offset="1"/>
                        </LinearGradientBrush>
                        <LinearGradientBrush x:Key="Wall" StartPoint="0.5,0" EndPoint="0.5,1" PresentationOptions:Freeze="True">
                            <GradientStop Color="#FFF5FFFF" Offset="0"/>
                            <GradientStop Color="#FFD8E0E0" Offset="1"/>
                        </LinearGradientBrush>
                        <LinearGradientBrush x:Key="LeftArrow" StartPoint="1,0.5" EndPoint="0,0.5" PresentationOptions:Freeze="True">
                            <GradientStop Color="#FF00B0B8" Offset="0.25"/>
                            <GradientStop Color="#00F5FAFF" Offset="0"/>
                        </LinearGradientBrush>
                        <LinearGradientBrush x:Key="RightArrow" StartPoint="0,0.5" EndPoint="1,0.5" PresentationOptions:Freeze="True">
                            <GradientStop Color="#FF00B0B8" Offset="0.25"/>
                            <GradientStop Color="#00F5FAFF" Offset="0"/>
                        </LinearGradientBrush>
                    </Grid.Resources>

                    <Grid.Background>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                            <GradientStop Color="#FFFFFFFF" Offset="0.55"/>
                            <GradientStop Color="#FFC6CBD0" Offset="0.6"/>
                        </LinearGradientBrush>
                    </Grid.Background>
                    <StackPanel VerticalAlignment="Bottom">
                        <Grid Margin="0,6" Width="261" Height="10" HorizontalAlignment="Center">
                            <Grid.Background>
                                <VisualBrush Stretch="None" TileMode="Tile" Viewport="0,0,29,10" ViewportUnits="Absolute" >
                                    <VisualBrush.Visual>
                                        <Grid Width="29" Height="10">
                                            <Rectangle Fill="#FFF0E060" Width="24" Height="10"/>
                                        </Grid>
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Grid.Background>
                        </Grid>
                        <Border Height="10" Background="#FF606060"/>
                    </StackPanel>
                    <Grid Name="DoorContainer" Width="300" MaxWidth="600" MinWidth="300">
                        <Grid Width="151" Background="{StaticResource Door}" HorizontalAlignment="Left">
                            <Grid Background="#FF000000" Width="5" HorizontalAlignment="Right"/>
                            <Grid Background="#FFFFD050" Margin="8,0" Width="5" HorizontalAlignment="Right"/>
                            <Grid Background="#AA000000" Height="8" VerticalAlignment="Top"/>
                            <Border Width="80" Height="124" BorderThickness="2" CornerRadius="10" BorderBrush="#FFC0C8CA" Margin="0,35" VerticalAlignment="Top">
                                <Border Width="76" Height="120" BorderThickness="1" CornerRadius="9" BorderBrush="#FF808080">
                                    <Border Width="74" Height="118" BorderThickness="3" CornerRadius="7" Background="{StaticResource WindowColor}" BorderBrush="#FF404040"/>
                                </Border>
                            </Border>
                        </Grid>
                        <Grid Width="151" Background="{StaticResource Door}" HorizontalAlignment="Right">
                            <Grid Background="#FF000000" Width="5" HorizontalAlignment="Left"/>
                            <Grid Background="#FFFFD050" Margin="8,0" Width="5" HorizontalAlignment="Left"/>
                            <Grid Background="#AA000000" Height="8" VerticalAlignment="Top"/>
                            <Border Width="80" Height="124" BorderThickness="2" CornerRadius="10" BorderBrush="#FFC0C8CA" Margin="0,35" VerticalAlignment="Top">
                                <Border Width="76" Height="120" BorderThickness="1" CornerRadius="9" BorderBrush="#FF808080">
                                    <Border Width="74" Height="118" BorderThickness="3" CornerRadius="7" Background="{StaticResource WindowColor}" BorderBrush="#FF404040"/>
                                </Border>
                            </Border>
                        </Grid>
                    </Grid>
                    <Grid Width="332" Background="{StaticResource Wall}" HorizontalAlignment="Left">
                        <Canvas Width="12" HorizontalAlignment="Right">
                            <Line Stroke="#FFF0F0F0" StrokeThickness="1" X1="0" Y1="0" X2="0" Y2="275"/>
                            <Line Stroke="#FFD0D0D0" StrokeThickness="1" X1="11" Y1="0" X2="11" Y2="275"/>
                            <Polygon Points="2,65 9,65 9,225, 2,225 2,222, 5,222 5,68 2,68">
                                <Polygon.Fill>
                                    <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                        <GradientStop Color="#FFD0D8D8" Offset="0.5"/>
                                        <GradientStop Color="#FFE0E8E8" Offset="0.6"/>
                                        <GradientStop Color="#FFC0C8CA" Offset="0.7"/>
                                        <GradientStop Color="#FF808080" Offset="0.9"/>
                                    </LinearGradientBrush>
                                </Polygon.Fill>
                            </Polygon>
                        </Canvas>
                        <Canvas Name="LeftArrow" Margin="20" Width="140" Height="140" HorizontalAlignment="Right">
                            <Polygon Fill="{StaticResource LeftArrow}" Points="139,24, 70,24, 70,0, 0,70, 70,139, 70,116, 139,116"/>
                        </Canvas>
                        <Canvas Name="LeftArrow2" Margin="20" Width="140" Height="140" HorizontalAlignment="Right" Opacity="0">
                            <Polygon Fill="{StaticResource LeftArrow}" Points="139,24, 70,24, 70,0, 0,70, 70,139, 70,116, 139,116"/>
                        </Canvas>
                    </Grid>
                    <Grid Width="332" Background="{StaticResource Wall}" HorizontalAlignment="Right">
                        <Canvas Width="12" HorizontalAlignment="Left">
                            <Line Stroke="#FFF0F0F0" StrokeThickness="1" X1="0" Y1="0" X2="0" Y2="275"/>
                            <Line Stroke="#FFD0D0D0" StrokeThickness="1" X1="11" Y1="0" X2="11" Y2="275"/>
                            <Polygon Points="9,65 2,65 2,225, 9,225 9,222, 6,222 6,68 9,68">
                                <Polygon.Fill>
                                    <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                        <GradientStop Color="#FFC8D0D0" Offset="0.15"/>
                                        <GradientStop Color="#FFE0E8E8" Offset="0.18"/>
                                        <GradientStop Color="#FFC0C8CA" Offset="0.22"/>
                                        <GradientStop Color="#FF808080" Offset="0.4"/>
                                    </LinearGradientBrush>
                                </Polygon.Fill>
                            </Polygon>
                        </Canvas>
                        <Canvas Name="RightArrow" Margin="20" Width="140" Height="140" HorizontalAlignment="Left">
                            <Polygon Fill="{StaticResource RightArrow}" Points="0,24, 70,24, 70,0, 139,70, 70,139, 70,116, 0,116"/>
                        </Canvas>
                        <Canvas Name="RightArrow2" Margin="20" Width="140" Height="140" HorizontalAlignment="Left" Opacity="0">
                            <Polygon Fill="{StaticResource RightArrow}" Points="0,24, 70,24, 70,0, 139,70, 70,139, 70,116, 0,116"/>
                        </Canvas>
                    </Grid>

                    <Grid.Triggers>
                        <EventTrigger RoutedEvent="StackPanel.Loaded">
                            <BeginStoryboard>
                                <Storyboard BeginTime="0:0:1" Duration="0:0:4" RepeatBehavior="Forever">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DoorContainer" Storyboard.TargetProperty="Width">
                                        <SplineDoubleKeyFrame KeyTime="0:0:0.6" Value="450"/>
                                        <SplineDoubleKeyFrame KeyTime="0:0:1.2" Value="570"/>
                                        <DiscreteDoubleKeyFrame KeyTime="0:0:2" Value="300"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimation Storyboard.TargetName="DoorContainer" Storyboard.TargetProperty="Opacity" BeginTime="0:0:2" Duration="0:0:0.5" From="0" To="1"></DoubleAnimation>
                                    <ColorAnimation Storyboard.TargetName="WindowColor" Storyboard.TargetProperty="Color" BeginTime="0:0:2" Duration="0:0:0.5" From="#FFB6BBC0" To="#FFF5FAFF"/>

                                    <ThicknessAnimation Storyboard.TargetName="LeftArrow" Storyboard.TargetProperty="Margin" Duration="0:0:1.2" From="0,0,20,0" To="0,0,120,0"/>
                                    <ThicknessAnimation Storyboard.TargetName="RightArrow" Storyboard.TargetProperty="Margin" Duration="0:0:1.2" From="20,0,0,0" To="120,0,0,0"/>

                                    <DoubleAnimation Storyboard.TargetName="LeftArrow" Storyboard.TargetProperty="Opacity" BeginTime="0:0:2" Duration="0:0:0.5" From="1" To="0"/>
                                    <DoubleAnimation Storyboard.TargetName="RightArrow" Storyboard.TargetProperty="Opacity" BeginTime="0:0:2" Duration="0:0:0.5" From="1" To="0"/>
                                    <DoubleAnimation Storyboard.TargetName="LeftArrow2" Storyboard.TargetProperty="Opacity" BeginTime="0:0:2" Duration="0:0:0.5" From="0" To="1"/>
                                    <DoubleAnimation Storyboard.TargetName="RightArrow2" Storyboard.TargetProperty="Opacity" BeginTime="0:0:2" Duration="0:0:0.5" From="0" To="1"/>

                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Grid.Triggers>
                </Grid>
            </Border>
            <TextBlock Foreground="#FF00A090" FontSize="36" FontFamily="Microsoft Sans Serif" FontWeight="Bold" Text="Doors on this side will open." TextAlignment="Center"/>
        </StackPanel>
    </ControlTemplate>

    <ControlTemplate x:Key="DoorsOnOppositeSide" TargetType="Control">
        <StackPanel>
            <Border Margin="0,45,0,0" BorderThickness="0,2" Height="280" BorderBrush="#FF707070">
                <Grid>
                    <Grid.Resources>
                        <SolidColorBrush x:Key="WindowColor" x:Name="WindowColor" Color="#FFF5FAFF"/>
                        <LinearGradientBrush x:Key="Door" StartPoint="0.5,0" EndPoint="0.5,1" PresentationOptions:Freeze="True">
                            <GradientStop Color="#FFF0F8F8" Offset="0.3"/>
                            <GradientStop Color="#FFD2DADA" Offset="1"/>
                        </LinearGradientBrush>
                        <LinearGradientBrush x:Key="Wall" StartPoint="0.5,0" EndPoint="0.5,1" PresentationOptions:Freeze="True">
                            <GradientStop Color="#FFF5FFFF" Offset="0"/>
                            <GradientStop Color="#FFD8E0E0" Offset="1"/>
                        </LinearGradientBrush>
                    </Grid.Resources>

                    <Grid.Background>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                            <GradientStop Color="#FFFFFFFF" Offset="0.55"/>
                            <GradientStop Color="#FFC6CBD0" Offset="0.6"/>
                        </LinearGradientBrush>
                    </Grid.Background>
                    <Grid Name="DoorContainer" Width="300" MaxWidth="600" MinWidth="300">
                        <Grid Width="151" Background="{StaticResource Door}" HorizontalAlignment="Left">
                            <Grid Background="#FF000000" Width="5" HorizontalAlignment="Right"/>
                            <Grid Background="#FFFFD050" Margin="8,0" Width="5" HorizontalAlignment="Right"/>
                            <Grid Background="#AA000000" Height="8" VerticalAlignment="Top"/>
                            <Border Width="80" Height="124" BorderThickness="2" CornerRadius="10" BorderBrush="#FFC0C8CA" Margin="0,35" VerticalAlignment="Top">
                                <Border Width="76" Height="120" BorderThickness="1" CornerRadius="9" BorderBrush="#FF808080">
                                    <Border Width="74" Height="118" BorderThickness="3" CornerRadius="7" Background="{StaticResource WindowColor}" BorderBrush="#FF404040"/>
                                </Border>
                            </Border>
                        </Grid>
                        <Grid Width="151" Background="{StaticResource Door}" HorizontalAlignment="Right">
                            <Grid Background="#FF000000" Width="5" HorizontalAlignment="Left"/>
                            <Grid Background="#FFFFD050" Margin="8,0" Width="5" HorizontalAlignment="Left"/>
                            <Grid Background="#AA000000" Height="8" VerticalAlignment="Top"/>
                            <Border Width="80" Height="124" BorderThickness="2" CornerRadius="10" BorderBrush="#FFC0C8CA" Margin="0,35" VerticalAlignment="Top">
                                <Border Width="76" Height="120" BorderThickness="1" CornerRadius="9" BorderBrush="#FF808080">
                                    <Border Width="74" Height="118" BorderThickness="3" CornerRadius="7" Background="{StaticResource WindowColor}" BorderBrush="#FF404040"/>
                                </Border>
                            </Border>
                        </Grid>
                    </Grid>
                    <Grid Width="332" Background="{StaticResource Wall}" HorizontalAlignment="Left">
                        <Canvas Width="12" HorizontalAlignment="Right">
                            <Line Stroke="#FFF0F0F0" StrokeThickness="1" X1="0" Y1="0" X2="0" Y2="275"/>
                            <Line Stroke="#FFD0D0D0" StrokeThickness="1" X1="11" Y1="0" X2="11" Y2="275"/>
                            <Polygon Points="2,65 9,65 9,225, 2,225 2,222, 5,222 5,68 2,68">
                                <Polygon.Fill>
                                    <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                        <GradientStop Color="#FFD0D8D8" Offset="0.5"/>
                                        <GradientStop Color="#FFE0E8E8" Offset="0.6"/>
                                        <GradientStop Color="#FFC0C8CA" Offset="0.7"/>
                                        <GradientStop Color="#FF808080" Offset="0.9"/>
                                    </LinearGradientBrush>
                                </Polygon.Fill>
                            </Polygon>
                        </Canvas>
                    </Grid>
                    <Grid Width="332" Background="{StaticResource Wall}" HorizontalAlignment="Right">
                        <Canvas Width="12" HorizontalAlignment="Left">
                            <Line Stroke="#FFF0F0F0" StrokeThickness="1" X1="0" Y1="0" X2="0" Y2="275"/>
                            <Line Stroke="#FFD0D0D0" StrokeThickness="1" X1="11" Y1="0" X2="11" Y2="275"/>
                            <Polygon Points="9,65 2,65 2,225, 9,225 9,222, 6,222 6,68 9,68">
                                <Polygon.Fill>
                                    <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                        <GradientStop Color="#FFC8D0D0" Offset="0.15"/>
                                        <GradientStop Color="#FFE0E8E8" Offset="0.18"/>
                                        <GradientStop Color="#FFC0C8CA" Offset="0.22"/>
                                        <GradientStop Color="#FF808080" Offset="0.4"/>
                                    </LinearGradientBrush>
                                </Polygon.Fill>
                            </Polygon>
                        </Canvas>
                    </Grid>
                    <ctrl:OutlineTextControl Margin="0,115,0,0" Fill="#FFFF0000" Stroke="#FFFFFFFF" StrokeThickness="5" FontFamily="Meiryo" FontSize="34" FontWeight="Bold" Text="反対側のドアが開きます" TextAlignment="Center"/>
                </Grid>
            </Border>
            <TextBlock Foreground="#FFFF0000" FontSize="36" FontFamily="Microsoft Sans Serif" FontWeight="Bold" Text="Doors on opposite side will open." TextAlignment="Center"/>
        </StackPanel>
    </ControlTemplate>

    <ControlTemplate x:Key="NextStopInfo" TargetType="Control">
        <Border Name="NextStop" Height="30" BorderBrush="#FFA0A0A0" BorderThickness="0,0,0,1" Visibility="Hidden">
            <TextBlock Name="NextStopInfo" Margin="0,-1" FontFamily="Meiryo" FontSize="24" HorizontalAlignment="Center"/>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding StationInfo.StationStateOfNext}" Value="Pass">
                <Setter TargetName="NextStop" Property="Visibility" Value="Visible"/>
                <Setter TargetName="NextStopInfo" Property="Text">
                    <Setter.Value>
                        <MultiBinding StringFormat="{}{0}の次は{1}にとまります">
                            <MultiBinding.Bindings>
                                <Binding Path="StationInfo.Name.Kanji"/>
                                <Binding Path="StationInfo.NextStop.Kanji"/>
                            </MultiBinding.Bindings>
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding StationInfo.IsRapidSectionEnd}" Value="True">
                <Setter TargetName="NextStop" Property="Visibility" Value="Visible"/>
                <Setter TargetName="NextStopInfo" Property="Text" Value="{Binding StationInfo.Name.Kanji, StringFormat={}{0}から先は各駅にとまります}"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="Transfers" TargetType="Control">
        <ControlTemplate.Resources>
            <cvt:TransferDisplaySelector x:Key="TransferDisplaySelector" TargetMode="Transfers" TargetLanguage="Kanji"/>
            
            <Style x:Key="TransferLineGroup" TargetType="ItemsControl">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ItemsControl">
                            <ctrl:TransferDisplayGrid IsItemsHost="True" Rows="{Binding Rows}" Columns="{Binding Columns}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="ContentPresenter">
                            <Setter Property="Grid.Row"  Value="{Binding Row}"/>
                            <Setter Property="Grid.RowSpan" Value="{Binding RowSpan}"/>
                            <Setter Property="Grid.Column" Value="{Binding Column}"/>
                            <Setter Property="Grid.ColumnSpan" Value="{Binding ColumnSpan}"/>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <StackPanel Margin="2,5,10,5" MinWidth="240" DataContext="{Binding LineInfo}" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                                <ctrl:LineIcon Style="{StaticResource LineIcon}" DataContext="{Binding Icons[0]}" Width="54" Height="54" HorizontalAlignment="Left" VerticalAlignment="Top" IconType="{Binding IconType}" PrimaryLineColor="{Binding LineColor}" SecondaryLineColor="{Binding LineColor2}" LineLetter="{Binding LineLetter}" LineLetterColor="{StaticResource ActiveText}"/>
                                <StackPanel Margin="7,0,0,0" Height="56">
                                    <TextBlock FontFamily="Microsoft Sans Serif" FontSize="34" Foreground="#FF000000" Text="{Binding Kanji, Converter={StaticResource RemoveLinefeed}}" TextAlignment="Left" LineStackingStrategy="BlockLineHeight" LineHeight="34"/>
                                    <TextBlock FontFamily="Microsoft Sans Serif" FontSize="22" Foreground="#FF000000" Text="{Binding English, Converter={StaticResource RemoveLinefeed}}" TextAlignment="Left" LineStackingStrategy="BlockLineHeight" LineHeight="22"/>
                                </StackPanel>
                            </StackPanel>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="TransferGroup" TargetType="ItemsControl">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ItemsControl">
                            <StackPanel Name="ItemsHost" IsItemsHost="True" Orientation="{Binding Orientation}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <ItemsControl Name="Child" ItemsSource="{Binding Groups}" Style="{DynamicResource TransferGroup2}"/>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Groups.Count}" Value="0">
                                    <Setter TargetName="Child" Property="ItemsSource" Value="{Binding Lines}"/>
                                    <Setter TargetName="Child" Property="Style" Value="{StaticResource TransferLineGroup}"/>
                                    <Setter TargetName="Child" Property="HorizontalAlignment" Value="Center"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="TransferGroup2" TargetType="ItemsControl">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ItemsControl">
                            <StackPanel Name="ItemsHost" IsItemsHost="True" Orientation="{Binding Orientation}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <ItemsControl Name="Child" ItemsSource="{Binding Groups}" Style="{DynamicResource TransferGroup}"/>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Groups.Count}" Value="0">
                                    <Setter TargetName="Child" Property="ItemsSource" Value="{Binding Lines}"/>
                                    <Setter TargetName="Child" Property="Style" Value="{StaticResource TransferLineGroup}"/>
                                    <Setter TargetName="Child" Property="HorizontalAlignment" Value="Center"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="TransferItemsHost" TargetType="Control">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <ItemsControl Name="TransferItemsHost" ItemsSource="{Binding Groups}" Style="{StaticResource TransferGroup}"/>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Groups.Count}" Value="0">
                                    <Setter TargetName="TransferItemsHost" Property="ItemsSource" Value="{Binding Lines}"/>
                                    <Setter TargetName="TransferItemsHost" Property="Style" Value="{StaticResource TransferLineGroup}"/>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ControlTemplate.Resources>
        <StackPanel>
            <Control Template="{StaticResource NextStopInfo}"/>
            <Border Width="750" Height="35">
                <Border.Background>
                    <LinearGradientBrush StartPoint="0,0.5" EndPoint="0.5,0.5" SpreadMethod="Reflect">
                        <GradientStop Color="#FFFFFFFF" Offset="0"/>
                        <GradientStop Color="#FFDDDDDD" Offset="0.2"/>
                    </LinearGradientBrush>
                </Border.Background>
                <TextBlock FontFamily="Microsoft Sans Serif" FontSize="30" Text="のりかえ / Transfer" TextAlignment="Center"/>
            </Border>
            <ContentControl Margin="5" Height="270" DataContext="{Binding StationInfo.Transfer, Converter={StaticResource TransferDisplaySelector}}">
                <Control Style="{StaticResource TransferItemsHost}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </ContentControl>
        </StackPanel>
    </ControlTemplate>

    <ControlTemplate x:Key="Rail" TargetType="Control">
        <Grid>
            <Viewport3D Height="32" Width="960" VerticalAlignment="Center">
                <Viewport3D.Camera>
                    <PerspectiveCamera Position="0,-48,120" LookDirection="0,48,-118" FieldOfView="45"/>
                </Viewport3D.Camera>
                <ModelVisual3D>
                    <ModelVisual3D>
                        <ModelVisual3D.Content>
                            <AmbientLight Color="#FFFFFFFF"/>
                        </ModelVisual3D.Content>
                    </ModelVisual3D>
                    <ModelVisual3D>
                        <ModelVisual3D.Content>
                            <GeometryModel3D>
                                <GeometryModel3D.Geometry>
                                    <MeshGeometry3D
                                    Positions="-60,1,0  -60,-1,0  60,-1,0  60,1,0"
                                    TriangleIndices="0 1 2 0 2 3"
                                    TextureCoordinates="0,0 0,1 1,1 1,0" />
                                </GeometryModel3D.Geometry>
                                <GeometryModel3D.Material>
                                    <DiffuseMaterial>
                                        <DiffuseMaterial.Brush>
                                            <VisualBrush Stretch="Fill">
                                                <VisualBrush.Visual>
                                                    <Grid Width="960" Height="32">
                                                        <Grid.Background>
                                                            <VisualBrush Stretch="None" TileMode="Tile" Viewport="0,0,14,32" ViewportUnits="Absolute" >
                                                                <VisualBrush.Visual>
                                                                    <Grid Width="14" Height="32">
                                                                        <Line Stroke="#FFEEEED8" StrokeThickness="6" X1="7" X2="7" Y1="0" Y2="32"/>
                                                                        <Line Stroke="#FFF0F0F0" StrokeThickness="3" X1="0" X2="14" Y1="7" Y2="7"/>
                                                                        <Line Stroke="#FF473A34" StrokeThickness="2" X1="0" X2="14" Y1="9" Y2="9"/>
                                                                        <Line Stroke="#FFF0F0F0" StrokeThickness="3" X1="0" X2="14" Y1="22" Y2="22"/>
                                                                        <Line Stroke="#FF473A34" StrokeThickness="2" X1="0" X2="14" Y1="24" Y2="24"/>
                                                                    </Grid>
                                                                </VisualBrush.Visual>
                                                            </VisualBrush>
                                                        </Grid.Background>
                                                    </Grid>
                                                </VisualBrush.Visual>
                                            </VisualBrush>
                                        </DiffuseMaterial.Brush>
                                    </DiffuseMaterial>
                                </GeometryModel3D.Material>
                            </GeometryModel3D>
                        </ModelVisual3D.Content>
                    </ModelVisual3D>
                </ModelVisual3D>
            </Viewport3D>
        </Grid>
    </ControlTemplate>

    <Style x:Key="Train" TargetType="ItemsControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ItemsControl">
                    <StackPanel Name="Container" Orientation="Horizontal" HorizontalAlignment="Right" FlowDirection="RightToLeft">
                        <Control Name="Offset" Width="{Binding StationInfo.StopPosOffset, Converter={StaticResource TrainOffsetConverter}}"/>
                        <Control Name="Spacer"/>
                        <Grid>
                            <StackPanel Name="Train" IsItemsHost="True" Orientation="Horizontal" FlowDirection="RightToLeft"/>

                            <Grid Width="42" Margin="-50,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Bottom">
                                <Polygon Name="Arrow" Fill="#FFFF0000" Stroke="#FFFFFFFF" StrokeThickness="2" Points="40,10, 20,10, 20,0, 0,20, 20,40, 20,30, 40,30" Opacity="0"/>
                            </Grid>
                        </Grid>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding TrainInfo.TrainState, Converter={StaticResource TrainStateConverter}, ConverterParameter=Stopping}" Value="False">
                            <Setter TargetName="Arrow" Property="Opacity" Value="0"/>
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Name="ArrivingAction">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="Spacer" Storyboard.TargetProperty="Width" Duration="0:0:1.3" From="960" To="0"/>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Opacity"  BeginTime="0:0:1.5" Duration="0:0:1.5" RepeatBehavior="Forever">
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.75" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding TrainInfo.TrainState}" Value="Stopping">
                            <Setter TargetName="Arrow" Property="Opacity" Value="0"/>
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Name="StoppingAction">
                                    <Storyboard Duration="0:0:6" RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Opacity">
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="Spacer" Storyboard.TargetProperty="Width" Duration="0:0:1.3" From="960" To="0"/>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Opacity"  BeginTime="0:0:1.5" Duration="0:0:1.5" RepeatBehavior="Forever">
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0.75" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Side}" Value="Right">
                            <Setter TargetName="Container" Property="FlowDirection" Value="LeftToRight"/>
                            <Setter TargetName="Container" Property="HorizontalAlignment" Value="Left"/>
                            <Setter TargetName="Train" Property="FlowDirection" Value="LeftToRight"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ContentPresenter">
                    <Setter Property="VerticalAlignment" Value="Bottom"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding CarPosition}" Value="-1">
                            <Setter Property="Margin" Value="0,0,-9,0"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CarPosition}" Value="0">
                            <Setter Property="Margin" Value="0,0,-7.5,0"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CarPosition}" Value="1">
                            <Setter Property="Margin" Value="0,0,-6,0"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CarPosition}" Value="2">
                            <Setter Property="Margin" Value="0,0,-4.5,0"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CarPosition}" Value="3">
                            <Setter Property="Margin" Value="0,0,-3,0"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CarPosition}" Value="4">
                            <Setter Property="Margin" Value="0,0,-1.5,0"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CarPosition}" Value="7">
                            <Setter Property="Margin" Value="-1.5,0,0,0"/>
                            <Setter Property="Panel.ZIndex" Value="-1"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CarPosition}" Value="8">
                            <Setter Property="Margin" Value="-3,0,0,0"/>
                            <Setter Property="Panel.ZIndex" Value="-2"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CarPosition}" Value="9">
                            <Setter Property="Margin" Value="-4.5,0,0,0"/>
                            <Setter Property="Panel.ZIndex" Value="-3"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CarPosition}" Value="10">
                            <Setter Property="Margin" Value="-6,0,0,0"/>
                            <Setter Property="Panel.ZIndex" Value="-4"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CarPosition}" Value="11">
                            <Setter Property="Margin" Value="-7.5,0,0,0"/>
                            <Setter Property="Panel.ZIndex" Value="-5"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CarPosition}" Value="12">
                            <Setter Property="Margin" Value="-9,0,0,0"/>
                            <Setter Property="Panel.ZIndex" Value="-6"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Name="Container" Margin="0,0,1,0">
                        <StackPanel.Resources>
                            <SolidColorBrush x:Name="TopColor" x:Key="TopColor" Color="#FFF8F8F8"/>
                            <SolidColorBrush x:Name="FrontColor" x:Key="FrontColor" Color="#FFE0E0E0"/>
                            <SolidColorBrush x:Name="SideColor" x:Key="SideColor" Color="#FFF0F0F0"/>
                            <SolidColorBrush x:Name="TextColor" x:Key="TextColor" Color="#FF000000"/>
                        </StackPanel.Resources>
                        <Border Name="Top" Width="80" Height="15" Background="{StaticResource TopColor}" BorderBrush="#FFA0A0A0" BorderThickness="1,1,1,0"/>
                        <Border Name="Side" Width="80" Height="35" Background="{StaticResource SideColor}" BorderBrush="#FFA0A0A0" BorderThickness="1,0,1,1" HorizontalAlignment="Left">
                            <Grid Height="5" VerticalAlignment="Bottom">
                                <Border Name="Front" Margin="-10,-60,0,0" Width="0" Height="35" Background="{StaticResource FrontColor}" BorderBrush="#FFA0A0A0" VerticalAlignment="Bottom"/>
                                <TextBlock Name="CarNumber" Text="{Binding CarNumber}" Foreground="{StaticResource TextColor}" Margin="0,-60,0,2" FontFamily="Microsoft Sans Serif" FontSize="40" HorizontalAlignment="Center" VerticalAlignment="Bottom"/>
                                <Line X1="0" X2="78" Y1="2" Y2="2" StrokeThickness="3" Stroke="#FF00C080"/>
                            </Grid>
                        </Border>
                    </StackPanel>
                    <DataTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="True">
                                    <Condition.Binding>
                                        <MultiBinding Converter="{StaticResource EquivalenceConverter}">
                                            <Binding Path="CarNumber"/>
                                            <Binding Path="DataContext.CarNumber" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}"/>
                                        </MultiBinding>
                                    </Condition.Binding>
                                </Condition>
                                <Condition Binding="{Binding DataContext.TrainInfo.TrainState, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}, Converter={StaticResource TrainStateConverter}, ConverterParameter=Stopping}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Name="CarArrivingAction">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Side" Storyboard.TargetProperty="Height">
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="35"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Front" Storyboard.TargetProperty="Height">
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="35"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CarNumber" Storyboard.TargetProperty="FontSize">
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="40"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="TopColor" Storyboard.TargetProperty="Color">
                                            <DiscreteColorKeyFrame KeyTime="0:0:0" Value="#FFF8F8F8"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="FrontColor" Storyboard.TargetProperty="Color">
                                            <DiscreteColorKeyFrame KeyTime="0:0:0" Value="#FFE0E0E0"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="SideColor" Storyboard.TargetProperty="Color">
                                            <DiscreteColorKeyFrame KeyTime="0:0:0" Value="#FFF0F0F0"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="TextColor" Storyboard.TargetProperty="Color">
                                            <DiscreteColorKeyFrame KeyTime="0:0:0" Value="#FF000000"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <Storyboard BeginTime="0:0:1.5" Duration="0:0:1.5" RepeatBehavior="Forever">
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Side" Storyboard.TargetProperty="Height">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="45"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Front" Storyboard.TargetProperty="Height">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="45"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CarNumber" Storyboard.TargetProperty="FontSize">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="50"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="TopColor" Storyboard.TargetProperty="Color">
                                                <DiscreteColorKeyFrame KeyTime="0:0:0" Value="#FF00B0A0"/>
                                                <DiscreteColorKeyFrame KeyTime="0:0:0.75" Value="#FFF8F8F8"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="FrontColor" Storyboard.TargetProperty="Color">
                                                <DiscreteColorKeyFrame KeyTime="0:0:0" Value="#FF009080"/>
                                                <DiscreteColorKeyFrame KeyTime="0:0:0.75" Value="#FFE0E0E0"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="SideColor" Storyboard.TargetProperty="Color">
                                                <DiscreteColorKeyFrame KeyTime="0:0:0" Value="#FF00A090"/>
                                                <DiscreteColorKeyFrame KeyTime="0:0:0.75" Value="#FFF0F0F0"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="TextColor" Storyboard.TargetProperty="Color">
                                                <DiscreteColorKeyFrame KeyTime="0:0:0" Value="#FFFFFFFF"/>
                                                <DiscreteColorKeyFrame KeyTime="0:0:0.75" Value="#FF000000"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                        </MultiDataTrigger>
                        
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Value="True">
                                    <Condition.Binding>
                                        <MultiBinding Converter="{StaticResource EquivalenceConverter}">
                                            <Binding Path="CarNumber"/>
                                            <Binding Path="DataContext.CarNumber" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}"/>
                                        </MultiBinding>
                                    </Condition.Binding>
                                </Condition>
                                <Condition Binding="{Binding DataContext.TrainInfo.TrainState, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}" Value="Stopping"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Name="CarStoppingAction">
                                    <Storyboard Duration="0:0:6" RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Side" Storyboard.TargetProperty="Height">
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="35"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Front" Storyboard.TargetProperty="Height">
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="35"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CarNumber" Storyboard.TargetProperty="FontSize">
                                            <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="40"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="TopColor" Storyboard.TargetProperty="Color">
                                            <DiscreteColorKeyFrame KeyTime="0:0:0" Value="#FFF8F8F8"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="FrontColor" Storyboard.TargetProperty="Color">
                                            <DiscreteColorKeyFrame KeyTime="0:0:0" Value="#FFE0E0E0"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="SideColor" Storyboard.TargetProperty="Color">
                                            <DiscreteColorKeyFrame KeyTime="0:0:0" Value="#FFF0F0F0"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="TextColor" Storyboard.TargetProperty="Color">
                                            <DiscreteColorKeyFrame KeyTime="0:0:0" Value="#FF000000"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <Storyboard BeginTime="0:0:1.5" Duration="0:0:1.5" RepeatBehavior="Forever">
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Side" Storyboard.TargetProperty="Height">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="45"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Front" Storyboard.TargetProperty="Height">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="45"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CarNumber" Storyboard.TargetProperty="FontSize">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="50"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="TopColor" Storyboard.TargetProperty="Color">
                                                <DiscreteColorKeyFrame KeyTime="0:0:0" Value="#FF00B0A0"/>
                                                <DiscreteColorKeyFrame KeyTime="0:0:0.75" Value="#FFF8F8F8"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="FrontColor" Storyboard.TargetProperty="Color">
                                                <DiscreteColorKeyFrame KeyTime="0:0:0" Value="#FF009080"/>
                                                <DiscreteColorKeyFrame KeyTime="0:0:0.75" Value="#FFE0E0E0"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="SideColor" Storyboard.TargetProperty="Color">
                                                <DiscreteColorKeyFrame KeyTime="0:0:0" Value="#FF00A090"/>
                                                <DiscreteColorKeyFrame KeyTime="0:0:0.75" Value="#FFF0F0F0"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="TextColor" Storyboard.TargetProperty="Color">
                                                <DiscreteColorKeyFrame KeyTime="0:0:0" Value="#FFFFFFFF"/>
                                                <DiscreteColorKeyFrame KeyTime="0:0:0.75" Value="#FF000000"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="CarStoppingAction"/>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                        
                        <DataTrigger Binding="{Binding CarPosition}" Value="0">
                            <Setter TargetName="Top" Property="LayoutTransform">
                                <Setter.Value>
                                    <SkewTransform AngleX="335" CenterY="15"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Front" Property="RenderTransform">
                                <Setter.Value>
                                    <SkewTransform AngleY="115"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Front" Property="HorizontalAlignment" Value="Right"/>
                            <Setter TargetName="Front" Property="Margin" Value="0,-60,-8.5,-2"/>
                            <Setter TargetName="Front" Property="Width" Value="7.5"/>
                            <Setter TargetName="Front" Property="BorderThickness" Value="0,0,1,1"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding CarPosition}" Value="1">
                            <Setter TargetName="Top" Property="LayoutTransform">
                                <Setter.Value>
                                    <SkewTransform AngleX="340" CenterY="15"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Front" Property="RenderTransform">
                                <Setter.Value>
                                    <SkewTransform AngleY="110"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Front" Property="HorizontalAlignment" Value="Right"/>
                            <Setter TargetName="Front" Property="Margin" Value="0,-60,-7,-2"/>
                            <Setter TargetName="Front" Property="Width" Value="6"/>
                            <Setter TargetName="Front" Property="BorderThickness" Value="0,0,1,1"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding CarPosition}" Value="2">
                            <Setter TargetName="Top" Property="LayoutTransform">
                                <Setter.Value>
                                    <SkewTransform AngleX="345" CenterY="15"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Front" Property="RenderTransform">
                                <Setter.Value>
                                    <SkewTransform AngleY="105"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Front" Property="HorizontalAlignment" Value="Right"/>
                            <Setter TargetName="Front" Property="Margin" Value="0,-60,-5.5,-2"/>
                            <Setter TargetName="Front" Property="Width" Value="4.5"/>
                            <Setter TargetName="Front" Property="BorderThickness" Value="0,0,1,1"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding CarPosition}" Value="3">
                            <Setter TargetName="Top" Property="LayoutTransform">
                                <Setter.Value>
                                    <SkewTransform AngleX="350" CenterY="15"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Front" Property="RenderTransform">
                                <Setter.Value>
                                    <SkewTransform AngleY="100"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Front" Property="HorizontalAlignment" Value="Right"/>
                            <Setter TargetName="Front" Property="Margin" Value="0,-60,-4,-2"/>
                            <Setter TargetName="Front" Property="Width" Value="3"/>
                            <Setter TargetName="Front" Property="BorderThickness" Value="0,0,1,1"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding CarPosition}" Value="4">
                            <Setter TargetName="Top" Property="LayoutTransform">
                                <Setter.Value>
                                    <SkewTransform AngleX="355" CenterY="15"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Front" Property="RenderTransform">
                                <Setter.Value>
                                    <SkewTransform AngleY="95"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Front" Property="HorizontalAlignment" Value="Right"/>
                            <Setter TargetName="Front" Property="Margin" Value="0,-60,-2.5,-2"/>
                            <Setter TargetName="Front" Property="Width" Value="1.5"/>
                            <Setter TargetName="Front" Property="BorderThickness" Value="0,0,1,1"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding CarPosition}" Value="7">
                            <Setter TargetName="Top" Property="LayoutTransform">
                                <Setter.Value>
                                    <SkewTransform AngleX="5" CenterY="15"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Front" Property="RenderTransform">
                                <Setter.Value>
                                    <SkewTransform AngleY="85" CenterX="1.5"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Front" Property="HorizontalAlignment" Value="Left"/>
                            <Setter TargetName="Front" Property="Margin" Value="-2.5,-60,0,-2"/>
                            <Setter TargetName="Front" Property="Width" Value="1.5"/>
                            <Setter TargetName="Front" Property="BorderThickness" Value="1,0,0,1"/>
                            <Setter TargetName="Side" Property="HorizontalAlignment" Value="Right"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding CarPosition}" Value="8">
                            <Setter TargetName="Top" Property="LayoutTransform">
                                <Setter.Value>
                                    <SkewTransform AngleX="10" CenterY="15"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Front" Property="RenderTransform">
                                <Setter.Value>
                                    <SkewTransform AngleY="80" CenterX="3"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Front" Property="HorizontalAlignment" Value="Left"/>
                            <Setter TargetName="Front" Property="Margin" Value="-4,-60,0,-2"/>
                            <Setter TargetName="Front" Property="Width" Value="3"/>
                            <Setter TargetName="Front" Property="BorderThickness" Value="1,0,0,1"/>
                            <Setter TargetName="Side" Property="HorizontalAlignment" Value="Right"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding CarPosition}" Value="9">
                            <Setter TargetName="Top" Property="LayoutTransform">
                                <Setter.Value>
                                    <SkewTransform AngleX="15" CenterY="15"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Front" Property="RenderTransform">
                                <Setter.Value>
                                    <SkewTransform AngleY="75" CenterX="4.5"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Front" Property="HorizontalAlignment" Value="Left"/>
                            <Setter TargetName="Front" Property="Margin" Value="-5.5,-60,0,-2"/>
                            <Setter TargetName="Front" Property="Width" Value="4.5"/>
                            <Setter TargetName="Front" Property="BorderThickness" Value="1,0,0,1"/>
                            <Setter TargetName="Side" Property="HorizontalAlignment" Value="Right"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding CarPosition}" Value="10">
                            <Setter TargetName="Top" Property="LayoutTransform">
                                <Setter.Value>
                                    <SkewTransform AngleX="20" CenterY="15"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Front" Property="RenderTransform">
                                <Setter.Value>
                                    <SkewTransform AngleY="70" CenterX="6"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Front" Property="HorizontalAlignment" Value="Left"/>
                            <Setter TargetName="Front" Property="Margin" Value="-7,-60,0,-2"/>
                            <Setter TargetName="Front" Property="Width" Value="6"/>
                            <Setter TargetName="Front" Property="BorderThickness" Value="1,0,0,1"/>
                            <Setter TargetName="Side" Property="HorizontalAlignment" Value="Right"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding CarPosition}" Value="11">
                            <Setter TargetName="Top" Property="LayoutTransform">
                                <Setter.Value>
                                    <SkewTransform AngleX="25" CenterY="15"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Front" Property="RenderTransform">
                                <Setter.Value>
                                    <SkewTransform AngleY="65" CenterX="7.5"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Front" Property="HorizontalAlignment" Value="Left"/>
                            <Setter TargetName="Front" Property="Margin" Value="-8.5,-60,0,-2"/>
                            <Setter TargetName="Front" Property="Width" Value="7.5"/>
                            <Setter TargetName="Front" Property="BorderThickness" Value="1,0,0,1"/>
                            <Setter TargetName="Side" Property="HorizontalAlignment" Value="Right"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlatformObjects" TargetType="ItemsControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ItemsControl">
                    <StackPanel Name="Objects" IsItemsHost="True"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ContentPresenter">
                    <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                    <Style.Triggers>
                        <Trigger Property="FlowDirection" Value="RightToLeft">
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleY="-1"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Control Name="Object" Style="{StaticResource ObjectIcon}" Width="54" Height="52" Margin="0,0,0,-1" HorizontalAlignment="Center"/>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding Pos}" Value="Border">
                            <Setter TargetName="Object" Property="HorizontalAlignment" Value="Right"/>
                            <Setter TargetName="Object" Property="RenderTransform">
                                <Setter.Value>
                                    <TranslateTransform X="27"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Pos}" Value="Front">
                            <Setter TargetName="Object" Property="HorizontalAlignment" Value="Right"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Pos}" Value="Back">
                            <Setter TargetName="Object" Property="HorizontalAlignment" Value="Left"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Style.Triggers>
            <Trigger Property="FlowDirection" Value="RightToLeft">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleY="-1"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PlatformUnits" TargetType="ItemsControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ItemsControl">
                    <StackPanel Name="Units" IsItemsHost="True" Orientation="Horizontal"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ContentPresenter">
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="Width" Value="80"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ItemsControl ItemsSource="{Binding ObjectGroups}">
                        <ItemsControl.Template>
                            <ControlTemplate TargetType="ItemsControl">
                                <Grid IsItemsHost="True"/>
                            </ControlTemplate>
                        </ItemsControl.Template>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <ItemsControl ItemsSource="{Binding Objects}" Style="{StaticResource PlatformObjects}" VerticalAlignment="Center"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExitsOnThisSide" TargetType="ItemsControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ItemsControl">
                    <ContentControl Name="Container" VerticalAlignment="Top">
                        <StackPanel Name="Exits" IsItemsHost="True" RenderTransformOrigin="0.5,0.5"/>
                    </ContentControl>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding DataContext.StationInfo.Platform.HasMultipleExitsBlock, RelativeSource={RelativeSource AncestorType=ItemsControl}}" Value="True">
                            <Setter TargetName="Container" Property="VerticalAlignment" Value="Bottom"/>
                        </DataTrigger>
                        <Trigger Property="AlternationCount" Value="2">
                            <Setter TargetName="Container" Property="VerticalAlignment" Value="Top"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding FlowDirection, RelativeSource={RelativeSource Mode=Self}}" Value="RightToLeft"/>
                                <Condition Binding="{Binding AlternationCount, RelativeSource={RelativeSource Mode=Self}}" Value="2"/>
                                <Condition Binding="{Binding DataContext.StationInfo.Platform.HasMultipleObjectsGroup, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Exits" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleY="-1"/>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ContentPresenter">
                    <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding FlowDirection, RelativeSource={RelativeSource Mode=Self}}" Value="RightToLeft"/>
                                <Condition Binding="{Binding AlternationCount, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}" Value="2"/>
                                <Condition Binding="{Binding DataContext.StationInfo.Platform.HasMultipleObjectsGroup, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl, AncestorLevel=2}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleY="-1"/>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <Control Width="{Binding Offset, Converter={StaticResource PlatformWidthConverter}}"/>
                        <ContentControl Name="ExitContainer" Width="{Binding Length, Converter={StaticResource PlatformWidthConverter}}">
                            <Border Name="Exit" MinHeight="38" Background="#FFFFBB00" BorderBrush="#FF000000" BorderThickness="1">
                                <Border.Margin>
                                    <MultiBinding Converter="{StaticResource ExitPositionConverter}">
                                        <MultiBinding.Bindings>
                                            <Binding Path="StartPos"/>
                                            <Binding Path="EndPos"/>
                                        </MultiBinding.Bindings>
                                    </MultiBinding>
                                </Border.Margin>
                                <StackPanel FlowDirection="LeftToRight">
                                    <Viewbox Margin="4,0" Stretch="Fill" StretchDirection="DownOnly">
                                        <TextBlock Name="Japanese" Text="{Binding Kanji}" FontFamily="Microsoft Sans Serif" FontSize="18" TextAlignment="Center" Margin="0,5,0,0" LineStackingStrategy="BlockLineHeight" LineHeight="18"/>
                                    </Viewbox>
                                    <Viewbox Margin="4,0" Stretch="Fill" StretchDirection="DownOnly">
                                        <TextBlock Name="English" Text="{Binding English}" FontFamily="Microsoft Sans Serif" FontSize="12" TextAlignment="Center" LineStackingStrategy="BlockLineHeight" LineHeight="12"/>
                                    </Viewbox>
                                </StackPanel>
                            </Border>
                        </ContentControl>
                    </StackPanel>
                    <DataTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding AlternationCount, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}" Value="2"/>
                                <Condition Binding="{Binding DataContext.StationInfo.Platform.HasMultipleObjectsGroup, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl, AncestorLevel=2}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ExitContainer" Property="Margin" Value="0,0,0,2"/>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding IsConnectedDirectly}" Value="True">
                            <Setter TargetName="Exit" Property="MinHeight" Value="44"/>
                            <Setter TargetName="Exit" Property="CornerRadius" Value="4"/>
                            <Setter TargetName="ExitContainer" Property="Margin" Value="0,15,0,0"/>
                            <Setter TargetName="Japanese" Property="Margin" Value="0,6,0,0"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExitsOnOppositeSide" TargetType="ItemsControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ItemsControl">
                    <ContentControl Name="Container" VerticalAlignment="Bottom">
                        <StackPanel Name="Exits" IsItemsHost="True" RenderTransformOrigin="0.5,0.5"/>
                    </ContentControl>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding DataContext.StationInfo.Platform.HasMultipleExitsBlock, RelativeSource={RelativeSource AncestorType=ItemsControl}}" Value="True">
                            <Setter TargetName="Container" Property="VerticalAlignment" Value="Top"/>
                        </DataTrigger>
                        <Trigger Property="AlternationCount" Value="2">
                            <Setter TargetName="Container" Property="VerticalAlignment" Value="Bottom"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding FlowDirection, RelativeSource={RelativeSource Mode=Self}}" Value="RightToLeft"/>
                                <Condition Binding="{Binding AlternationCount, RelativeSource={RelativeSource Mode=Self}}" Value="2"/>
                                <Condition Binding="{Binding DataContext.StationInfo.Platform.HasMultipleObjectsGroup, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Exits" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleY="-1"/>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ContentPresenter">
                    <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding FlowDirection, RelativeSource={RelativeSource Mode=Self}}" Value="RightToLeft"/>
                                <Condition Binding="{Binding AlternationCount, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}" Value="2"/>
                                <Condition Binding="{Binding DataContext.StationInfo.Platform.HasMultipleObjectsGroup, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl, AncestorLevel=2}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleY="-1"/>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <Control Width="{Binding Offset, Converter={StaticResource PlatformWidthConverter}}"/>
                        <ContentControl Name="ExitContainer" Width="{Binding Length, Converter={StaticResource PlatformWidthConverter}}">
                            <Border Name="Exit" MinHeight="38" Background="#FFFFBB00" BorderBrush="#FF000000" BorderThickness="1">
                                <Border.Margin>
                                    <MultiBinding Converter="{StaticResource ExitPositionConverter}">
                                        <MultiBinding.Bindings>
                                            <Binding Path="StartPos"/>
                                            <Binding Path="EndPos"/>
                                        </MultiBinding.Bindings>
                                    </MultiBinding>
                                </Border.Margin>
                                <StackPanel FlowDirection="LeftToRight">
                                    <Viewbox Margin="4,0" Stretch="Fill" StretchDirection="DownOnly">
                                        <TextBlock Name="Japanese" Text="{Binding Kanji}" FontFamily="Microsoft Sans Serif" FontSize="18" TextAlignment="Center" Margin="0,5,0,0" LineStackingStrategy="BlockLineHeight" LineHeight="18"/>
                                    </Viewbox>
                                    <Viewbox Margin="4,0" Stretch="Fill" StretchDirection="DownOnly">
                                        <TextBlock Name="English" Text="{Binding English}" FontFamily="Microsoft Sans Serif" FontSize="12" TextAlignment="Center" LineStackingStrategy="BlockLineHeight" LineHeight="12"/>
                                    </Viewbox>
                                </StackPanel>
                            </Border>
                        </ContentControl>
                    </StackPanel>
                    <DataTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding AlternationCount, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}" Value="2"/>
                                <Condition Binding="{Binding DataContext.StationInfo.Platform.HasMultipleObjectsGroup, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl, AncestorLevel=2}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Exit" Property="MinHeight" Value="27"/>
                            <Setter TargetName="ExitContainer" Property="Margin" Value="0,0,0,1"/>
                            <Setter TargetName="Japanese" Property="FontSize" Value="16"/>
                            <Setter TargetName="Japanese" Property="Margin" Value="0,0,0,-3"/>
                            <Setter TargetName="English" Property="FontSize" Value="10"/>
                            <Setter TargetName="English" Property="Margin" Value="0,0,0,0"/>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding IsConnectedDirectly}" Value="True">
                            <Setter TargetName="Exit" Property="MinHeight" Value="44"/>
                            <Setter TargetName="Exit" Property="CornerRadius" Value="4"/>
                            <Setter TargetName="ExitContainer" Property="Margin" Value="0,0,0,18"/>
                            <Setter TargetName="Japanese" Property="Margin" Value="0,6,0,0"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="PlatformLine" TargetType="Control">
        <Grid>
            <Grid.Background>
                <VisualBrush Stretch="None" TileMode="Tile" Viewport="0,0,16,5" ViewportUnits="Absolute">
                    <VisualBrush.Visual>
                        <Grid Width="16" Height="5">
                            <Rectangle Fill="#FFF0EE70" Width="10" Height="5"/>
                        </Grid>
                    </VisualBrush.Visual>
                </VisualBrush>
            </Grid.Background>
        </Grid>
    </ControlTemplate>
    
    <Style x:Key="TransferListOfPlatform" TargetType="Control">
        <Style.Resources>
            <Style x:Key="TransferListOfPlatformInfoSingleLine" TargetType="ItemsControl">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ItemsControl">
                            <Border Height="90" BorderBrush="#FFA0A0A0" BorderThickness="0,1,0,0">
                                <DockPanel>
                                    <StackPanel Width="100" DockPanel.Dock="Left">
                                        <TextBlock FontFamily="Meiryo UI" FontSize="28" FontWeight="Bold" Text="のりかえ" HorizontalAlignment="Center"/>
                                        <TextBlock Margin="0,-4" FontSize="18" Text="Transfer" HorizontalAlignment="Center"/>
                                    </StackPanel>
                                    <StackPanel IsItemsHost="True" Orientation="Horizontal" DockPanel.Dock="Top" VerticalAlignment="Top"/>
                                </DockPanel>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" Margin="0,4,8,0" MinWidth="120" Height="40" DataContext="{Binding LineInfo}">
                                <ctrl:LineIcon Style="{StaticResource LineIcon}" DataContext="{Binding Icons[0]}" Width="38" Height="38" HorizontalAlignment="Left" VerticalAlignment="Top" IconType="{Binding IconType}" PrimaryLineColor="{Binding LineColor}" SecondaryLineColor="{Binding LineColor2}" LineLetter="{Binding LineLetter}" LineLetterColor="{StaticResource ActiveText}"/>
                                <StackPanel Name="LineName" Margin="4,0,0,0">
                                    <Viewbox Stretch="Fill" StretchDirection="DownOnly" Margin="0,6,0,0" HorizontalAlignment="Left" Height="20">
                                        <TextBlock FontFamily="Meiryo" FontSize="25" FontWeight="Bold" Foreground="#FF000000" Text="{Binding Kanji, Converter={StaticResource RemoveLinefeed}}" TextAlignment="Left" LineStackingStrategy="BlockLineHeight" LineHeight="20"/>
                                    </Viewbox>
                                    <Viewbox Stretch="Fill" StretchDirection="DownOnly" Margin="0,-1,0,0" HorizontalAlignment="Left" Height="15">
                                        <TextBlock FontFamily="Microsoft Sans Serif" FontSize="16" Foreground="#FF000000" Text="{Binding English, Converter={StaticResource RemoveLinefeed}}" TextAlignment="Left" LineStackingStrategy="BlockLineHeight" LineHeight="14"/>
                                    </Viewbox>
                                </StackPanel>
                            </StackPanel>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding DataContext.Lines.Count, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}" Value="5">
                                    <Setter TargetName="LineName" Property="MaxWidth" Value="190"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="TransferListOfPlatformInfoDoubleLine" TargetType="ItemsControl">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ItemsControl">
                            <Border Height="90" BorderBrush="#FFA0A0A0" BorderThickness="0,1,0,0">
                                <DockPanel>
                                    <StackPanel Width="100" DockPanel.Dock="Left">
                                        <TextBlock FontFamily="Meiryo UI" FontSize="28" FontWeight="Bold" Text="のりかえ" HorizontalAlignment="Center"/>
                                        <TextBlock Margin="0,-4" FontSize="18" Text="Transfer" HorizontalAlignment="Center"/>
                                    </StackPanel>
                                    <StackPanel IsItemsHost="True" Orientation="Vertical" DockPanel.Dock="Top" VerticalAlignment="Top"/>
                                </DockPanel>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <ItemsControl ItemsSource="{Binding Lines}">
                                <ItemsControl.Template>
                                    <ControlTemplate TargetType="ItemsControl">
                                        <StackPanel IsItemsHost="True" Orientation="Horizontal"/>
                                    </ControlTemplate>
                                </ItemsControl.Template>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal" Margin="0,4,8,0" MinWidth="120" Height="40" DataContext="{Binding LineInfo}">
                                            <ctrl:LineIcon Style="{StaticResource LineIcon}" DataContext="{Binding Icons[0]}" Width="38" Height="38" HorizontalAlignment="Left" VerticalAlignment="Top" IconType="{Binding IconType}" PrimaryLineColor="{Binding LineColor}" SecondaryLineColor="{Binding LineColor2}" LineLetter="{Binding LineLetter}" LineLetterColor="{StaticResource ActiveText}"/>
                                            <StackPanel Name="LineName" Margin="4,0,0,0">
                                                <Viewbox Stretch="Fill" StretchDirection="DownOnly" Margin="0,6,0,0" HorizontalAlignment="Left" Height="20">
                                                    <TextBlock FontFamily="Meiryo" FontSize="25" FontWeight="Bold" Foreground="#FF000000" Text="{Binding Kanji, Converter={StaticResource RemoveLinefeed}}" TextAlignment="Left" LineStackingStrategy="BlockLineHeight" LineHeight="20"/>
                                                </Viewbox>
                                                <Viewbox Stretch="Fill" StretchDirection="DownOnly" Margin="0,-1,0,0" HorizontalAlignment="Left" Height="15">
                                                    <TextBlock FontFamily="Microsoft Sans Serif" FontSize="16" Foreground="#FF000000" Text="{Binding English, Converter={StaticResource RemoveLinefeed}}" TextAlignment="Left" LineStackingStrategy="BlockLineHeight" LineHeight="14"/>
                                                </Viewbox>
                                            </StackPanel>
                                        </StackPanel>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding DataContext.Lines.Count, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}" Value="5">
                                                <Setter TargetName="LineName" Property="MaxWidth" Value="190"/>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <ItemsControl Name="ItemsHost" ItemsSource="{Binding Groups}" Style="{StaticResource TransferListOfPlatformInfoDoubleLine}"/>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Groups.Count}" Value="0">
                            <Setter TargetName="ItemsHost" Property="ItemsSource" Value="{Binding Lines}"/>
                            <Setter TargetName="ItemsHost" Property="Style" Value="{StaticResource TransferListOfPlatformInfoSingleLine}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="PlatformOnThisSide" TargetType="Control">
        <ControlTemplate.Resources>
            <cvt:TransferDisplaySelector x:Key="TransferDisplaySelector" TargetMode="Platform" TargetLanguage="Kanji"/>
        </ControlTemplate.Resources>
        <StackPanel>
            <Control Template="{StaticResource NextStopInfo}"/>
            <Grid Height="226">
                <Grid.RowDefinitions>
                    <RowDefinition Height="195"/>
                    <RowDefinition Height="31"/>
                </Grid.RowDefinitions>

                <Grid Grid.Row="0" Width="{Binding StationInfo.Platform.Length, Converter={StaticResource PlatformWidthConverter}}" HorizontalAlignment="Center">
                    <Grid VerticalAlignment="Bottom">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="120"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="120"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Column="0" Grid.ColumnSpan="3">
                            <Border Height="132">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFFFFFFF" Offset="0.02"/>
                                        <GradientStop Color="#FFDDDDDD" Offset="0.1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Control Template="{StaticResource PlatformLine}" Margin="40,3" Height="3" VerticalAlignment="Bottom"/>
                            </Border>
                            <Border Height="8" Background="#FFBBBBBB"/>
                            <Border Height="16">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <GradientStop Color="#FF888888" Offset="0.25"/>
                                        <GradientStop Color="#FFAAAAAA" Offset="0.25"/>
                                        <GradientStop Color="#FFAAAAAA" Offset="0.9"/>
                                        <GradientStop Color="#FFFFFFFF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                        </StackPanel>
                        <Canvas Grid.Column="0" Width="120" Height="160">
                            <Path Fill="#FFFFFFFF" Stroke="#FF909090" StrokeThickness="1">
                                <Path.Data>
                                    <PathGeometry>
                                        <PathFigure StartPoint="0,0">
                                            <LineSegment Point="65,0" IsStroked="False"/>
                                            <LineSegment Point="33,132" IsStroked="True"/>
                                            <LineSegment Point="35,140" IsStroked="True"/>

                                            <LineSegment Point="35,160" IsStroked="False"/>
                                            <LineSegment Point="0,160" IsStroked="False"/>
                                            <LineSegment Point="0,0" IsStroked="False"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Path.Data>
                            </Path>
                        </Canvas>
                        <Canvas Grid.Column="2" Width="120" Height="160">
                            <Path Fill="#FFFFFFFF" Stroke="#FF909090" StrokeThickness="1">
                                <Path.Data>
                                    <PathGeometry>
                                        <PathFigure StartPoint="120,0">
                                            <LineSegment Point="55,0" IsStroked="False"/>
                                            <LineSegment Point="87,132" IsStroked="True"/>
                                            <LineSegment Point="85,140" IsStroked="True"/>

                                            <LineSegment Point="85,160" IsStroked="False"/>
                                            <LineSegment Point="120,160" IsStroked="False"/>
                                            <LineSegment Point="120,0" IsStroked="False"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Path.Data>
                            </Path>
                        </Canvas>
                    </Grid>
                    <ItemsControl Name="PlatformBlocks" ItemsSource="{Binding StationInfo.Platform.Blocks}" Margin="0,5,0,0" Width="{Binding StationInfo.Platform.Length, Converter={StaticResource PlatformWidthConverter}}" Height="145" HorizontalAlignment="Center" VerticalAlignment="Top">
                        <ItemsControl.Template>
                            <ControlTemplate TargetType="ItemsControl">
                                <StackPanel Name="PlatformPresenter" IsItemsHost="True" Orientation="Horizontal"/>
                                <ControlTemplate.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding TrainInfo.Direction}" Value="Forward"/>
                                            <Condition Binding="{Binding Side}" Value="Right"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="PlatformPresenter" Property="FlowDirection" Value="RightToLeft"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding TrainInfo.Direction}" Value="Opposite"/>
                                            <Condition Binding="{Binding Side}" Value="Left"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="PlatformPresenter" Property="FlowDirection" Value="RightToLeft"/>
                                    </MultiDataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </ItemsControl.Template>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid Width="{Binding Length, Converter={StaticResource PlatformWidthConverter}}">
                                    <ItemsControl Name="PlatformExits" ItemsSource="{Binding Exits}" Style="{StaticResource ExitsOnThisSide}" Height="80" VerticalAlignment="Top" AlternationCount="{Binding Exits.Count}"/>
                                    <ItemsControl Name="PlatformUnits" ItemsSource="{Binding Units}" Style="{StaticResource PlatformUnits}" Height="102" VerticalAlignment="Bottom"/>
                                </Grid>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding DataContext.StationInfo.Platform.HasMultipleExitsBlock, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}" Value="True">
                                        <Setter TargetName="PlatformUnits" Property="Margin" Value="0"/>
                                        <Setter TargetName="PlatformExits" Property="Height" Value="103"/>
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Grid>

                <Control Height="30" VerticalAlignment="Bottom" Template="{StaticResource Rail}" Grid.Row="1" Margin="0,0,0,4.5"/>
                <ItemsControl Name="Train" ItemsSource="{Binding Train}" Style="{StaticResource Train}" Margin="0,0,0,9" HorizontalAlignment="Right" VerticalAlignment="Bottom" Grid.Row="0" Grid.RowSpan="2"/>
            </Grid>
            <Grid Height="114">
                <Control Name="Transfers" DataContext="{Binding StationInfo.Transfer, Converter={StaticResource TransferDisplaySelector}}" Style="{StaticResource TransferListOfPlatform}" VerticalAlignment="Top"/>
                <TextBlock Name="WatchYourStep" Foreground="#FFFF0000" FontFamily="Meiryo UI" FontSize="28" FontWeight="Bold" Text="電車とホームの間があいています。ご注意ください。" TextAlignment="Center" VerticalAlignment="Bottom" Visibility="Hidden"/>
                <TextBlock Margin="5,3" Foreground="#FF000000" FontFamily="Microsoft Sans Serif" FontSize="15" TextAlignment="Right" VerticalAlignment="Bottom">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0} 年 {1} 月現在">
                            <MultiBinding.Bindings>
                                <Binding Path="StationInfo.UpdateYear"/>
                                <Binding Path="StationInfo.UpdateMonth"/>
                            </MultiBinding.Bindings>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
            </Grid>
        </StackPanel>
        
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Side}" Value="Right">
                <Setter TargetName="Train" Property="HorizontalAlignment" Value="Left"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding StationInfo.Transfer, Converter={StaticResource TransferDisplaySelector}}" Value="{x:Null}">
                <Setter TargetName="Transfers" Property="Visibility" Value="Hidden"/>
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding StationInfo.Platform.HasMultipleExitsBlock}" Value="True"/>
                    <Condition Binding="{Binding StationInfo.Platform.HasMultipleObjectsGroup}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PlatformBlocks" Property="Margin" Value="0,-28,0,0"/>
                <Setter TargetName="PlatformBlocks" Property="Height" Value="181"/>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding StationInfo.Platform.HasMultipleExitsBlock}" Value="True"/>
                    <Condition Binding="{Binding StationInfo.Platform.HasMultipleObjectsGroup}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PlatformBlocks" Property="Margin" Value="0,-18,0,0"/>
                <Setter TargetName="PlatformBlocks" Property="Height" Value="170"/>
            </MultiDataTrigger>

            <DataTrigger Binding="{Binding StationInfo.Platform.WatchYourStep}" Value="True">
                <Setter TargetName="WatchYourStep" Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="PlatformOnOppositeSide" TargetType="Control">
        <ControlTemplate.Resources>
            <cvt:TransferDisplaySelector x:Key="TransferDisplaySelector" TargetMode="Platform" TargetLanguage="Kanji"/>
        </ControlTemplate.Resources>
        <StackPanel>
            <Control Template="{StaticResource NextStopInfo}"/>
            <Grid Height="226">
                <Grid.RowDefinitions>
                    <RowDefinition Height="62"/>
                    <RowDefinition Height="164"/>
                </Grid.RowDefinitions>

                <Control Margin="0,-8" Width="960" Height="30" VerticalAlignment="Bottom" Template="{StaticResource Rail}" Grid.Row="0"/>
                <ItemsControl Name="Train" Margin="0,-1" ItemsSource="{Binding Train}" Style="{StaticResource Train}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Grid.Row="0"/>
                <Grid HorizontalAlignment="Center" Grid.Row="1" Width="{Binding StationInfo.Platform.Length, Converter={StaticResource PlatformWidthConverter}}">
                    <DockPanel Height="135" LastChildFill="False" VerticalAlignment="Top">
                        <DockPanel.Resources>
                            <LinearGradientBrush x:Key="PlatformBrush" EndPoint="0.5,0" StartPoint="0.5,1">
                                <GradientStop Color="#FFFFFFFF" Offset="0.02"/>
                                <GradientStop Color="#FFDDDDDD" Offset="0.1"/>
                            </LinearGradientBrush>
                        </DockPanel.Resources>
                        <Canvas Margin="-0.5,0" Width="34" DockPanel.Dock="Left">
                            <Path Fill="{StaticResource PlatformBrush}" Stroke="#FF909090" StrokeThickness="1">
                                <Path.Data>
                                    <PathGeometry>
                                        <PathFigure StartPoint="34,0">
                                            <LineSegment Point="0,105" IsStroked="True"/>
                                            <LineSegment Point="0,135" IsStroked="False"/>
                                            <LineSegment Point="34,135" IsStroked="False"/>
                                            <LineSegment Point="34,0" IsStroked="False"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Path.Data>
                            </Path>
                        </Canvas>
                        <Canvas Margin="-0.5,0" Width="34" DockPanel.Dock="Right">
                            <Path Fill="{StaticResource PlatformBrush}" Stroke="#FF909090" StrokeThickness="1">
                                <Path.Data>
                                    <PathGeometry>
                                        <PathFigure StartPoint="0,0">
                                            <LineSegment Point="0,135" IsStroked="False"/>
                                            <LineSegment Point="34,135" IsStroked="False"/>
                                            <LineSegment Point="34,105" IsStroked="False"/>
                                            <LineSegment Point="0,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Path.Data>
                            </Path>
                        </Canvas>
                        <DockPanel Height="135" DockPanel.Dock="Top" Background="{StaticResource PlatformBrush}">
                            <Border BorderBrush="#FF909090" BorderThickness="0,1,0,0">
                                <Control Template="{StaticResource PlatformLine}" Margin="0,3" Height="3" VerticalAlignment="Top"/>
                            </Border>
                        </DockPanel>
                    </DockPanel>
                    <ItemsControl Name="PlatformBlocks" ItemsSource="{Binding StationInfo.Platform.Blocks}" Margin="0,8,0,0" Width="{Binding StationInfo.Platform.Length, Converter={StaticResource PlatformWidthConverter}}" HorizontalAlignment="Center">
                        <ItemsControl.Template>
                            <ControlTemplate TargetType="ItemsControl">
                                <StackPanel Name="PlatformBlocksPanel" IsItemsHost="True" Orientation="Horizontal"/>
                                <ControlTemplate.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding TrainInfo.Direction}" Value="Forward"/>
                                            <Condition Binding="{Binding Side}" Value="Right"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="PlatformBlocksPanel" Property="FlowDirection" Value="RightToLeft"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding TrainInfo.Direction}" Value="Opposite"/>
                                            <Condition Binding="{Binding Side}" Value="Left"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="PlatformBlocksPanel" Property="FlowDirection" Value="RightToLeft"/>
                                    </MultiDataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </ItemsControl.Template>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid Width="{Binding Length, Converter={StaticResource PlatformWidthConverter}}">
                                    <ItemsControl Name="PlatformUnits" VerticalAlignment="Top" ItemsSource="{Binding Units}" Style="{StaticResource PlatformUnits}" Height="102"/>
                                    <ItemsControl Name="PlatformExits" VerticalAlignment="Bottom" ItemsSource="{Binding Exits}" Style="{StaticResource ExitsOnOppositeSide}" Margin="0,0,0,10" Height="80" AlternationCount="{Binding Exits.Count}"/>
                                </Grid>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding DataContext.StationInfo.Platform.HasMultipleExitsBlock, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}" Value="True">
                                        <Setter TargetName="PlatformExits" Property="Margin" Value="0,0,0,1"/>
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Grid>
            </Grid>
            <Grid Height="114">
                <Control Name="Transfers" DataContext="{Binding StationInfo.Transfer, Converter={StaticResource TransferDisplaySelector}}" Style="{StaticResource TransferListOfPlatform}" VerticalAlignment="Top"/>
                <TextBlock Name="WatchYourStep" Foreground="#FFFF0000" FontFamily="Meiryo UI" FontSize="28" FontWeight="Bold" Text="電車とホームの間があいています。ご注意ください。" TextAlignment="Center" VerticalAlignment="Bottom" Visibility="Hidden"/>
                <TextBlock Margin="5,3" Foreground="#FF000000" FontFamily="Microsoft Sans Serif" FontSize="15" TextAlignment="Right" VerticalAlignment="Bottom">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0} 年 {1} 月現在">
                            <MultiBinding.Bindings>
                                <Binding Path="StationInfo.UpdateYear"/>
                                <Binding Path="StationInfo.UpdateMonth"/>
                            </MultiBinding.Bindings>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
            </Grid>
        </StackPanel>

        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Side}" Value="Right">
                <Setter TargetName="Train" Property="HorizontalAlignment" Value="Left"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding StationInfo.Transfer, Converter={StaticResource TransferDisplaySelector}}" Value="{x:Null}">
                <Setter TargetName="Transfers" Property="Visibility" Value="Hidden"/>
            </DataTrigger>
            
            <DataTrigger Binding="{Binding StationInfo.Platform.HasMultipleExitsBlock}" Value="True">
                <Setter TargetName="PlatformBlocks" Property="Margin" Value="0,0,0,0"/>
            </DataTrigger>
            
            <DataTrigger Binding="{Binding StationInfo.Platform.WatchYourStep}" Value="True">
                <Setter TargetName="WatchYourStep" Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <ControlTemplate x:Key="AlertJapanese" TargetType="Control">
        <ControlTemplate.Resources>
            <LinearGradientBrush x:Key="GradientBrush" StartPoint="0,0.5" EndPoint="0.5,0.5" SpreadMethod="Reflect">
                <GradientStop Color="#66FFFFFF" Offset="0"/>
                <GradientStop Color="#FFFF0000" Offset="0.3"/>
            </LinearGradientBrush>
        </ControlTemplate.Resources>
        <Border Margin="0,4,0,0" BorderBrush="{StaticResource GradientBrush}" BorderThickness="0,8,0,10">
            <Border Margin="0,4" BorderBrush="{StaticResource GradientBrush}" BorderThickness="0,0,0,4">
                <Grid>
                    <StackPanel HorizontalAlignment="Center">
                        <Control Name="Spacer" Height="120"/>
                        <Border Name="Title" Margin="0,12,0,0" BorderBrush="{StaticResource GradientBrush}" BorderThickness="0,0,0,4" Opacity="0">
                            <TextBlock Margin="50,0" Foreground="#FFFF0000" FontFamily="Meiryo" FontSize="36" FontWeight="Bold" Text="特別警戒実施のお知らせ" HorizontalAlignment="Center" LineStackingStrategy="BlockLineHeight" LineHeight="36"/>
                        </Border>
                    </StackPanel>
                    <StackPanel Name="Text" Margin="0,64,0,10" HorizontalAlignment="Center" VerticalAlignment="Top" Opacity="0">
                        <TextBlock FontFamily="Meiryo" FontSize="38" FontWeight="Bold" Text="" LineStackingStrategy="BlockLineHeight" LineHeight="48" HorizontalAlignment="Center">
                            <Run>ただいま</Run><Run FontFamily="Microsoft Sans Serif">JR</Run><Run>東日本グループでは、</Run><LineBreak/>
                            <Run>警察と連携し</Run><Run TextDecorations="Underline" Foreground="#FFFF0000">特別警戒</Run><Run>を実施しております。</Run>
                        </TextBlock>
                        <StackPanel Margin="0,8" Width="900">
                            <Viewbox Stretch="Fill" StretchDirection="DownOnly" Height="32">
                                <TextBlock FontFamily="Meiryo" FontSize="28" Text="防犯カメラを駅構内に設置しているほか、社員および警備員による駅構内・" LineStackingStrategy="BlockLineHeight" LineHeight="32"/>
                            </Viewbox>
                            <TextBlock FontFamily="Meiryo" Height="32" FontSize="28" Text="列車内の巡回を強化して、お客さまに安心してご利用いただけるように" LineStackingStrategy="BlockLineHeight" LineHeight="32"/>
                            <TextBlock FontFamily="Meiryo" FontSize="28" LineStackingStrategy="BlockLineHeight" LineHeight="32">
                                <Run>努めております。 駅構内で</Run><Run TextDecorations="Underline" Foreground="#FFFF0000">不審物や気がかりなこと</Run><Run>がございましたら、</Run>
                            </TextBlock>
                            <TextBlock FontFamily="Meiryo" Height="32" FontSize="28" Text="お近くの駅係員、車掌または警備員までお知らせください。お客さまの" LineStackingStrategy="BlockLineHeight" LineHeight="32"/>
                            <TextBlock FontFamily="Meiryo" Height="32" FontSize="28" Text="ご協力をお願いいたします。" LineStackingStrategy="BlockLineHeight" LineHeight="32"/>
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <EventTrigger RoutedEvent="Loaded" SourceName="Title">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetName="Title" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.5"/>
                        <DoubleAnimation Storyboard.TargetName="Spacer" Storyboard.TargetProperty="Height" From="120" To="0" BeginTime="0:0:1" Duration="0:0:0.9"/>
                        <DoubleAnimation Storyboard.TargetName="Text" Storyboard.TargetProperty="Opacity" From="0" To="1" BeginTime="0:0:2" Duration="0:0:0.5"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="AlertEnglish" TargetType="Control">
        <ControlTemplate.Resources>
            <LinearGradientBrush x:Key="GradientBrush" StartPoint="0,0.5" EndPoint="0.5,0.5" SpreadMethod="Reflect">
                <GradientStop Color="#66FFFFFF" Offset="0"/>
                <GradientStop Color="#FFFF0000" Offset="0.3"/>
            </LinearGradientBrush>
        </ControlTemplate.Resources>
        <Border Margin="0,4,0,0" BorderBrush="{StaticResource GradientBrush}" BorderThickness="0,8,0,10">
            <Border Margin="0,4" BorderBrush="{StaticResource GradientBrush}" BorderThickness="0,0,0,4">
                <Grid>
                    <StackPanel HorizontalAlignment="Center">
                        <Control Name="Spacer" Height="120"/>
                        <Border Name="Title" Margin="0,5,0,0" BorderBrush="{StaticResource GradientBrush}" BorderThickness="0,0,0,4" Opacity="0">
                            <TextBlock Margin="100,0" Foreground="#FFFF0000" FontFamily="Microsoft Sans Serif" FontSize="42" FontWeight="Bold" Text="Security Notice" HorizontalAlignment="Center" LineStackingStrategy="BlockLineHeight" LineHeight="42"/>
                        </Border>
                    </StackPanel>
                    <StackPanel Name="Text" Margin="0,75,0,10" HorizontalAlignment="Center" VerticalAlignment="Top" Opacity="0">
                        <TextBlock FontFamily="Microsoft Sans Serif" FontSize="42" FontWeight="Bold" Text="" LineStackingStrategy="BlockLineHeight" LineHeight="48" HorizontalAlignment="Center">
                            <Run>JR East Group and the Police Department</Run><LineBreak/>
                            <Run>together are now</Run> <Run TextDecorations="Underline" Foreground="#FFFF0000">on a high alert.</Run>
                        </TextBlock>
                        <StackPanel Margin="0,16" HorizontalAlignment="Center">
                            <TextBlock FontFamily="Microsoft Sans Serif" FontSize="34" LineStackingStrategy="BlockLineHeight" LineHeight="40">
                                <Run>If you find</Run> <Run TextDecorations="Underline" Foreground="#FFFF0000">something suspicious </Run> <Run>at a station or on a train,</Run><LineBreak/>
                                <Run>please inform station staff, conductors or security guards</Run><LineBreak/>
                                <Run>as soon as possible.</Run>
                            </TextBlock>
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <EventTrigger RoutedEvent="Loaded" SourceName="Title">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetName="Title" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.5"/>
                        <DoubleAnimation Storyboard.TargetName="Spacer" Storyboard.TargetProperty="Height" From="120" To="0" BeginTime="0:0:1" Duration="0:0:0.9"/>
                        <DoubleAnimation Storyboard.TargetName="Text" Storyboard.TargetProperty="Opacity" From="0" To="1" BeginTime="0:0:2" Duration="0:0:0.5"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="PrioritySeat" TargetType="Control">
        <StackPanel>
            <Border Margin="0,4" Width="540" BorderBrush="#FFD0D0D0" BorderThickness="1" CornerRadius="8" HorizontalAlignment="Center">
                <Viewbox Stretch="Uniform" Width="534" Margin="3">
                    <ctrl:SvgPresenter Source="Themes\E233-7000\SVG\PrioritySeat.svg"/>
                </Viewbox>
            </Border>
            <Viewbox Margin="0,-4,0,-8" Width="860" Stretch="Fill" StretchDirection="DownOnly">
                <TextBlock FontFamily="Meiryo" FontSize="32" Text="優先席を必要とされるお客さまがいらっしゃいましたら、席をお譲りください。" TextAlignment="Center"/>
            </Viewbox>
            <Viewbox Width="560" Stretch="Fill" StretchDirection="DownOnly">
                <TextBlock FontFamily="Microsoft Sans Serif" FontSize="32" Text="Please offer your seat to those who may need it." TextAlignment="Center"/>
            </Viewbox>
        </StackPanel>
    </ControlTemplate>

    <ControlTemplate x:Key="MobilePhone" TargetType="Control">
        <StackPanel Orientation="Horizontal">
            <StackPanel Width="400">
                <Control Name="Spacer"/>
                <Viewbox Name="Image" Width="280" Stretch="Uniform" HorizontalAlignment="Center">
                    <ctrl:SvgPresenter Source="Themes\E233-7000\SVG\MobilePhone.svg"/>
                </Viewbox>
            </StackPanel>
            <StackPanel Width="500" VerticalAlignment="Center">
                <Viewbox Margin="0,0,0,0" Width="400" Height="100" Stretch="Fill" StretchDirection="DownOnly" HorizontalAlignment="Center">
                    <TextBlock FontFamily="Meiryo" FontSize="42" LineStackingStrategy="BlockLineHeight" LineHeight="60">
                        <Run>マナーモードに設定の上、</Run><LineBreak/><Run>通話はご遠慮ください。</Run>
                    </TextBlock>
                </Viewbox>
                <Viewbox Margin="0,8,0,0"  Width="500" Height="100" Stretch="Fill" StretchDirection="DownOnly" HorizontalAlignment="Left">
                    <TextBlock FontFamily="Microsoft Sans Serif" FontSize="26" HorizontalAlignment="Center" LineStackingStrategy="BlockLineHeight" LineHeight="34">
                        <Run>Please set your mobile phone to silent</Run><LineBreak/><Run>mode and refrain from talking on the phone.</Run>
                    </TextBlock>
                </Viewbox>
            </StackPanel>
        </StackPanel>
        <ControlTemplate.Triggers>
            <EventTrigger RoutedEvent="Loaded" SourceName="Image">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetName="Image" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.5"/>
                        <DoubleAnimation Storyboard.TargetName="Spacer" Storyboard.TargetProperty="Height" From="0" To="55" Duration="0:0:0.5"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style x:Key="MainArea" TargetType="Control">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <Border Name="MainAreaBase" BorderThickness="0,15,0,5">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                <GradientStop Color="#FFFFFFFF" Offset="0.35"/>
                                <GradientStop Color="#FFC0C0C0" Offset="0"/>
                            </LinearGradientBrush>
                        </Border.Background>
                        <Border.BorderBrush>
                            <LinearGradientBrush StartPoint="0,0.5" EndPoint="0.5,0.5" SpreadMethod="Reflect">
                                <GradientStop Color="#66FFFFFF" Offset="0"/>
                                <GradientStop Color="#FF68C7AD" Offset="0.2"/>
                                <GradientStop Color="#FF00A090" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.BorderBrush>
                        <Grid>
                            <Control Style="{StaticResource TrainType}" Margin="8,1" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                            <Control Style="{StaticResource Destination}" Margin="220,6,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                            <Control Name="StationName" Style="{StaticResource StationName}" Margin="8,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                            <Control Style="{StaticResource CarNumber}" Margin="0,1,8,0" HorizontalAlignment="Right" VerticalAlignment="Top"/>
                            <Control Style="{StaticResource CurrentTime}" Margin="0,0,10,0" HorizontalAlignment="Right" VerticalAlignment="Bottom"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding TrainInfo.TrainState}" Value="Stopping"/>
                                <Condition Binding="{Binding StationInfo.IsOrigin}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="MainAreaBase" Property="Background" Value="#FF000000"/>
                            <Setter TargetName="MainAreaBase" Property="BorderThickness" Value="0,15,0,0"/>
                            <Setter TargetName="MainAreaBase" Property="Padding" Value="0,0,0,5"/>
                            <Setter TargetName="StationName" Property="Style" Value="{StaticResource StationNameAtOrigin}"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="OptionalArea" TargetType="Control">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <Grid>
                        <Control Name="DetailedRouteMap" Template="{StaticResource DetailedRouteMap}" Visibility="Hidden"/>
                        <Control Name="RouteMap" Template="{StaticResource RouteMap}" Tag="Kanji" Visibility="Hidden"/>
                        <Control Name="InfoView" Visibility="Hidden"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding OptionalArea.Mode}" Value="DetailedRouteMap">
                            <Setter TargetName="DetailedRouteMap" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding OptionalArea.Mode}" Value="RouteMap">
                            <Setter TargetName="RouteMap" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding OptionalArea.Mode}" Value="Platform"/>
                                <Condition Binding="{Binding ThisSideWillOpen}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="InfoView" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="InfoView" Property="Template" Value="{StaticResource PlatformOnThisSide}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding OptionalArea.Mode}" Value="Platform"/>
                                <Condition Binding="{Binding ThisSideWillOpen}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="InfoView" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="InfoView" Property="Template" Value="{StaticResource PlatformOnOppositeSide}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding OptionalArea.Mode}" Value="Door"/>
                                <Condition Binding="{Binding ThisSideWillOpen}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="InfoView" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="InfoView" Property="Template" Value="{StaticResource DoorsOnThisSide}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding OptionalArea.Mode}" Value="Door"/>
                                <Condition Binding="{Binding ThisSideWillOpen}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="InfoView" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="InfoView" Property="Template" Value="{StaticResource DoorsOnOppositeSide}"/>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding OptionalArea.Mode}" Value="Transfers">
                            <Setter TargetName="InfoView" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="InfoView" Property="Template" Value="{StaticResource Transfers}"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding OptionalArea.Mode}" Value="Alert"/>
                                <Condition Binding="{Binding OptionalArea.Language}" Value="Kanji"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="InfoView" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="InfoView" Property="Template" Value="{StaticResource AlertJapanese}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding OptionalArea.Mode}" Value="Alert"/>
                                <Condition Binding="{Binding OptionalArea.Language}" Value="English"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="InfoView" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="InfoView" Property="Template" Value="{StaticResource AlertEnglish}"/>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding OptionalArea.Mode}" Value="PrioritySeat">
                            <Setter TargetName="InfoView" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="InfoView" Property="Template" Value="{StaticResource PrioritySeat}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding OptionalArea.Mode}" Value="MobilePhone">
                            <Setter TargetName="InfoView" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="InfoView" Property="Template" Value="{StaticResource MobilePhone}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ctrl:NextStationView">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ctrl:NextStationView">
                    <StackPanel Width="960" Height="540" Background="#FFFFFFFF">
                        <Control Name="MainArea" Style="{StaticResource MainArea}" Height="170"/>
                        <Control Name="OptionalArea" Style="{StaticResource OptionalArea}" Height="370"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>