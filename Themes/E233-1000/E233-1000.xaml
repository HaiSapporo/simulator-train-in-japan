<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:ctrl="clr-namespace:WatakuCity.NextStation.Controls;assembly=NextStation"
                    xmlns:cvt="clr-namespace:WatakuCity.NextStation.Converter;assembly=NextStation">
    <!-- Brushes -->

    <!-- 路線図用ブラシ -->
    <x:Array x:Key="LineColorBrushes" Type="SolidColorBrush">
        <!-- 京浜東北線 -->
        <SolidColorBrush Color="#FF00C8FF" PresentationOptions:Freeze="True"/>
    </x:Array>

    <!-- 列車種別用ブラシ -->
    <x:Array x:Key="TrainTypeBrushes" Type="SolidColorBrush">
        <!-- 各駅停車 -->
        <SolidColorBrush Color="#FF00C8FF" PresentationOptions:Freeze="True"/>

        <!-- 快速 -->
        <SolidColorBrush Color="#FFFF2000" PresentationOptions:Freeze="True"/>
    </x:Array>

    <!-- 駅ナンバリング用ブラシ -->
    <SolidColorBrush x:Key="StationNumberingLineColor" Color="#FF00C8FF" PresentationOptions:Freeze="True"/>

    <!-- 通過駅などの無効化されたテキストの文字色 -->
    <SolidColorBrush x:Key="InactiveText" Color="#FFC0C0C0" PresentationOptions:Freeze="True"/>

    <!-- 停車駅などの有効なテキストの文字色 -->
    <SolidColorBrush x:Key="ActiveText" Color="#FF000000" PresentationOptions:Freeze="True"/>

    <!-- 路線図用ブラシ デフォルト -->
    <SolidColorBrush x:Key="DefaultLineColor" Color="#FFD0D0D0" PresentationOptions:Freeze="True"/>

    <!-- Converters -->

    <cvt:BrushSelector x:Key="BrushSelector"/>
    <cvt:EquivalenceConverter x:Key="EquivalenceConverter"/>
    <cvt:ExitPositionConverter x:Key="ExitPositionConverter" CarWidth="77" PlatformObjectWidth="38"/>
    <cvt:ExitPositionConverter x:Key="ExitPositionConverterAtAkihabara" CarWidth="77" PlatformObjectWidth="32"/>
    <cvt:PlatformWidthConverter x:Key="PlatformWidthConverter" CarWidth="77"/>
    <cvt:RemoveLinefeed x:Key="RemoveLinefeed"/>
    <cvt:ReverseSignConverter x:Key="ReverseSignConverter"/>
    <cvt:RouteMapSelector x:Key="RouteMapSelector" TargetPage="0"/>
    <cvt:SplitWithLinefeed x:Key="SplitWithLinefeed"/>
    <cvt:TrainOffsetConverter x:Key="TrainOffsetConverter" CarWidth="77"/>
    <cvt:TrainStateConverter x:Key="TrainStateConverter"/>
    <cvt:IsBiggerConverter x:Key="IsBiggerConverter"/>
    <cvt:IsSmallerConverter x:Key="IsSmallerConverter"/>

    <!-- ControlStyles -->

    <Style x:Key="TrainType" TargetType="Control">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <ctrl:OutlineTextControl x:Name="TrainType" FontFamily="Meiryo UI" FontSize="54" FontWeight="Bold" LineHeight="54" Stroke="#FFFFFFFF" StrokeThickness="6" Text="{Binding TrainInfo.TrainType.Kanji}">
                        <ctrl:OutlineTextControl.Fill>
                            <MultiBinding Converter="{StaticResource BrushSelector}">
                                <Binding Source="{StaticResource TrainTypeBrushes}"/>
                                <Binding Path="TrainInfo.TrainType.ColorIndex"/>
                            </MultiBinding>
                        </ctrl:OutlineTextControl.Fill>
                    </ctrl:OutlineTextControl>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding MainArea.Language}" Value="English">
                            <Setter TargetName="TrainType" Property="Text" Value="{Binding TrainInfo.TrainType.English}"/>
                            <Setter TargetName="TrainType" Property="FontStyle" Value="Italic"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding MainArea.Language}" Value="English"/>
                                <Condition Binding="{Binding LineCount, ElementName=TrainType}" Value="2"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="TrainType" Property="FontSize" Value="48"/>
                            <Setter TargetName="TrainType" Property="LineHeight" Value="40"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding StationInfo.IsTerminal}" Value="True">
                <Setter Property="Visibility" Value="Hidden"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Destination" TargetType="Control">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <Grid>
                        <StackPanel Name="Japanese" Orientation="Horizontal">
                            <TextBlock FontFamily="Microsoft Sans Serif" FontSize="36" FontWeight="Bold" HorizontalAlignment="Left" Text="{Binding TrainInfo.Destination.Kanji}"/>
                            <TextBlock Margin="16,0" FontFamily="Microsoft Sans Serif" FontSize="36" FontWeight="Bold" HorizontalAlignment="Left" Text="行"/>
                        </StackPanel>
                        <StackPanel Name="English" Orientation="Horizontal" Opacity="0">
                            <TextBlock FontFamily="Microsoft Sans Serif" FontSize="36" FontWeight="Bold" HorizontalAlignment="Left" Text="for"/>
                            <TextBlock Margin="16,0" FontFamily="Microsoft Sans Serif" FontSize="36" FontWeight="Bold" HorizontalAlignment="Left" Text="{Binding TrainInfo.Destination.English}"/>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding MainArea.Language}" Value="English"/>
                                <Condition Binding="{Binding TrainInfo.TrainState, Converter={StaticResource TrainStateConverter}, ConverterParameter=Departing}" Value="False"/>
                                <Condition Binding="{Binding StationInfo.IsOrigin}" Value="False"/>
                                <Condition Binding="{Binding StationInfo.IsTerminal}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Japanese" Property="Opacity" Value="0"/>
                            <Setter TargetName="English" Property="Opacity" Value="1"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding TrainInfo.TrainState}" Value="Departing">
                <Setter Property="Visibility" Value="Hidden"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding StationInfo.IsOrigin}" Value="True">
                <Setter Property="Visibility" Value="Hidden"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding StationInfo.IsTerminal}" Value="True">
                <Setter Property="Visibility" Value="Hidden"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="StationName" TargetType="Control">
        <Style.Resources>
            <ControlTemplate x:Key="Numbering" TargetType="Control">
                <Viewbox Stretch="Uniform">
                    <Border Width="68" Height="66" Background="{StaticResource StationNumberingLineColor}" CornerRadius="6">
                        <Border Width="52" Height="50" Background="#FFFFFFFF" CornerRadius="2" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <StackPanel>
                                <TextBlock Margin="0,2,0,-6" Foreground="#FF000000" FontFamily="Microsoft Sans Serif" FontSize="20" FontWeight="DemiBold" Text="{Binding LineLetter}" TextAlignment="Center"/>
                                <TextBlock Foreground="#FF000000" FontFamily="Microsoft Sans Serif" FontSize="28" FontWeight="DemiBold" Text="{Binding StationNumber}" TextAlignment="Center"/>
                            </StackPanel>
                        </Border>
                    </Border>
                </Viewbox>
            </ControlTemplate>
            <ControlTemplate x:Key="NumberingWithCode" TargetType="Control">
                <Border Name="NumberingBackground" Width="84" Background="#FF000000" CornerRadius="8">
                    <StackPanel Name="NumberingContainer" Margin="8,0,8,8">
                        <TextBlock Name="Code" Foreground="#FFFFFFFF" FontFamily="Microsoft Sans Serif" FontSize="24" Text="{Binding Code}" TextAlignment="Center"/>
                        <Control Template="{StaticResource Numbering}"/>
                    </StackPanel>
                </Border>
                <ControlTemplate.Triggers>
                    <DataTrigger Binding="{Binding Code}" Value="{x:Null}">
                        <Setter TargetName="NumberingBackground" Property="Background" Value="#00000000"/>
                        <Setter TargetName="Code" Property="Visibility" Value="Collapsed"/>
                        <Setter TargetName="NumberingContainer" Property="Margin" Value="8"/>
                    </DataTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <Grid>
                        <Border Background="#FFFFFFFF" BorderThickness="3" Margin="220,0,70,0" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="570" Height="120">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF000000" Offset="1"/>
                                    <GradientStop Color="#FFFFFFFF"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <StackPanel Orientation="Horizontal">
                                <Control Name="Numbering" Margin="6" Width="84" DataContext="{Binding StationInfo.Numberings[0]}" Template="{StaticResource NumberingWithCode}" VerticalAlignment="Bottom"/>
                                <Viewbox Stretch="Fill" StretchDirection="DownOnly" Margin="-4,-12,15,-18" Width="460">
                                    <ctrl:VerticalTextControl x:Name="StationName" FontFamily="Meiryo UI" FontSize="100" BoldSimulation="True" Foreground="#FF009000" TextAlignment="Center" Text="{Binding StationInfo.Name.Kanji}"/>
                                </Viewbox>
                            </StackPanel>
                        </Border>
                        <TextBlock Name="BeforeStationName" FontFamily="Meiryo" FontSize="40" FontWeight="Bold" LineStackingStrategy="BlockLineHeight" LineHeight="40" Width="200" Margin="10,0,0,-4" HorizontalAlignment="Left" VerticalAlignment="Bottom" TextAlignment="Right" Text="次は"/>
                        <TextBlock Name="AfterStationName" FontFamily="Meiryo" FontSize="40" FontWeight="Bold" LineStackingStrategy="BlockLineHeight" LineHeight="40" Width="150" Margin="0,0,10,-4" HorizontalAlignment="Right" VerticalAlignment="Bottom" TextAlignment="Left" Text=""/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger  Binding="{Binding Text.Length, ElementName=StationName}" Value="2">
                            <Setter TargetName="StationName" Property="AdvanceWidth" Value="180"/>
                        </DataTrigger>
                        
                        <DataTrigger Binding="{Binding MainArea.Language}" Value="English">
                            <Setter TargetName="StationName" Property="Text" Value="{Binding StationInfo.Name.English}"/>
                            <Setter TargetName="StationName" Property="FontFamily" Value="Microsoft Sans Serif"/>
                            <Setter TargetName="StationName" Property="FontSize" Value="90"/>
                            <Setter TargetName="StationName" Property="FontWeight" Value="Normal"/>
                            <Setter TargetName="BeforeStationName" Property="FontFamily" Value="Microsoft Sans Serif"/>
                            <Setter TargetName="BeforeStationName" Property="FontSize" Value="38"/>
                            <Setter TargetName="BeforeStationName" Property="LineHeight" Value="36"/>
                            <Setter TargetName="BeforeStationName" Property="Margin" Value="10,0,0,4"/>
                            <Setter TargetName="AfterStationName" Property="Text" Value=""/>
                        </DataTrigger>
                        
                        <DataTrigger Binding="{Binding MainArea.Language}" Value="Hiragana">
                            <Setter TargetName="StationName" Property="Text" Value="{Binding StationInfo.Name.Hiragana}"/>
                            <Setter TargetName="BeforeStationName" Property="Text" Value="つぎは"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding TrainInfo.TrainState}" Value="Arriving">
                            <Setter TargetName="BeforeStationName" Property="Text" Value="まもなく"/>
                        </DataTrigger>
                        
                        <DataTrigger Binding="{Binding TrainInfo.TrainState}" Value="Stopping">
                            <Setter TargetName="BeforeStationName" Property="Text" Value="ただいま"/>
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding TrainInfo.TrainState}" Value="Running"/>
                                <Condition Binding="{Binding StationInfo.IsTerminal}" Value="True"/>
                                <Condition Binding="{Binding MainArea.Language}" Value="Kanji"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="BeforeStationName" Property="Text" Value="次は終点"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding TrainInfo.TrainState}" Value="Running"/>
                                <Condition Binding="{Binding StationInfo.IsTerminal}" Value="True"/>
                                <Condition Binding="{Binding MainArea.Language}" Value="Hiragana"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="BeforeStationName" Property="Text" Value="つぎは終点"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding TrainInfo.TrainState}" Value="Arriving"/>
                                <Condition Binding="{Binding StationInfo.IsTerminal}" Value="True"/>
                                <Condition Binding="{Binding MainArea.Language}" Value="Kanji"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="BeforeStationName" Property="Text" Value="まもなく&#xA;終点"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding TrainInfo.TrainState}" Value="Stopping"/>
                                <Condition Binding="{Binding StationInfo.IsTerminal}" Value="True"/>
                                <Condition Binding="{Binding MainArea.Language}" Value="Kanji"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="BeforeStationName" Property="Text" Value="終点"/>
                        </MultiDataTrigger>
                        
                        <DataTrigger Binding="{Binding TrainInfo.TrainState}" Value="Departing">
                            <Setter TargetName="Numbering" Property="DataContext" Value="{Binding TrainInfo.Destination.Numberings[0]}"/>
                            <Setter TargetName="StationName" Property="Text" Value="{Binding TrainInfo.Destination.Kanji}"/>
                            <Setter TargetName="BeforeStationName" Property="Text" Value=""/>
                            <Setter TargetName="AfterStationName" Property="Text" Value="行"/>
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding MainArea.Language}" Value="English"/>
                                <Condition Binding="{Binding TrainInfo.TrainState}" Value="Running"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="BeforeStationName" Property="Text" Value="Next"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding MainArea.Language}" Value="English"/>
                                <Condition Binding="{Binding TrainInfo.TrainState}" Value="Arriving"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="BeforeStationName" Property="Text" Value="Arriving at"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding MainArea.Language}" Value="English"/>
                                <Condition Binding="{Binding TrainInfo.TrainState}" Value="Stopping"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="BeforeStationName" Property="Text" Value="Now&#xA;Stopping at"/>
                            <Setter TargetName="BeforeStationName" Property="TextAlignment" Value="Left"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding MainArea.Language}" Value="English"/>
                                <Condition Binding="{Binding TrainInfo.TrainState}" Value="Departing"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Numbering" Property="DataContext" Value="{Binding TrainInfo.Destination.Numberings[0]}"/>
                            <Setter TargetName="StationName" Property="Text" Value="{Binding TrainInfo.Destination.English}"/>
                            <Setter TargetName="BeforeStationName" Property="Text" Value="for"/>
                            <Setter TargetName="AfterStationName" Property="Text" Value=""/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding StationInfo.IsOrigin}" Value="True"/>
                                <Condition Binding="{Binding TrainInfo.TrainState}" Value="Stopping"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Numbering" Property="DataContext" Value="{Binding TrainInfo.Destination.Numberings[0]}"/>
                            <Setter TargetName="StationName" Property="Text" Value="{Binding TrainInfo.Destination.Kanji}"/>
                            <Setter TargetName="BeforeStationName" Property="Text" Value=""/>
                            <Setter TargetName="AfterStationName" Property="Text" Value="行"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding StationInfo.IsOrigin}" Value="True"/>
                                <Condition Binding="{Binding TrainInfo.TrainState}" Value="Stopping"/>
                                <Condition Binding="{Binding MainArea.Language}" Value="English"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Numbering" Property="DataContext" Value="{Binding TrainInfo.Destination.Numberings[0]}"/>
                            <Setter TargetName="StationName" Property="Text" Value="{Binding TrainInfo.Destination.English}"/>
                            <Setter TargetName="BeforeStationName" Property="Text" Value="for"/>
                            <Setter TargetName="AfterStationName" Property="Text" Value=""/>
                            <Setter TargetName="BeforeStationName" Property="TextAlignment" Value="Right"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CurrentTime" TargetType="Control">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <StackPanel Width="100">
                        <TextBlock Name="Caption" FontFamily="Microsoft Sans Serif" FontSize="20" FontWeight="Bold" TextAlignment="Center" Text="現在時刻"/>
                        <Border Background="#FFFFFFFF" CornerRadius="8">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <TextBlock FontFamily="Microsoft Sans Serif" FontSize="36" Width="40" TextAlignment="Right" Text="{Binding Time.Hour}"/>
                                <TextBlock FontFamily="Microsoft Sans Serif" FontSize="36" Text=":"/>
                                <TextBlock FontFamily="Microsoft Sans Serif" FontSize="36" Width="40" TextAlignment="Right" Text="{Binding Time.Minute}"/>
                            </StackPanel>
                        </Border>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding MainArea.Language}" Value="English">
                            <Setter TargetName="Caption" Property="Text" Value="Time"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CarNumber" TargetType="Control">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <Grid Width="150">
                        <Border Background="#FFFFFFFF" CornerRadius="8" Width="60" HorizontalAlignment="Right" VerticalAlignment="Top">
                            <TextBlock FontFamily="Microsoft Sans Serif" FontSize="48" FontWeight="Bold" TextAlignment="Center" Text="{Binding CarNumber}"/>
                        </Border>
                        <TextBlock Name="Caption" Margin="0,56,0,0" FontFamily="Microsoft Sans Serif" FontSize="20" FontWeight="Bold" HorizontalAlignment="Right" VerticalAlignment="Top" TextAlignment="Right" Text="号車"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding MainArea.Language}" Value="English">
                            <Setter TargetName="Caption" Property="Margin" Value="0,0,65,0"/>
                            <Setter TargetName="Caption" Property="Text" Value="Car No."/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LineIcon" TargetType="ctrl:LineIcon">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ctrl:LineIcon">
                    <Viewbox>
                        <Border Width="64" Height="64" Background="#FFFFFFFF" BorderBrush="{TemplateBinding PrimaryLineColor}" BorderThickness="6" CornerRadius="3">
                            <TextBlock Foreground="#FF000000" FontFamily="Microsoft Sans Serif" FontSize="34" Text="{TemplateBinding LineLetter}" TextAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </Viewbox>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IconType" Value="LineColor"/>
                    <Condition Property="LineLetter" Value="{x:Null}"/>
                </MultiTrigger.Conditions>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ctrl:LineIcon">
                            <Viewbox>
                                <Border Width="64" Height="64" Background="{TemplateBinding PrimaryLineColor}">
                                    <Border Width="64" Height="32" VerticalAlignment="Bottom" Background="{TemplateBinding SecondaryLineColor}"/>
                                </Border>
                            </Viewbox>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <Trigger Property="IconType" Value="TrainIcon">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ctrl:LineIcon">
                            <Viewbox>
                                <Border Name="Base" Width="64" Height="64" CornerRadius="3" Background="{TemplateBinding PrimaryLineColor}">
                                    <Grid>
                                        <Border Width="36" Height="40" Background="#FFFFFFFF" CornerRadius="6" Margin="0,6" VerticalAlignment="Top">
                                            <Canvas>
                                                <Line Stroke="{Binding ElementName=Base, Path=Background}" StrokeThickness="3" X1="11" X2="25" Y1="4" Y2="4"></Line>
                                                <Line Stroke="{Binding ElementName=Base, Path=Background}" StrokeThickness="14" X1="4" X2="32" Y1="16" Y2="16"></Line>
                                                <Ellipse Fill="{Binding ElementName=Base, Path=Background}" Width="4" Height="4" Canvas.Left="5" Canvas.Top="30"></Ellipse>
                                                <Ellipse Fill="{Binding ElementName=Base, Path=Background}" Width="4" Height="4" Canvas.Right="5" Canvas.Top="30"></Ellipse>
                                            </Canvas>
                                        </Border>
                                        <Polygon Fill="#FFFFFFFF" Points="22,45,42,45,52,58,48,58,41,49,23,49,16,58,12,58"></Polygon>
                                    </Grid>
                                </Border>
                            </Viewbox>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IconType" Value="Subway">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ctrl:LineIcon">
                            <Viewbox>
                                <Grid Width="64" Height="64">
                                    <Ellipse Width="64" Height="64" StrokeThickness="14" Stroke="{TemplateBinding PrimaryLineColor}"/>
                                    <TextBlock FontFamily="Microsoft Sans Serif" FontSize="30" FontWeight="Bold" Foreground="{TemplateBinding LineLetterColor}" Text="{TemplateBinding LineLetter}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Grid>
                            </Viewbox>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IconType" Value="ShinkansenE5">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ctrl:LineIcon">
                            <Viewbox>
                                <Border Width="64" Height="64" Background="{TemplateBinding PrimaryLineColor}">
                                    <Border Width="64" Height="32" VerticalAlignment="Bottom" Background="{TemplateBinding SecondaryLineColor}"/>
                                </Border>
                            </Viewbox>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IconType" Value="Shinkansen700">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ctrl:LineIcon">
                            <Viewbox>
                                <Border Width="64" Height="64" Background="{TemplateBinding PrimaryLineColor}">
                                    <Border Width="64" Height="32" VerticalAlignment="Bottom" Background="{TemplateBinding SecondaryLineColor}"/>
                                </Border>
                            </Viewbox>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ObjectIcon" TargetType="Control">
        <Style.Resources>
            <ControlTemplate x:Key="Stairs" TargetType="Control">
                <Canvas Width="60" Height="60">
                    <Ellipse Width="5" Height="5" Fill="#FF000000" Canvas.Left="37" Canvas.Top="6"/>
                    <Path Fill="#FF000000">
                        <Path.Data>
                            <PathGeometry>
                                <PathFigure StartPoint="38,12">
                                    <ArcSegment IsLargeArc="False" Point="29,24" RotationAngle="0" Size="12,12" SweepDirection="Counterclockwise"/>
                                    <LineSegment Point="32,24" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="34,18" RotationAngle="0" Size="10,10" SweepDirection="Clockwise"/>
                                    <LineSegment Point="33,40" IsStroked="True"/>
                                    <LineSegment Point="36,40" IsStroked="True"/>
                                    <LineSegment Point="38,27" IsStroked="True"/>
                                    <LineSegment Point="41,28" IsStroked="True"/>
                                    <LineSegment Point="39,34" IsStroked="True"/>
                                    <LineSegment Point="42,36" IsStroked="True"/>
                                    <LineSegment Point="46,25" IsStroked="True"/>
                                    <LineSegment Point="40,22" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="38,12" RotationAngle="0" Size="10,10" SweepDirection="Counterclockwise"/>
                                </PathFigure>
                            </PathGeometry>
                        </Path.Data>
                    </Path>
                    <Ellipse Width="5" Height="5" Fill="#FF000000" Canvas.Left="14" Canvas.Top="12"/>
                    <Path Fill="#FF000000">
                        <Path.Data>
                            <PathGeometry>
                                <PathFigure StartPoint="16,18">
                                    <ArcSegment IsLargeArc="False" Point="8,30" RotationAngle="0" Size="20,20" SweepDirection="Clockwise"/>
                                    <LineSegment Point="10,32" IsStroked="True"/>
                                    <LineSegment Point="15,28" IsStroked="True"/>
                                    <LineSegment Point="15,48" IsStroked="True"/>
                                    <LineSegment Point="18,48" IsStroked="True"/>
                                    <LineSegment Point="19,39" IsStroked="True"/>
                                    <LineSegment Point="26,43" IsStroked="True"/>
                                    <LineSegment Point="26,40" IsStroked="True"/>
                                    <LineSegment Point="20,35" IsStroked="True"/>
                                    <LineSegment Point="21,26" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="23,32" RotationAngle="0" Size="6,8" SweepDirection="Clockwise"/>
                                    <LineSegment Point="26,32" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="16,18" RotationAngle="0" Size="12,14" SweepDirection="Counterclockwise"/>
                                </PathFigure>
                            </PathGeometry>
                        </Path.Data>
                    </Path>
                    <Polyline Stroke="#FF000000" StrokeThickness="4" Points="4,56 13,56 13,52 22,52 22,48 31,48 31,44 40,44 40,40 49,40 49,36 57,36"/>
                </Canvas>
            </ControlTemplate>

            <ControlTemplate x:Key="Escalator" TargetType="Control">
                <Canvas Width="60" Height="60">
                    <Ellipse Width="5" Height="5" Fill="#FF000000" Canvas.Left="22.5" Canvas.Top="8"/>
                    <Path Fill="#FF000000">
                        <Path.Data>
                            <PathGeometry>
                                <PathFigure StartPoint="28,15">
                                    <ArcSegment IsLargeArc="False" Point="30,18" RotationAngle="0" Size="4,4" SweepDirection="Clockwise"/>
                                    <LineSegment Point="29,32" IsStroked="True"/>
                                    <LineSegment Point="21,32" IsStroked="True"/>
                                    <LineSegment Point="20,18" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="22,15" RotationAngle="0" Size="4,4" SweepDirection="Clockwise"/>
                                    <LineSegment Point="28,15" IsStroked="True"/>
                                </PathFigure>
                            </PathGeometry>
                        </Path.Data>
                    </Path>

                    <Path Fill="#FFFFFFFF" Stroke="#FF000000" StrokeThickness="3">
                        <Path.Data>
                            <PathGeometry>
                                <PathFigure StartPoint="10,40">
                                    <LineSegment Point="15,40" IsStroked="True"/>
                                    <LineSegment Point="40,15" IsStroked="True"/>
                                    <LineSegment Point="50,15" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="50,25" RotationAngle="0" Size="5,5" SweepDirection="Clockwise"/>
                                    <LineSegment Point="45,25" IsStroked="True"/>
                                    <LineSegment Point="20,50" IsStroked="True"/>
                                    <LineSegment Point="10,50" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="10,40" RotationAngle="0" Size="5,5" SweepDirection="Clockwise"/>
                                    <LineSegment Point="10,40" IsStroked="True"/>
                                </PathFigure>
                            </PathGeometry>
                        </Path.Data>
                    </Path>
                </Canvas>
            </ControlTemplate>

            <ControlTemplate x:Key="UpEscalator" TargetType="Control">
                <Canvas Width="60" Height="60">
                    <Ellipse Width="5" Height="5" Fill="#FF000000" Canvas.Left="22.5" Canvas.Top="8"/>
                    <Path Fill="#FF000000">
                        <Path.Data>
                            <PathGeometry>
                                <PathFigure StartPoint="28,15">
                                    <ArcSegment IsLargeArc="False" Point="30,18" RotationAngle="0" Size="4,4" SweepDirection="Clockwise"/>
                                    <LineSegment Point="29,32" IsStroked="True"/>
                                    <LineSegment Point="21,32" IsStroked="True"/>
                                    <LineSegment Point="20,18" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="22,15" RotationAngle="0" Size="4,4" SweepDirection="Clockwise"/>
                                    <LineSegment Point="28,15" IsStroked="True"/>
                                </PathFigure>
                            </PathGeometry>
                        </Path.Data>
                    </Path>

                    <Path Fill="#FFFFFFFF" Stroke="#FF000000" StrokeThickness="3">
                        <Path.Data>
                            <PathGeometry>
                                <PathFigure StartPoint="10,40">
                                    <LineSegment Point="15,40" IsStroked="True"/>
                                    <LineSegment Point="40,15" IsStroked="True"/>
                                    <LineSegment Point="50,15" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="50,25" RotationAngle="0" Size="5,5" SweepDirection="Clockwise"/>
                                    <LineSegment Point="45,25" IsStroked="True"/>
                                    <LineSegment Point="20,50" IsStroked="True"/>
                                    <LineSegment Point="10,50" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="10,40" RotationAngle="0" Size="5,5" SweepDirection="Clockwise"/>
                                    <LineSegment Point="10,40" IsStroked="True"/>
                                </PathFigure>
                            </PathGeometry>
                        </Path.Data>
                    </Path>

                    <Polygon Fill="#FF000000" Points="53,37 53,47 50,50 50,42 42,50 40,48 48,40 40,40 43,37"/>
                </Canvas>
            </ControlTemplate>

            <ControlTemplate x:Key="DownEscalator" TargetType="Control">
                <Canvas Width="60" Height="60" RenderTransformOrigin="0.5,0.5">
                    <Ellipse Width="5" Height="5" Fill="#FF000000" Canvas.Left="22.5" Canvas.Top="8"/>
                    <Path Fill="#FF000000">
                        <Path.Data>
                            <PathGeometry>
                                <PathFigure StartPoint="28,15">
                                    <ArcSegment IsLargeArc="False" Point="30,18" RotationAngle="0" Size="4,4" SweepDirection="Clockwise"/>
                                    <LineSegment Point="29,32" IsStroked="True"/>
                                    <LineSegment Point="21,32" IsStroked="True"/>
                                    <LineSegment Point="20,18" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="22,15" RotationAngle="0" Size="4,4" SweepDirection="Clockwise"/>
                                    <LineSegment Point="28,15" IsStroked="True"/>
                                </PathFigure>
                            </PathGeometry>
                        </Path.Data>
                    </Path>

                    <Path Fill="#FFFFFFFF" Stroke="#FF000000" StrokeThickness="3">
                        <Path.Data>
                            <PathGeometry>
                                <PathFigure StartPoint="10,40">
                                    <LineSegment Point="15,40" IsStroked="True"/>
                                    <LineSegment Point="40,15" IsStroked="True"/>
                                    <LineSegment Point="50,15" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="50,25" RotationAngle="0" Size="5,5" SweepDirection="Clockwise"/>
                                    <LineSegment Point="45,25" IsStroked="True"/>
                                    <LineSegment Point="20,50" IsStroked="True"/>
                                    <LineSegment Point="10,50" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="10,40" RotationAngle="0" Size="5,5" SweepDirection="Clockwise"/>
                                    <LineSegment Point="10,40" IsStroked="True"/>
                                </PathFigure>
                            </PathGeometry>
                        </Path.Data>
                    </Path>

                    <Polygon Fill="#FF000000" Points="40,50 40,40 43,37 43,45 51,37 53,39 45,47 53,47 50,50"/>
                    <Canvas.RenderTransform>
                        <ScaleTransform ScaleX="-1"/>
                    </Canvas.RenderTransform>
                </Canvas>
            </ControlTemplate>

            <ControlTemplate x:Key="Elevator" TargetType="Control">
                <Canvas Width="60" Height="60">
                    <Polygon Fill="#FF000000" Points="21,20 29,13 29,9 23,14 23,2 19,2 19,14 13,9 13,13"/>
                    <Polygon Fill="#FF000000" Points="39,2 47,9 47,13 41,8 41,20 37,20 37,8 31,13 31,9"/>
                    <Rectangle Stroke="#FF000000" StrokeThickness="3.5" Width="36" Height="34" Canvas.Left="12" Canvas.Bottom="5"/>

                    <Ellipse Width="3" Height="3" Fill="#FF000000" Canvas.Left="19.5" Canvas.Top="30"/>
                    <Path Fill="#FF000000">
                        <Path.Data>
                            <PathGeometry>
                                <PathFigure StartPoint="21,34">
                                    <LineSegment Point="19,34" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="17,38" RotationAngle="0" Size="4,4" SweepDirection="Counterclockwise"/>
                                    <LineSegment Point="17,40" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="18,42" RotationAngle="0" Size="2,2" SweepDirection="Counterclockwise"/>
                                    <LineSegment Point="18,50" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="20,50" RotationAngle="0" Size="1,1" SweepDirection="Counterclockwise"/>
                                    <LineSegment Point="21,42" IsStroked="True"/>
                                    <LineSegment Point="22,50" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="24,50" RotationAngle="0" Size="1,1" SweepDirection="Counterclockwise"/>
                                    <LineSegment Point="24,42" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="25,40" RotationAngle="0" Size="2,2" SweepDirection="Counterclockwise"/>
                                    <LineSegment Point="25,38" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="23,34" RotationAngle="0" Size="4,4" SweepDirection="Counterclockwise"/>
                                </PathFigure>
                            </PathGeometry>
                        </Path.Data>
                    </Path>

                    <Ellipse Width="3" Height="3" Fill="#FF000000" Canvas.Left="28.5" Canvas.Top="30"/>
                    <Path Fill="#FF000000">
                        <Path.Data>
                            <PathGeometry>
                                <PathFigure StartPoint="30,34">
                                    <LineSegment Point="28,34" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="26,38" RotationAngle="0" Size="4,4" SweepDirection="Counterclockwise"/>
                                    <LineSegment Point="26,40" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="27,42" RotationAngle="0" Size="2,2" SweepDirection="Counterclockwise"/>
                                    <LineSegment Point="27,50" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="29,50" RotationAngle="0" Size="1,1" SweepDirection="Counterclockwise"/>
                                    <LineSegment Point="30,42" IsStroked="True"/>
                                    <LineSegment Point="31,50" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="33,50" RotationAngle="0" Size="1,1" SweepDirection="Counterclockwise"/>
                                    <LineSegment Point="33,42" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="34,40" RotationAngle="0" Size="2,2" SweepDirection="Counterclockwise"/>
                                    <LineSegment Point="34,38" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="32,34" RotationAngle="0" Size="4,4" SweepDirection="Counterclockwise"/>
                                </PathFigure>
                            </PathGeometry>
                        </Path.Data>
                    </Path>

                    <Ellipse Width="3" Height="3" Fill="#FF000000" Canvas.Left="37.5" Canvas.Top="30"/>
                    <Path Fill="#FF000000">
                        <Path.Data>
                            <PathGeometry>
                                <PathFigure StartPoint="39,34">
                                    <LineSegment Point="37,34" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="35,38" RotationAngle="0" Size="4,4" SweepDirection="Counterclockwise"/>
                                    <LineSegment Point="35,40" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="36,42" RotationAngle="0" Size="2,2" SweepDirection="Counterclockwise"/>
                                    <LineSegment Point="36,50" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="38,50" RotationAngle="0" Size="1,1" SweepDirection="Counterclockwise"/>
                                    <LineSegment Point="39,42" IsStroked="True"/>
                                    <LineSegment Point="40,50" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="42,50" RotationAngle="0" Size="1,1" SweepDirection="Counterclockwise"/>
                                    <LineSegment Point="42,42" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="43,40" RotationAngle="0" Size="2,2" SweepDirection="Counterclockwise"/>
                                    <LineSegment Point="43,38" IsStroked="True"/>
                                    <ArcSegment IsLargeArc="False" Point="41,34" RotationAngle="0" Size="4,4" SweepDirection="Counterclockwise"/>
                                </PathFigure>
                            </PathGeometry>
                        </Path.Data>
                    </Path>
                </Canvas>
            </ControlTemplate>
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <Viewbox Stretch="Fill">
                        <Border Width="64" Height="64" Background="#FFFFFFFF" BorderBrush="#FF000000" BorderThickness="2" CornerRadius="4">
                            <Control Name="View" Template="{StaticResource Stairs}" RenderTransformOrigin="0.5,0.5"/>
                        </Border>
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Key}" Value="UpEscalator">
                            <Setter TargetName="View" Property="Template" Value="{StaticResource UpEscalator}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Key}" Value="DownEscalator">
                            <Setter TargetName="View" Property="Template" Value="{StaticResource DownEscalator}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Key}" Value="Escalator">
                            <Setter TargetName="View" Property="Template" Value="{StaticResource Escalator}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Key}" Value="Elevator">
                            <Setter TargetName="View" Property="Template" Value="{StaticResource Elevator}"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Direction}" Value="Opposite">
                            <Setter TargetName="View" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="-1"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Direction}" Value="None">
                            <Setter TargetName="View" Property="FlowDirection" Value="LeftToRight"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TranferListOfDetailedRouteMap" TargetType="ItemsControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ItemsControl">
                    <ContentControl Name="Container" Margin="2,0" Height="152" VerticalAlignment="Top" HorizontalAlignment="Left">
                        <Viewbox StretchDirection="DownOnly" VerticalAlignment="Top" HorizontalAlignment="Left">
                            <StackPanel IsItemsHost="True" Width="102"/>
                        </Viewbox>
                    </ContentControl>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding DataContext.OptionalArea.Language, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Value="English">
                            <Setter TargetName="Container" Property="Height" Value="145"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <DockPanel Margin="0,1,0,0" DataContext="{Binding LineInfo}">
                        <ItemsControl ItemsSource="{Binding Icons}" DockPanel.Dock="Left" HorizontalAlignment="Left" VerticalAlignment="Top">
                            <ItemsControl.Template>
                                <ControlTemplate TargetType="ItemsControl">
                                    <StackPanel IsItemsHost="True" Orientation="Horizontal"/>
                                </ControlTemplate>
                            </ItemsControl.Template>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <ctrl:LineIcon x:Name="LineIcon" Style="{StaticResource LineIcon}" Margin="0,0,2,0" Width="16" Height="16" IconType="{Binding IconType}" PrimaryLineColor="{Binding LineColor}" SecondaryLineColor="{Binding LineColor2}" LineLetter="{Binding LineLetter}" LineLetterColor="{StaticResource ActiveText}"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <ctrl:VerticalTextMultiLine x:Name="LineName"
                                                    ItemsSource="{Binding Kanji, Converter={StaticResource SplitWithLinefeed}}"
                                                    AlternationCount="4"
                                                    FontFamily="Meiryo UI"
                                                    FontSize="16"
                                                    Foreground="{StaticResource ActiveText}"
                                                    HorizontalAlignment="Left"
                                                    VerticalAlignment="Top">
                            <ctrl:VerticalTextMultiLine.Template>
                                <ControlTemplate TargetType="ctrl:VerticalTextMultiLine">
                                    <StackPanel IsItemsHost="True"/>
                                </ControlTemplate>
                            </ctrl:VerticalTextMultiLine.Template>
                            <ctrl:VerticalTextMultiLine.ItemContainerStyle>
                                <Style TargetType="ContentPresenter">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Items.Count, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ctrl:VerticalTextMultiLine}}}" Value="20">
                                            <Setter Property="Margin" Value="0,-5"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ctrl:VerticalTextMultiLine.ItemContainerStyle>
                            <ctrl:VerticalTextMultiLine.ItemTemplate>
                                <DataTemplate>
                                    <Viewbox Name="LineContainer" Margin="0,-2,0,0" Height="20" Stretch="Fill" StretchDirection="DownOnly" HorizontalAlignment="Left" VerticalAlignment="Top">
                                        <TextBlock Name="Text"
                                                   FontFamily="{Binding FontFamily, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ctrl:VerticalTextMultiLine}}}"
                                                   FontSize="{Binding FontSize, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ctrl:VerticalTextMultiLine}}}"
                                                   Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ctrl:VerticalTextMultiLine}}}"
                                                   Text="{Binding}"/>
                                    </Viewbox>
                                    <DataTemplate.Triggers>
                                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                            <Setter TargetName="LineContainer" Property="HorizontalAlignment" Value="Left"/>
                                        </Trigger>
                                        <DataTrigger Binding="{Binding DataContext.OptionalArea.Language, RelativeSource={RelativeSource AncestorType={x:Type ctrl:NextStationView}}}" Value="English">
                                            <Setter TargetName="LineContainer" Property="Margin" Value="0,-1,0,0"/>
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ctrl:VerticalTextMultiLine.ItemTemplate>
                        </ctrl:VerticalTextMultiLine>
                    </DockPanel>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding DataContext.OptionalArea.Language, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="English">
                            <Setter TargetName="LineName" Property="ItemsSource" Value="{Binding English, Converter={StaticResource SplitWithLinefeed}}"/>
                            <Setter TargetName="LineName" Property="FontFamily" Value="Microsoft Sans Serif"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DetailedRouteMapList" TargetType="ItemsControl">
        <Setter Property="AlternationCount" Value="8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ItemsControl">
                    <StackPanel Name="Host" IsItemsHost="True" Orientation="Horizontal" HorizontalAlignment="Right"/>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Side}" Value="Right">
                            <Setter TargetName="Host" Property="FlowDirection" Value="RightToLeft"/>
                            <Setter TargetName="Host" Property="HorizontalAlignment" Value="Left"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <DataTemplate.Resources>
                        <cvt:TransferDisplaySelector x:Key="TransferDisplaySelectorKanji" TargetMode="DetailedRouteMap" TargetLanguage="Kanji"/>
                        <cvt:TransferDisplaySelector x:Key="TransferDisplaySelectorEnglish" TargetMode="DetailedRouteMap" TargetLanguage="English"/>
                        <TranslateTransform x:Key="MarkerOffset" X="-52" PresentationOptions:Freeze="True"/>
                        <ControlTemplate x:Key="Marker" TargetType="Control">
                            <Canvas Width="50" Height="40">
                                <Polygon Fill="#FFFFFFFF" Stroke="#FF000000" StrokeLineJoin="Round" StrokeThickness="2" Points="0,0, 37,0, 50,20, 37,40, 0,40"/>
                                <Polygon Stroke="#FFFFFFFF" StrokeLineJoin="Round" StrokeThickness="2.5" Points="2,2, 36,2, 48,20, 36,38, 2,38">
                                    <Polygon.Fill>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF40C800" Offset="0.5"/>
                                            <GradientStop Color="#FF00B000" Offset="0.5"/>
                                        </LinearGradientBrush>
                                    </Polygon.Fill>
                                </Polygon>
                            </Canvas>
                        </ControlTemplate>
                        <DataTemplate x:Key="VerticalTextItemKanji">
                            <Viewbox Name="TextContainer" Stretch="Fill" MinHeight="40" StretchDirection="DownOnly" HorizontalAlignment="Right">
                                <ctrl:VerticalTextControl x:Name="Text"
                                                                  FontFamily="Meiryo"
                                                                  FontSize="{Binding FontSize, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ctrl:VerticalTextMultiLine}}}"
                                                                  Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ctrl:VerticalTextMultiLine}}}"
                                                                  IsVertical="{Binding IsVertical, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ctrl:VerticalTextMultiLine}}}"
                                                                  Text="{Binding}"
                                                                  TextAlignment="Right"/>
                            </Viewbox>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Length}" Value="1">
                                    <Setter TargetName="Text" Property="AdvanceWidth" Value="200"/>
                                    <Setter TargetName="Text" Property="ApplyAdvanceWidthToLastChar" Value="True"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Length}" Value="2">
                                    <Setter TargetName="Text" Property="AdvanceWidth" Value="200"/>
                                </DataTrigger>
                                <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                    <Setter TargetName="TextContainer" Property="Width" Value="125"/>
                                </Trigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                        <DataTemplate x:Key="VerticalTextItemEnglish">
                            <Viewbox Name="TextContainer" Stretch="Fill" Width="165" MinHeight="40" StretchDirection="DownOnly" HorizontalAlignment="Left">
                                <ctrl:VerticalTextControl x:Name="Text"
                                                                  FontFamily="Microsoft Sans Serif"
                                                                  FontSize="{Binding FontSize, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ctrl:VerticalTextMultiLine}}}"
                                                                  Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ctrl:VerticalTextMultiLine}}}"
                                                                  IsVertical="{Binding IsVertical, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ctrl:VerticalTextMultiLine}}}"
                                                                  Text="{Binding}"
                                                                  TextAlignment="Right"/>
                            </Viewbox>
                            <DataTemplate.Triggers>
                                <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                    <Setter TargetName="TextContainer" Property="HorizontalAlignment" Value="Right"/>
                                    <Setter TargetName="TextContainer" Property="Width" Value="160"/>
                                </Trigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </DataTemplate.Resources>
                    <Grid Name="LineColor" Margin="-0.2,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Name="StationNameRow" Height="150"/>
                            <RowDefinition Height="50"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Name="BeforeStationExtension" Width="0"/>
                            <ColumnDefinition Width="52.5"/>
                            <ColumnDefinition Width="52.5"/>
                            <ColumnDefinition Name="AfterStationExtension" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Canvas Height="46" Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="2">
                            <Path Name="AfterStation">
                                <Path.Fill>
                                    <MultiBinding Converter="{StaticResource BrushSelector}">
                                        <Binding Source="{StaticResource LineColorBrushes}"/>
                                        <Binding Path="LineColorIndexAtAfterStation"/>
                                    </MultiBinding>
                                </Path.Fill>
                                <Path.Data>
                                    <PathGeometry>
                                        <PathFigure StartPoint="0,0">
                                            <LineSegment Point="53,0" IsStroked="True"/>
                                            <LineSegment Point="53,46" IsStroked="True"/>
                                            <LineSegment Point="0,46" IsStroked="True"/>
                                            <LineSegment Point="0,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Path.Data>
                            </Path>
                            <ContentControl Canvas.Right="45" Canvas.Top="11">
                            </ContentControl>
                        </Canvas>
                        <Canvas Height="46" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2">
                            <Path Name="BeforeStation">
                                <Path.Fill>
                                    <MultiBinding Converter="{StaticResource BrushSelector}">
                                        <Binding Source="{StaticResource LineColorBrushes}"/>
                                        <Binding Path="LineColorIndexAtBeforeStation"/>
                                    </MultiBinding>
                                </Path.Fill>
                                <Path.Data>
                                    <PathGeometry>
                                        <PathFigure StartPoint="0,0">
                                            <LineSegment Point="53,0" IsStroked="True"/>
                                            <LineSegment Point="53,46" IsStroked="True"/>
                                            <LineSegment Point="0,46" IsStroked="True"/>
                                            <LineSegment Point="0,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Path.Data>
                            </Path>
                        </Canvas>
                        <Viewbox Name="MinContainer" Grid.Row="1" Grid.Column="2" Grid.ColumnSpan="2" Margin="40,7,0,7" Width="36" HorizontalAlignment="Left" VerticalAlignment="Bottom" Stretch="Fill" StretchDirection="DownOnly" Visibility="Hidden">
                            <TextBlock Name="Min" Foreground="#FFFFFFFF" FontFamily="Microsoft Sans Serif" FontSize="18" Text="(分)"/>
                        </Viewbox>
                        <ContentControl Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" FlowDirection="LeftToRight">
                            <StackPanel Orientation="Vertical">
                                <Canvas Name="StationNameContainer" Height="130">
                                    <Viewbox Name="StationNameViewBox" Width="130" Height="105" Stretch="Fill" StretchDirection="DownOnly" HorizontalAlignment="Center">
                                        <ctrl:VerticalTextMultiLine x:Name="StationName"
                                                                    ItemsSource="{Binding StationName.Kanji, Converter={StaticResource SplitWithLinefeed}}"
                                                                    ItemTemplate="{StaticResource VerticalTextItemKanji}"
                                                                    AlternationCount="2"
                                                                    FontSize="36"
                                                                    Foreground="{StaticResource InactiveText}"
                                                                    IsVertical="True">
                                            <ctrl:VerticalTextMultiLine.Template>
                                                <ControlTemplate TargetType="ctrl:VerticalTextMultiLine">
                                                    <StackPanel IsItemsHost="True" Width="{Binding Width, ElementName=StationNameViewBox}"/>
                                                </ControlTemplate>
                                            </ctrl:VerticalTextMultiLine.Template>
                                            <ctrl:VerticalTextMultiLine.ItemContainerStyle>
                                                <Style TargetType="ContentPresenter">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Items.Count, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ctrl:VerticalTextMultiLine}}}" Value="2">
                                                            <Setter Property="Margin" Value="0,-5"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ctrl:VerticalTextMultiLine.ItemContainerStyle>
                                        </ctrl:VerticalTextMultiLine>
                                        <Viewbox.LayoutTransform>
                                            <RotateTransform Angle="90"/>
                                        </Viewbox.LayoutTransform>
                                    </Viewbox>
                                </Canvas>
                                <TextBlock Name="Numbering" Height="20" FontFamily="Microsoft Sans Serif" FontSize="20" Foreground="{StaticResource InactiveText}" TextAlignment="Center">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0}-{1}">
                                            <Binding Path="Numberings[0].LineLetter"/>
                                            <Binding Path="Numberings[0].StationNumber"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </StackPanel>
                        </ContentControl>

                        <Grid Name="StationInfo" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Height="46">
                            <ContentControl Width="22" Height="28">
                                <Polygon Name="Pass" Fill="#FFEBEBEB" Points="0,0, 7,0, 21,14, 7,27, 0,27, 14,14"/>
                            </ContentControl>
                            <TextBlock Name="ArrivalTime" Background="{StaticResource DefaultLineColor}" Height="38" Width="52" FontFamily="Microsoft Sans Serif" FontSize="32" FontWeight="Bold" Foreground="{StaticResource ActiveText}" Text="{Binding ArrivalTime}" TextAlignment="Center"/>
                            <Control Name="Marker" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ContentControl Name="Transfers" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" FlowDirection="LeftToRight" DataContext="{Binding Transfer, Converter={StaticResource TransferDisplaySelectorKanji}}">
                            <ItemsControl ItemsSource="{Binding Lines}" Style="{StaticResource TranferListOfDetailedRouteMap}"/>
                        </ContentControl>
                    </Grid>
                    <DataTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding StationName.Kanji.Length}" Value="1"/>
                                <Condition Binding="{Binding DataContext.OptionalArea.Language, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Value="Kanji"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="StationName" Property="AdvanceWidth" Value="200"/>
                            <Setter TargetName="StationName" Property="ApplyAdvanceWidthToLastChar" Value="True"/>
                        </MultiDataTrigger>
                        
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding StationName.Kanji.Length}" Value="2"/>
                                <Condition Binding="{Binding DataContext.OptionalArea.Language, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Value="Kanji"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="StationName" Property="AdvanceWidth" Value="200"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsStartOfDetailedRouteMap}" Value="True"/>
                                <Condition Binding="{Binding DataContext.Side, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Value="Left"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="BeforeStationExtension" Property="Width" Value="62"/>
                            <Setter TargetName="BeforeStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="0,0">
                                            <LineSegment Point="115,0" IsStroked="True"/>
                                            <LineSegment Point="115,46" IsStroked="True"/>
                                            <LineSegment Point="0,46" IsStroked="True"/>
                                            <LineSegment Point="0,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsStartOfDetailedRouteMap}" Value="True"/>
                                <Condition Binding="{Binding DataContext.Side, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Value="Right"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="BeforeStationExtension" Property="Width" Value="57"/>
                            <Setter TargetName="BeforeStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="0,0">
                                            <LineSegment Point="110,0" IsStroked="True"/>
                                            <LineSegment Point="110,46" IsStroked="True"/>
                                            <LineSegment Point="0,46" IsStroked="True"/>
                                            <LineSegment Point="0,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="MinContainer" Property="Visibility" Value="Visible"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEndOfDetailedRouteMap}" Value="True"/>
                                <Condition Binding="{Binding DataContext.Side, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Value="Left"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="AfterStationExtension" Property="Width" Value="60"/>
                            <Setter TargetName="AfterStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="0,0">
                                            <LineSegment Point="83,0" IsStroked="True"/>
                                            <LineSegment Point="103,23" IsStroked="True"/>
                                            <LineSegment Point="83,46" IsStroked="True"/>
                                            <LineSegment Point="0,46" IsStroked="True"/>
                                            <LineSegment Point="0,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="MinContainer" Property="Visibility" Value="Visible"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEndOfDetailedRouteMap}" Value="True"/>
                                <Condition Binding="{Binding DataContext.Side, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Value="Right"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="AfterStationExtension" Property="Width" Value="65"/>
                            <Setter TargetName="AfterStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="0,0">
                                            <LineSegment Point="88,0" IsStroked="True"/>
                                            <LineSegment Point="108,23" IsStroked="True"/>
                                            <LineSegment Point="88,46" IsStroked="True"/>
                                            <LineSegment Point="0,46" IsStroked="True"/>
                                            <LineSegment Point="0,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsOrigin}" Value="True"/>
                                <Condition Binding="{Binding DataContext.Side, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Value="Left"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="BeforeStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="30,0">
                                            <LineSegment Point="115,0" IsStroked="True"/>
                                            <LineSegment Point="115,46" IsStroked="True"/>
                                            <LineSegment Point="30,46" IsStroked="True"/>
                                            <LineSegment Point="30,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsOrigin}" Value="True"/>
                                <Condition Binding="{Binding DataContext.Side, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Value="Right"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="BeforeStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="30,0">
                                            <LineSegment Point="110,0" IsStroked="True"/>
                                            <LineSegment Point="110,46" IsStroked="True"/>
                                            <LineSegment Point="30,46" IsStroked="True"/>
                                            <LineSegment Point="30,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <DataTrigger Binding="{Binding IsTerminal}" Value="True">
                            <Setter TargetName="BeforeStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="0,0">
                                            <LineSegment Point="90,0" IsStroked="True"/>
                                            <LineSegment Point="90,46" IsStroked="True"/>
                                            <LineSegment Point="0,46" IsStroked="True"/>
                                            <LineSegment Point="0,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="AfterStation" Property="Fill" Value="{StaticResource DefaultLineColor}"/>
                            <Setter TargetName="Min" Property="Foreground" Value="#FF000000"/>
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsTerminal}" Value="True"/>
                                <Condition Binding="{Binding IsLineEnd}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="AfterStation" Property="Visibility" Value="Hidden"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsTerminal}" Value="True"/>
                                <Condition Binding="{Binding IsLineStart}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="AfterStation" Property="Visibility" Value="Hidden"/>
                        </MultiDataTrigger>

                        <DataTrigger Binding="{Binding IsOmissionStart}" Value="True">
                            <Setter TargetName="AfterStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="52,0">
                                            <LineSegment Point="102,0" IsStroked="True"/>
                                            <ArcSegment IsLargeArc="False" Point="102,22" RotationAngle="0" Size="8.5,12.5" SweepDirection="Clockwise"/>
                                            <ArcSegment IsLargeArc="False" Point="102,46" RotationAngle="0" Size="8,13.5" SweepDirection="Counterclockwise"/>
                                            <LineSegment Point="52,46" IsStroked="True"/>
                                            <LineSegment Point="52,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding IsOmissionEnd}" Value="True">
                            <Setter TargetName="BeforeStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="3,0">
                                            <LineSegment Point="53,0" IsStroked="True"/>
                                            <LineSegment Point="53,46" IsStroked="True"/>
                                            <LineSegment Point="5,46" IsStroked="True"/>
                                            <ArcSegment IsLargeArc="False" Point="3,24" RotationAngle="0" Size="8.5,12.5" SweepDirection="Clockwise"/>
                                            <ArcSegment IsLargeArc="False" Point="3,0" RotationAngle="0" Size="8,13.5" SweepDirection="Counterclockwise"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding IsCurrent}" Value="True">
                            <Setter TargetName="Marker" Property="Template" Value="{StaticResource Marker}"/>
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsCurrent}" Value="True"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.TrainState, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Value="Running"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Marker" Property="RenderTransform" Value="{StaticResource MarkerOffset}"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsCurrent}" Value="True"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.TrainState, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Value="Arriving"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Marker" Property="RenderTransform" Value="{StaticResource MarkerOffset}"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsCurrent}" Value="True"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.TrainState, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Value="Stopping"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ArrivalTime" Property="Visibility" Value="Collapsed"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsCurrent}" Value="True"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.TrainState, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Value="Departing"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ArrivalTime" Property="Visibility" Value="Collapsed"/>
                        </MultiDataTrigger>

                        <DataTrigger Binding="{Binding StationState}" Value="Stop">
                            <Setter TargetName="StationName" Property="Foreground" Value="{StaticResource ActiveText}"/>
                            <Setter TargetName="Numbering" Property="Foreground" Value="{StaticResource ActiveText}"/>
                            <Setter TargetName="ArrivalTime" Property="Background" Value="#FFFFFFFF"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding StationState}" Value="Pass">
                            <Setter TargetName="ArrivalTime" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="Pass" Property="Fill" Value="#FFFFFFFF"/>
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding StationState}" Value="Default"/>
                                <Condition Binding="{Binding InitialStationState}" Value="Stop"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ArrivalTime" Property="Foreground" Value="#00000000"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding StationState}" Value="Default"/>
                                <Condition Binding="{Binding InitialStationState}" Value="Pass"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ArrivalTime" Property="Visibility" Value="Collapsed"/>
                        </MultiDataTrigger>

                        <DataTrigger Binding="{Binding DataContext.OptionalArea.Language, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Value="English">
                            <Setter TargetName="StationName" Property="ItemsSource" Value="{Binding StationName.English, Converter={StaticResource SplitWithLinefeed}}"/>
                            <Setter TargetName="StationName" Property="ItemTemplate" Value="{StaticResource VerticalTextItemEnglish}"/>
                            <Setter TargetName="StationName" Property="IsVertical" Value="False"/>
                            <Setter TargetName="StationNameRow" Property="Height" Value="175"/>
                            <Setter TargetName="StationNameContainer" Property="Height" Value="155"/>
                            <Setter TargetName="StationNameViewBox" Property="Width" Value="175"/>
                            <Setter TargetName="StationNameViewBox" Property="HorizontalAlignment" Value="Left"/>
                            <Setter TargetName="StationNameViewBox" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="270"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="StationNameContainer" Property="RenderTransformOrigin" Value="1,1"/>
                            <Setter TargetName="StationNameContainer" Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform Angle="30"/>
                                        <TranslateTransform X="10" Y="20"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Min" Property="Text" Value="(min)"/>
                            <Setter TargetName="Transfers" Property="DataContext" Value="{Binding Transfer, Converter={StaticResource TransferDisplaySelectorEnglish}}"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding DataContext.Side, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Value="Right">
                            <Setter TargetName="StationInfo" Property="FlowDirection" Value="RightToLeft"/>
                            <Setter TargetName="MinContainer" Property="Grid.Column" Value="0"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RouteMapList" TargetType="ItemsControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ItemsControl">
                    <StackPanel Name="Host" IsItemsHost="True" Orientation="Horizontal"/>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding DataContext.TrainInfo.Direction, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Value="Forward"/>
                                <Condition Binding="{Binding DataContext.Side, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Value="Right"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Host" Property="FlowDirection" Value="RightToLeft"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding DataContext.TrainInfo.Direction, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Value="Opposite"/>
                                <Condition Binding="{Binding DataContext.Side, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Value="Left"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Host" Property="FlowDirection" Value="RightToLeft"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <DataTemplate.Resources>
                        <TranslateTransform x:Key="MarkerOffset" X="-26" PresentationOptions:Freeze="True"/>
                        <ControlTemplate x:Key="Marker" TargetType="Control">
                            <Border Name="Marker">
                                <Border.Background>
                                    <MultiBinding Converter="{StaticResource BrushSelector}">
                                        <Binding Source="{StaticResource LineColorBrushes}"/>
                                        <Binding Path="LineColorIndexAtAfterStation"/>
                                    </MultiBinding>
                                </Border.Background>
                                <Canvas Width="18" HorizontalAlignment="Right">
                                    <Polygon Fill="#FFFFFFFF" Stroke="#FF000000" StrokeLineJoin="Round" StrokeThickness="1.5" Points="0.5,0.5, 8,0.5, 21,18, 8,35.5, 0.5,35.5"/>
                                    <Polygon Stroke="#FFFFFFFF" StrokeLineJoin="Round" StrokeThickness="1.5" Points="1.5,1.5, 7.5,1.5, 19.5,18, 7.5,34.5, 1.5,34.5">
                                        <Polygon.Fill>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FF40C800" Offset="0.5"/>
                                                <GradientStop Color="#FF00B000" Offset="0.5"/>
                                            </LinearGradientBrush>
                                        </Polygon.Fill>
                                    </Polygon>
                                </Canvas>
                            </Border>
                        </ControlTemplate>
                    </DataTemplate.Resources>
                    <Grid>
                        <Canvas Name="LineColor" Margin="0,112,0,0" Width="39" Height="36" VerticalAlignment="Top">
                            <Path Name="BeforeStation">
                                <Path.Fill>
                                    <MultiBinding Converter="{StaticResource BrushSelector}">
                                        <Binding Source="{StaticResource LineColorBrushes}"/>
                                        <Binding Path="LineColorIndexAtBeforeStation"/>
                                    </MultiBinding>
                                </Path.Fill>
                                <Path.Data>
                                    <PathGeometry>
                                        <PathFigure StartPoint="0,0">
                                            <LineSegment Point="20.5,0" IsStroked="True"/>
                                            <LineSegment Point="20.5,36" IsStroked="True"/>
                                            <LineSegment Point="0,36" IsStroked="True"/>
                                            <LineSegment Point="0,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Path.Data>
                            </Path>
                            <Path Name="AfterStation">
                                <Path.Fill>
                                    <MultiBinding Converter="{StaticResource BrushSelector}">
                                        <Binding Source="{StaticResource LineColorBrushes}"/>
                                        <Binding Path="LineColorIndexAtAfterStation"/>
                                    </MultiBinding>
                                </Path.Fill>
                                <Path.Data>
                                    <PathGeometry>
                                        <PathFigure StartPoint="20,0">
                                            <LineSegment Point="39,0" IsStroked="True"/>
                                            <LineSegment Point="39,36" IsStroked="True"/>
                                            <LineSegment Point="20,36" IsStroked="True"/>
                                            <LineSegment Point="20,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Path.Data>
                            </Path>
                            <Control Name="Option"/>
                        </Canvas>
                        <StackPanel Name="Container" Width="39" FlowDirection="LeftToRight">
                            <ContentControl Name="StationNameArea" Height="110">
                                <Viewbox Name="StationNameViewBox" Width="110" Height="39" Stretch="Fill" StretchDirection="DownOnly" VerticalAlignment="Bottom">
                                    <ctrl:VerticalTextMultiLine x:Name="StationName" ItemsSource="{Binding StationName.Kanji, Converter={StaticResource SplitWithLinefeed}}"
                                                                AlternationCount="2"
                                                                FontFamily="Meiryo"
                                                                FontSize="22"
                                                                Foreground="{StaticResource InactiveText}"
                                                                IsVertical="True">
                                        <ctrl:VerticalTextMultiLine.Template>
                                            <ControlTemplate TargetType="ctrl:VerticalTextMultiLine">
                                                <StackPanel IsItemsHost="True"/>
                                            </ControlTemplate>
                                        </ctrl:VerticalTextMultiLine.Template>
                                        <ctrl:VerticalTextMultiLine.ItemContainerStyle>
                                            <Style TargetType="ContentPresenter">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Items.Count, RelativeSource={RelativeSource AncestorType={x:Type ctrl:VerticalTextMultiLine}}}" Value="2">
                                                        <Setter Property="Margin" Value="0,-3"/>
                                                    </DataTrigger>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding Items.Count, RelativeSource={RelativeSource AncestorType={x:Type ctrl:VerticalTextMultiLine}}}" Value="2"/>
                                                            <Condition Binding="{Binding DataContext.OptionalArea.Language, RelativeSource={RelativeSource AncestorType={x:Type ctrl:NextStationView}}}" Value="English"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Margin" Value="0,-2"/>
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ctrl:VerticalTextMultiLine.ItemContainerStyle>
                                        <ctrl:VerticalTextMultiLine.ItemTemplate>
                                            <DataTemplate>
                                                <Viewbox Name="TextContainer" Width="110" Height="27" Stretch="Fill" StretchDirection="DownOnly" HorizontalAlignment="Right">
                                                    <ctrl:VerticalTextControl x:Name="Text"
                                                                  AdvanceWidth="{Binding AdvanceWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ctrl:VerticalTextMultiLine}}}"
                                                                  FontFamily="{Binding FontFamily, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ctrl:VerticalTextMultiLine}}}"
                                                                  FontSize="{Binding FontSize, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ctrl:VerticalTextMultiLine}}}"
                                                                  Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ctrl:VerticalTextMultiLine}}}"
                                                                  IsVertical="{Binding IsVertical, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ctrl:VerticalTextMultiLine}}}"
                                                                  Text="{Binding}"
                                                                  TextAlignment="Right"/>
                                                </Viewbox>
                                                <DataTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding}" Value="高輪">
                                                        <Setter TargetName="TextContainer" Property="HorizontalAlignment" Value="Left"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding DataContext.OptionalArea.Language, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ctrl:NextStationView}}}" Value="English">
                                                        <Setter TargetName="TextContainer" Property="HorizontalAlignment" Value="Left"/>
                                                        <Setter TargetName="TextContainer" Property="Height" Value="20"/>
                                                    </DataTrigger>
                                                    <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                                        <Setter TargetName="TextContainer" Property="HorizontalAlignment" Value="Right"/>
                                                        <Setter TargetName="TextContainer" Property="Width" Value="100"/>
                                                    </Trigger>
                                                </DataTemplate.Triggers>
                                            </DataTemplate>
                                        </ctrl:VerticalTextMultiLine.ItemTemplate>
                                    </ctrl:VerticalTextMultiLine>
                                    <Viewbox.LayoutTransform>
                                        <RotateTransform Angle="90"/>
                                    </Viewbox.LayoutTransform>
                                </Viewbox>
                            </ContentControl>
                            <Grid Name="StationInfo" Margin="0,2" Height="36">
                                <ContentControl Width="16" Height="18" Margin="0,2,0,0">
                                    <Polygon Fill="#FFFFFFFF" Points="0,0, 6,0, 16,9, 6,18, 0,18, 10,9"/>
                                </ContentControl>
                                <Border Name="ArrivalTimeContainer" Background="#FFFFFFFF" Height="22" Width="24">
                                    <Viewbox Stretch="Fill" StretchDirection="DownOnly">
                                        <TextBlock Name="ArrivalTime" FontFamily="Microsoft Sans Serif" FontSize="18" Foreground="{StaticResource ActiveText}" Text="{Binding ArrivalTime}" TextAlignment="Center"/>
                                    </Viewbox>
                                </Border>
                                <Control Name="Marker" Width="22">
                                    <Control.RenderTransform>
                                        <TranslateTransform X="-3"/>
                                    </Control.RenderTransform>
                                </Control>
                            </Grid>
                        </StackPanel>
                    </Grid>

                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding DataContext.TrainInfo.Direction, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Opposite">
                            <Setter TargetName="BeforeStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="20,0">
                                            <LineSegment Point="39,0" IsStroked="True"/>
                                            <LineSegment Point="39,36" IsStroked="True"/>
                                            <LineSegment Point="20,36" IsStroked="True"/>
                                            <LineSegment Point="20,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="AfterStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="0,0">
                                            <LineSegment Point="20.5,0" IsStroked="True"/>
                                            <LineSegment Point="20.5,36" IsStroked="True"/>
                                            <LineSegment Point="0,36" IsStroked="True"/>
                                            <LineSegment Point="0,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsLineStart}" Value="True"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.Direction, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Forward"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Container" Property="HorizontalAlignment" Value="Right"/>
                            <Setter TargetName="LineColor" Property="Width" Value="66"/>
                            <Setter TargetName="BeforeStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="3,0">
                                            <LineSegment Point="47.5,0" IsStroked="True"/>
                                            <LineSegment Point="47.5,36" IsStroked="True"/>
                                            <LineSegment Point="3,36" IsStroked="True"/>
                                            <ArcSegment IsLargeArc="False" Point="0,33" RotationAngle="0" Size="3,3" SweepDirection="Clockwise"/>
                                            <LineSegment Point="0,3" IsStroked="True"/>
                                            <ArcSegment IsLargeArc="False" Point="3,0" RotationAngle="0" Size="3,3" SweepDirection="Clockwise"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="AfterStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="47,0">
                                            <LineSegment Point="66,0" IsStroked="True"/>
                                            <LineSegment Point="66,36" IsStroked="True"/>
                                            <LineSegment Point="47,36" IsStroked="True"/>
                                            <LineSegment Point="47,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Option" Property="Canvas.Bottom" Value="6"/>
                            <Setter TargetName="Option" Property="Canvas.Left" Value="2"/>
                            <Setter TargetName="Option" Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Control">
                                        <Viewbox HorizontalAlignment="Center" VerticalAlignment="Bottom" Width="32" Stretch="Fill" StretchDirection="DownOnly">
                                            <TextBlock Name="Min" FontSize="10" Foreground="#FFFFFFFF" Text="(分)"/>
                                        </Viewbox>
                                        <ControlTemplate.Triggers>
                                            <DataTrigger Binding="{Binding DataContext.OptionalArea.Language, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="English">
                                                <Setter TargetName="Min" Property="Text" Value="(min)"/>
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsLineStart}" Value="True"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.Direction, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Opposite"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Container" Property="HorizontalAlignment" Value="Right"/>
                            <Setter TargetName="LineColor" Property="Width" Value="66"/>
                            <Setter TargetName="AfterStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="3,0">
                                            <LineSegment Point="47.5,0" IsStroked="True"/>
                                            <LineSegment Point="47.5,36" IsStroked="True"/>
                                            <LineSegment Point="3,36" IsStroked="True"/>
                                            <ArcSegment IsLargeArc="False" Point="0,33" RotationAngle="0" Size="3,3" SweepDirection="Clockwise"/>
                                            <LineSegment Point="0,3" IsStroked="True"/>
                                            <ArcSegment IsLargeArc="False" Point="3,0" RotationAngle="0" Size="3,3" SweepDirection="Clockwise"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="BeforeStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="47,0">
                                            <LineSegment Point="66,0" IsStroked="True"/>
                                            <LineSegment Point="66,36" IsStroked="True"/>
                                            <LineSegment Point="47,36" IsStroked="True"/>
                                            <LineSegment Point="47,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Option" Property="Canvas.Bottom" Value="6"/>
                            <Setter TargetName="Option" Property="Canvas.Left" Value="2"/>
                            <Setter TargetName="Option" Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Control">
                                        <Viewbox HorizontalAlignment="Center" VerticalAlignment="Bottom" Width="32" Stretch="Fill" StretchDirection="DownOnly">
                                            <TextBlock Name="Min" FontSize="10" Foreground="#FFFFFFFF" Text="(分)"/>
                                        </Viewbox>
                                        <ControlTemplate.Triggers>
                                            <DataTrigger Binding="{Binding DataContext.OptionalArea.Language, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="English">
                                                <Setter TargetName="Min" Property="Text" Value="(min)"/>
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsLineEnd}" Value="True"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.Direction, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Forward"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Container" Property="HorizontalAlignment" Value="Left"/>
                            <Setter TargetName="LineColor" Property="Width" Value="66"/>
                            <Setter TargetName="AfterStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="20,0">
                                            <LineSegment Point="63,0" IsStroked="True"/>
                                            <ArcSegment IsLargeArc="False" Point="66,3" RotationAngle="0" Size="3,3" SweepDirection="Clockwise"/>
                                            <LineSegment Point="66,33" IsStroked="True"/>
                                            <ArcSegment IsLargeArc="False" Point="63,36" RotationAngle="0" Size="3,3" SweepDirection="Clockwise"/>
                                            <LineSegment Point="20,36" IsStroked="True"/>
                                            <LineSegment Point="20,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Option" Property="Canvas.Bottom" Value="6"/>
                            <Setter TargetName="Option" Property="Canvas.Right" Value="2"/>
                            <Setter TargetName="Option" Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Control">
                                        <Viewbox HorizontalAlignment="Center" VerticalAlignment="Bottom" Width="32" Stretch="Fill" StretchDirection="DownOnly">
                                            <TextBlock Name="Min" FontSize="10" Foreground="#FFFFFFFF" Text="(分)"/>
                                        </Viewbox>
                                        <ControlTemplate.Triggers>
                                            <DataTrigger Binding="{Binding DataContext.OptionalArea.Language, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="English">
                                                <Setter TargetName="Min" Property="Text" Value="(min)"/>
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsLineEnd}" Value="True"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.Direction, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Opposite"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Container" Property="HorizontalAlignment" Value="Left"/>
                            <Setter TargetName="LineColor" Property="Width" Value="66"/>
                            <Setter TargetName="BeforeStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="20,0">
                                            <LineSegment Point="63,0" IsStroked="True"/>
                                            <ArcSegment IsLargeArc="False" Point="66,3" RotationAngle="0" Size="3,3" SweepDirection="Clockwise"/>
                                            <LineSegment Point="66,33" IsStroked="True"/>
                                            <ArcSegment IsLargeArc="False" Point="63,36" RotationAngle="0" Size="3,3" SweepDirection="Clockwise"/>
                                            <LineSegment Point="20,36" IsStroked="True"/>
                                            <LineSegment Point="20,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Option" Property="Canvas.Bottom" Value="6"/>
                            <Setter TargetName="Option" Property="Canvas.Right" Value="2"/>
                            <Setter TargetName="Option" Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Control">
                                        <Viewbox HorizontalAlignment="Center" VerticalAlignment="Bottom" Width="32" Stretch="Fill" StretchDirection="DownOnly">
                                            <TextBlock Name="Min" FontSize="10" Foreground="#FFFFFFFF" Text="(分)"/>
                                        </Viewbox>
                                        <ControlTemplate.Triggers>
                                            <DataTrigger Binding="{Binding DataContext.OptionalArea.Language, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="English">
                                                <Setter TargetName="Min" Property="Text" Value="(min)"/>
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsRouteMapBlockEnd}" Value="True"/>
                                <Condition Binding="{Binding IsLineEnd}" Value="False"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.Direction, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Forward"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Container" Property="HorizontalAlignment" Value="Left"/>
                            <Setter TargetName="LineColor" Property="Width" Value="66"/>
                            <Setter TargetName="AfterStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="20,0">
                                            <LineSegment Point="36,0" IsStroked="True"/>
                                            <LineSegment Point="46,18" IsStroked="True"/>
                                            <LineSegment Point="36,36" IsStroked="True"/>
                                            <LineSegment Point="20,36" IsStroked="True"/>
                                            <LineSegment Point="20,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Option" Property="Margin" Value="40,0,0,0"/>
                            <Setter TargetName="Option" Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Control">
                                        <Canvas>
                                            <Polygon Fill="{Binding ElementName=AfterStation, Path=Fill}" Points="0,0, 5,0, 15,18, 5,36, 0,36, 10,18"/>
                                            <Polygon Fill="{Binding ElementName=AfterStation, Path=Fill}" Points="9,0, 14,0, 24,18, 14,36, 9,36, 19,18"/>
                                        </Canvas>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsRouteMapBlockEnd}" Value="True"/>
                                <Condition Binding="{Binding IsLineEnd}" Value="False"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.Direction, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Opposite"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Container" Property="HorizontalAlignment" Value="Left"/>
                            <Setter TargetName="LineColor" Property="Width" Value="66"/>
                            <Setter TargetName="BeforeStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="20,0">
                                            <LineSegment Point="44,0" IsStroked="True"/>
                                            <LineSegment Point="34,18" IsStroked="True"/>
                                            <LineSegment Point="44,36" IsStroked="True"/>
                                            <LineSegment Point="20,36" IsStroked="True"/>
                                            <LineSegment Point="20,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Option" Property="Margin" Value="38,0,0,0"/>
                            <Setter TargetName="Option" Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Control">
                                        <Canvas>
                                            <Polygon Fill="{Binding ElementName=BeforeStation, Path=Fill}" Points="15,0, 10,0, 0,18, 10,36, 15,36, 5,18"/>
                                            <Polygon Fill="{Binding ElementName=BeforeStation, Path=Fill}" Points="24,0, 19,0, 9,18, 19,36, 24,36, 14,18"/>
                                        </Canvas>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsRouteMapBlockStart}" Value="True"/>
                                <Condition Binding="{Binding IsLineStart}" Value="False"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.Direction, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Forward"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Container" Property="HorizontalAlignment" Value="Right"/>
                            <Setter TargetName="LineColor" Property="Width" Value="66"/>
                            <Setter TargetName="BeforeStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="22,0">
                                            <LineSegment Point="47.5,0" IsStroked="True"/>
                                            <LineSegment Point="47.5,36" IsStroked="True"/>
                                            <LineSegment Point="22,36" IsStroked="True"/>
                                            <LineSegment Point="32,18" IsStroked="True"/>
                                            <LineSegment Point="22,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="AfterStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="47,0">
                                            <LineSegment Point="66,0" IsStroked="True"/>
                                            <LineSegment Point="66,36" IsStroked="True"/>
                                            <LineSegment Point="47,36" IsStroked="True"/>
                                            <LineSegment Point="47,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Option" Property="Margin" Value="4,0,0,0"/>
                            <Setter TargetName="Option" Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Control">
                                        <Canvas>
                                            <Polygon Fill="{Binding ElementName=BeforeStation, Path=Fill}" Points="0,0, 5,0, 15,18, 5,36, 0,36, 10,18"/>
                                            <Polygon Fill="{Binding ElementName=BeforeStation, Path=Fill}" Points="9,0, 14,0, 24,18, 14,36, 9,36, 19,18"/>
                                        </Canvas>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsRouteMapBlockStart}" Value="True"/>
                                <Condition Binding="{Binding IsLineStart}" Value="False"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.Direction, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Opposite"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Container" Property="HorizontalAlignment" Value="Right"/>
                            <Setter TargetName="LineColor" Property="Width" Value="66"/>
                            <Setter TargetName="AfterStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="47.5,0">
                                            <LineSegment Point="30,0" IsStroked="True"/>
                                            <LineSegment Point="20,18" IsStroked="True"/>
                                            <LineSegment Point="30,36" IsStroked="True"/>
                                            <LineSegment Point="47.5,36" IsStroked="True"/>
                                            <LineSegment Point="47.5,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="BeforeStation" Property="Data">
                                <Setter.Value>
                                    <PathGeometry>
                                        <PathFigure StartPoint="47,0">
                                            <LineSegment Point="66,0" IsStroked="True"/>
                                            <LineSegment Point="66,36" IsStroked="True"/>
                                            <LineSegment Point="47,36" IsStroked="True"/>
                                            <LineSegment Point="47,0" IsStroked="True"/>
                                        </PathFigure>
                                    </PathGeometry>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Option" Property="Margin" Value="2,0,0,0"/>
                            <Setter TargetName="Option" Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Control">
                                        <Canvas>
                                            <Polygon Fill="{Binding ElementName=AfterStation, Path=Fill}" Points="15,0, 10,0, 0,18, 10,36, 15,36, 5,18"/>
                                            <Polygon Fill="{Binding ElementName=AfterStation, Path=Fill}" Points="24,0, 19,0, 9,18, 19,36, 24,36, 14,18"/>
                                        </Canvas>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsCurrent}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Marker" Property="Template" Value="{StaticResource Marker}"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsCurrent}" Value="True"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.TrainState, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Running"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Marker" Property="Width" Value="18"/>
                            <Setter TargetName="Marker" Property="RenderTransform" Value="{StaticResource MarkerOffset}"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsCurrent}" Value="True"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.TrainState, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Arriving"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Marker" Property="Width" Value="18"/>
                            <Setter TargetName="Marker" Property="RenderTransform" Value="{StaticResource MarkerOffset}"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsCurrent}" Value="True"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.TrainState, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Stopping"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ArrivalTimeContainer" Property="Visibility" Value="Collapsed"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsCurrent}" Value="True"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.TrainState, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Departing"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ArrivalTimeContainer" Property="Visibility" Value="Collapsed"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsCurrent}" Value="True"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.TrainState, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Stopping"/>
                                <Condition Binding="{Binding IsLineStart}" Value="False"/>
                                <Condition Binding="{Binding IsLineEnd}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="BeforeStation" Property="Fill" Value="{StaticResource DefaultLineColor}"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsCurrent}" Value="True"/>
                                <Condition Binding="{Binding DataContext.TrainInfo.TrainState, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Departing"/>
                                <Condition Binding="{Binding IsLineStart}" Value="False"/>
                                <Condition Binding="{Binding IsLineEnd}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="BeforeStation" Property="Fill" Value="{StaticResource DefaultLineColor}"/>
                        </MultiDataTrigger>

                        <DataTrigger Binding="{Binding StationState}" Value="Stop">
                            <Setter TargetName="StationName" Property="Foreground" Value="{StaticResource ActiveText}"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding StationState}" Value="Pass">
                            <Setter TargetName="ArrivalTimeContainer" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding StationState}" Value="Default">
                            <Setter TargetName="BeforeStation" Property="Fill" Value="{StaticResource DefaultLineColor}"/>
                            <Setter TargetName="AfterStation" Property="Fill" Value="{StaticResource DefaultLineColor}"/>
                            <Setter TargetName="StationInfo" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding DataContext.OptionalArea.Language, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="English">
                            <Setter TargetName="StationName" Property="ItemsSource" Value="{Binding StationName.English, Converter={StaticResource SplitWithLinefeed}}"/>
                            <Setter TargetName="StationName" Property="IsVertical" Value="False"/>
                            <Setter TargetName="StationName" Property="FontFamily" Value="Microsoft Sans Serif"/>
                            <Setter TargetName="StationName" Property="FontSize" Value="18"/>
                            <Setter TargetName="StationName" Property="HorizontalAlignment" Value="Left"/>
                            <Setter TargetName="StationNameViewBox" Property="Width" Value="130"/>
                            <Setter TargetName="StationNameViewBox" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="270"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="StationNameArea" Property="RenderTransformOrigin" Value="0,0.5"/>
                            <Setter TargetName="StationNameArea" Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform Angle="30"/>
                                        <TranslateTransform X="22" Y="-6"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding DataContext.Side, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Right">
                            <Setter TargetName="StationInfo" Property="FlowDirection" Value="RightToLeft"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="DetailedRouteMap" TargetType="Control">
        <Grid>
            <ItemsControl ItemsSource="{Binding DetailedRouteMap}" Style="{StaticResource DetailedRouteMapList}"/>
            <TextBlock Name="Caption" Margin="16,0" FontFamily="Meiryo" FontSize="14" VerticalAlignment="Bottom" TextAlignment="Right" Text="のりかえ、待合わせ時間は含まれません。電車により多少時間が異なります。"/>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding OptionalArea.Language}" Value="English">
                <Setter TargetName="Caption" Property="Visibility" Value="Hidden"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="RouteMap" TargetType="Control">
        <Grid>
            <ItemsControl Margin="8,0,8,20" ItemsSource="{Binding RouteMaps, Converter={StaticResource RouteMapSelector}}" AlternationCount="2">
                <ItemsControl.Template>
                    <ControlTemplate>
                        <StackPanel IsItemsHost="True" Orientation="Vertical"/>
                    </ControlTemplate>
                </ItemsControl.Template>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <DataTemplate.Resources>
                            <Style x:Key="First" TargetType="ContentPresenter">
                                <Setter Property="Margin" Value="-0.2,0,-0.2,20"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding DataContext.TrainInfo.Direction, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Opposite">
                                        <Setter Property="Panel.ZIndex" Value="{Binding StationId, Converter={StaticResource ReverseSignConverter}}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                            <Style x:Key="Second" TargetType="ContentPresenter">
                                <Setter Property="Margin" Value="-1,0,-1,20"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding DataContext.TrainInfo.Direction, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}, AncestorLevel=2}}" Value="Opposite">
                                        <Setter Property="Panel.ZIndex" Value="{Binding StationId, Converter={StaticResource ReverseSignConverter}}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataTemplate.Resources>
                        <ItemsControl Name="ItemsControl" ItemsSource="{Binding Stations}" Style="{StaticResource RouteMapList}" ItemContainerStyle="{StaticResource First}"/>
                        <DataTemplate.Triggers>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                <Setter TargetName="ItemsControl" Property="ItemContainerStyle" Value="{StaticResource Second}"/>
                            </Trigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <TextBlock Name="Caption" Margin="16,0" FontFamily="Meiryo" FontSize="14" VerticalAlignment="Bottom" TextAlignment="Right" Text="のりかえ、待合わせ時間は含まれません。電車により多少時間が異なります。"/>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding OptionalArea.Language}" Value="English">
                <Setter TargetName="Caption" Property="Visibility" Value="Hidden"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="DoorsOnThisSide" TargetType="Control">
        <StackPanel>
            <TextBlock Margin="0,5,0,0" Foreground="#FFFF0000" FontSize="34" FontWeight="Bold" Text="こちら側のドアが開きます" TextAlignment="Center"></TextBlock>
            <StackPanel Height="260" Orientation="Horizontal">
                <Grid Width="120">
                    <Polygon Name="LeftArrow" Fill="#FFFF0000" Points="100,105,80,105,80,90,40,130,80,170,80,155,100,155"/>
                </Grid>
                <Border Width="720" Background="#FF9FB0C0" CornerRadius="10">
                    <Grid>
                        <Line Stroke="#FFFFFFFF" StrokeThickness="8" X1="70" X2="650" Y1="28" Y2="28" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                        <Line Stroke="#FFFFFFFF" StrokeThickness="8" X1="70" X2="650" Y1="232" Y2="232" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                        <Rectangle Fill="#FFFFFFFF"  Width="250" Height="200"></Rectangle>
                        <Grid Name="DoorContainer" Width="250" Height="225" MaxWidth="480" MinWidth="250">
                            <Border Width="126" Height="225" Background="#FFE6EBF0" BorderBrush="Black" BorderThickness="6" CornerRadius="5" HorizontalAlignment="Left">
                                <Border Width="80" Height="120" Background="#FFF4F6F6" BorderBrush="Black" BorderThickness="6" CornerRadius="5" Margin="0,10" VerticalAlignment="Top"/>
                            </Border>
                            <Border Width="126" Height="225" Background="#FFE6EBF0" BorderBrush="Black" BorderThickness="6" CornerRadius="5" HorizontalAlignment="Right">
                                <Border Width="80" Height="120" Background="#FFF4F6F6" BorderBrush="Black" BorderThickness="6" CornerRadius="5" Margin="0,10" VerticalAlignment="Top"/>
                            </Border>
                        </Grid>
                    </Grid>
                </Border>
                <Grid Width="120">
                    <Polygon Name="RightArrow" Fill="#FFFF0000" Points="20,105,40,105,40,90,80,130,40,170,40,155,20,155"/>
                </Grid>
                <StackPanel.Triggers>
                    <EventTrigger RoutedEvent="StackPanel.Loaded">
                        <BeginStoryboard Name="BlinkBegin">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames
                                    Storyboard.TargetName="DoorContainer"
                                    Storyboard.TargetProperty="Width"
                                    Duration="0:0:6"
                                    RepeatBehavior="Forever">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:1.5" Value="320" />
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:3" Value="400" />
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:4" Value="480" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames
                                    Storyboard.TargetName="LeftArrow"
                                    Storyboard.TargetProperty="Opacity"
                                    Duration="0:0:6"
                                    RepeatBehavior="Forever">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:4" Value="0.0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames
                                    Storyboard.TargetName="RightArrow"
                                    Storyboard.TargetProperty="Opacity"
                                    Duration="0:0:6"
                                    RepeatBehavior="Forever">
                                    <DiscreteDoubleKeyFrame KeyTime="0:0:4" Value="0.0" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </StackPanel.Triggers>
            </StackPanel>
            <TextBlock Margin="0,5,0,0" Foreground="#FFFF0000" FontSize="36" FontFamily="Microsoft Sans Serif" FontWeight="Bold" Text="Doors on this side will open." TextAlignment="Center"></TextBlock>
        </StackPanel>
    </ControlTemplate>

    <ControlTemplate x:Key="DoorsOnOppositeSide" TargetType="Control">
        <Grid Background="{TemplateBinding Background}">
            <StackPanel Margin="0,50" Height="260" Orientation="Horizontal">
                <Grid Width="120">
                </Grid>
                <Border Width="720" Background="#FF9FB0C0" CornerRadius="10">
                    <Grid>
                        <Line Stroke="#FFFFFFFF" StrokeThickness="8" X1="70" X2="650" Y1="28" Y2="28" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                        <Line Stroke="#FFFFFFFF" StrokeThickness="8" X1="70" X2="650" Y1="232" Y2="232" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                        <Rectangle Fill="#FFFFFFFF"  Width="250" Height="200"></Rectangle>
                        <Grid Name="DoorContainer" Width="250" Height="225" MaxWidth="480" MinWidth="250">
                            <Border Width="126" Height="225" Background="#FFE6EBF0" BorderBrush="Black" BorderThickness="6" CornerRadius="5" HorizontalAlignment="Left">
                                <Border Width="80" Height="120" Background="#FFF4F6F6" BorderBrush="Black" BorderThickness="6" CornerRadius="5" Margin="0,10" VerticalAlignment="Top"/>
                            </Border>
                            <Border Width="126" Height="225" Background="#FFE6EBF0" BorderBrush="Black" BorderThickness="6" CornerRadius="5" HorizontalAlignment="Right">
                                <Border Width="80" Height="120" Background="#FFF4F6F6" BorderBrush="Black" BorderThickness="6" CornerRadius="5" Margin="0,10" VerticalAlignment="Top"/>
                            </Border>
                        </Grid>
                    </Grid>
                </Border>
                <Grid Width="120">
                </Grid>
            </StackPanel>
            <ctrl:OutlineTextControl Margin="0,160,0,0" Fill="#FFFF0000" Stroke="#FFFFFFFF" StrokeThickness="5" FontFamily="Meiryo" FontSize="34" FontWeight="Bold" Text="反対側のドアが開きます" TextAlignment="Center"></ctrl:OutlineTextControl>
            <TextBlock Margin="0,320,0,0" Foreground="#FFFF0000" FontSize="36" FontFamily="Microsoft Sans Serif" FontWeight="Bold" Text="Doors on opposite side will open." TextAlignment="Center"></TextBlock>
        </Grid>
    </ControlTemplate>
    
    <ControlTemplate x:Key="NextStopInfo" TargetType="Control">
        <Border Name="NextStop" Height="30" Background="#FFD3D8DE" Visibility="Hidden">
            <Border Width="320" Height="24" Background="#FFFFFFFF" HorizontalAlignment="Center" VerticalAlignment="Center">
                <TextBlock Name="NextStopInfo" Margin="0,-1" FontFamily="Meiryo" FontWeight="Bold" FontSize="20" HorizontalAlignment="Center">
                    <Run Name="Inline1" Text="{Binding StationInfo.Name.Kanji}"/><Run Name="Inline2" Text=" の次は "/><Run Name="Inline3" Text="{Binding StationInfo.NextStop.Kanji}" Foreground="#FF009000"/><Run Name="Inline4" Text=" にとまります"/>
                </TextBlock>
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding StationInfo.StationStateOfNext}" Value="Pass">
                <Setter TargetName="NextStop" Property="Visibility" Value="Visible"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding StationInfo.IsRapidSectionEnd}" Value="True">
                <Setter TargetName="NextStop" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Inline2" Property="Text" Value=" から先は各駅にとまります"/>
                <Setter TargetName="Inline3" Property="Text" Value=""/>
                <Setter TargetName="Inline4" Property="Text" Value=""/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="Transfers" TargetType="Control">
        <ControlTemplate.Resources>
            <cvt:TransferDisplaySelector x:Key="TransferDisplaySelector" TargetMode="Transfers" TargetLanguage="Kanji"/>

            <Style x:Key="TransferLineGroup" TargetType="ItemsControl">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ItemsControl">
                            <ctrl:TransferDisplayGrid x:Name="ItemsHost" IsItemsHost="True" Rows="{Binding Rows}" Columns="{Binding Columns}" DistributesBlankSpace="True"/>
                            <ControlTemplate.Triggers>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="ContentPresenter">
                            <Setter Property="Grid.Row"  Value="{Binding Row}"/>
                            <Setter Property="Grid.RowSpan" Value="{Binding RowSpan}"/>
                            <Setter Property="Grid.Column" Value="{Binding Column}"/>
                            <Setter Property="Grid.ColumnSpan" Value="{Binding ColumnSpan}"/>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <StackPanel Name="Container" Margin="2,0,30,8" DataContext="{Binding LineInfo}" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                                <ItemsControl ItemsSource="{Binding Icons}" HorizontalAlignment="Left" VerticalAlignment="Top">
                                    <ItemsControl.Template>
                                        <ControlTemplate TargetType="ItemsControl">
                                            <StackPanel IsItemsHost="True" Orientation="Horizontal"/>
                                        </ControlTemplate>
                                    </ItemsControl.Template>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <ctrl:LineIcon x:Name="LineIcon" Style="{StaticResource LineIcon}" Margin="0,0,3,0" Width="58" Height="58" IconType="{Binding IconType}" PrimaryLineColor="{Binding LineColor}" SecondaryLineColor="{Binding LineColor2}" LineLetter="{Binding LineLetter}" LineLetterColor="{StaticResource ActiveText}"/>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                                <StackPanel Margin="7,0,0,0">
                                    <TextBlock Name="Japanese" FontFamily="Microsoft Sans Serif" FontSize="36" FontWeight="Bold" Foreground="#FF000000" Text="{Binding Kanji, Converter={StaticResource RemoveLinefeed}, ConverterParameter=0}" TextAlignment="Left" LineStackingStrategy="BlockLineHeight" LineHeight="38"/>
                                    <TextBlock Name="English" FontFamily="Microsoft Sans Serif" FontSize="22" FontWeight="Bold" Foreground="#FF000000" Text="{Binding English, Converter={StaticResource RemoveLinefeed}, ConverterParameter=0}" TextAlignment="Left" LineStackingStrategy="BlockLineHeight" LineHeight="22"/>
                                </StackPanel>
                            </StackPanel>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding DataContext.Rows, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TransferDisplayGrid}}}" Value="2">
                                    <Setter TargetName="Container" Property="Margin" Value="2,0,30,50"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding DataContext.Rows, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TransferDisplayGrid}}}" Value="3">
                                    <Setter TargetName="Container" Property="Margin" Value="2,0,30,20"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="TransferGroup" TargetType="ItemsControl">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ItemsControl">
                            <StackPanel Name="ItemsHost" IsItemsHost="True" Orientation="{Binding Orientation}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <ItemsControl Name="Child" ItemsSource="{Binding Groups}" Style="{DynamicResource TransferGroup2}"/>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Groups.Count}" Value="0">
                                    <Setter TargetName="Child" Property="ItemsSource" Value="{Binding Lines}"/>
                                    <Setter TargetName="Child" Property="Style" Value="{StaticResource TransferLineGroup}"/>
                                    <Setter TargetName="Child" Property="HorizontalAlignment" Value="Center"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="TransferGroup2" TargetType="ItemsControl">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ItemsControl">
                            <StackPanel Name="ItemsHost" IsItemsHost="True" Orientation="{Binding Orientation}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="ItemTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <ItemsControl Name="Child" ItemsSource="{Binding Groups}" Style="{DynamicResource TransferGroup}"/>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding Groups.Count}" Value="0">
                                    <Setter TargetName="Child" Property="ItemsSource" Value="{Binding Lines}"/>
                                    <Setter TargetName="Child" Property="Style" Value="{StaticResource TransferLineGroup}"/>
                                    <Setter TargetName="Child" Property="HorizontalAlignment" Value="Center"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="TransferItemsHost" TargetType="Control">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <ItemsControl Name="TransferItemsHost" ItemsSource="{Binding Groups}" Style="{StaticResource TransferGroup}"/>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Groups.Count}" Value="0">
                                    <Setter TargetName="TransferItemsHost" Property="ItemsSource" Value="{Binding Lines}"/>
                                    <Setter TargetName="TransferItemsHost" Property="Style" Value="{StaticResource TransferLineGroup}"/>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ControlTemplate.Resources>
        <StackPanel>
            <Control Template="{StaticResource NextStopInfo}"/>
            <Grid Margin="0,8,0,10" HorizontalAlignment="Center" VerticalAlignment="Top">
                <Canvas Width="300" Height="32" HorizontalAlignment="Center">
                    <Path>
                        <Path.Fill>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,0.5" SpreadMethod="Reflect">
                                <GradientStop Color="#FF6F70FF" Offset="0"/>
                                <GradientStop Color="#806F70FF" Offset="0.5"/>
                                <GradientStop Color="#2F6F70FF" Offset="1"/>
                            </LinearGradientBrush>
                        </Path.Fill>
                        <Path.Data>
                            <PathGeometry>
                                <PathFigure StartPoint="16,0">
                                    <LineSegment Point="284,0" IsStroked="False"/>
                                    <ArcSegment IsLargeArc="False" Point="284,32" RotationAngle="0" Size="16,16" SweepDirection="Clockwise"/>
                                    <LineSegment Point="16,32" IsStroked="False"/>
                                    <ArcSegment IsLargeArc="False" Point="16,0" RotationAngle="0" Size="16,16" SweepDirection="Clockwise"/>
                                </PathFigure>
                            </PathGeometry>
                        </Path.Data>
                    </Path>
                </Canvas>
                <TextBlock Height="32" FontFamily="Meiryo" FontSize="22" FontWeight="Bold" Text="のりかえ ／ Transfer" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Grid>
            <ContentControl MaxWidth="940" Height="270" HorizontalAlignment="Center" VerticalAlignment="Top">
                <Viewbox Stretch="Uniform" StretchDirection="DownOnly" DataContext="{Binding StationInfo.Transfer, Converter={StaticResource TransferDisplaySelector}}" VerticalAlignment="Center">
                    <Control Style="{StaticResource TransferItemsHost}"/>
                </Viewbox>
            </ContentControl>
        </StackPanel>
    </ControlTemplate>

    <ControlTemplate x:Key="Rail" TargetType="Control">
        <Grid>
            <Grid.Background>
                <VisualBrush Stretch="None" TileMode="Tile" Viewport="0,0,14,34" ViewportUnits="Absolute" >
                    <VisualBrush.Visual>
                        <Grid Width="14" Height="34">
                            <Line Stroke="#FF473A34" StrokeThickness="6" X1="7" X2="7" Y1="0" Y2="34"/>
                            <Line Stroke="#FFFFFFFF" StrokeThickness="2" X1="0" X2="14" Y1="7" Y2="7"/>
                            <Line Stroke="#FF473A34" StrokeThickness="1" X1="0" X2="14" Y1="8" Y2="8"/>
                            <Line Stroke="#FFFFFFFF" StrokeThickness="2" X1="0" X2="14" Y1="27" Y2="27"/>
                            <Line Stroke="#FF473A34" StrokeThickness="1" X1="0" X2="14" Y1="28" Y2="28"/>
                        </Grid>
                    </VisualBrush.Visual>
                </VisualBrush>
            </Grid.Background>
        </Grid>
    </ControlTemplate>

    <Style x:Key="Train" TargetType="ItemsControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ItemsControl">
                    <StackPanel Name="Container" Orientation="Horizontal" HorizontalAlignment="Right" FlowDirection="RightToLeft">
                        <Control Name="Offset" Width="{Binding StationInfo.StopPosOffset, Converter={StaticResource TrainOffsetConverter}}"/>
                        <Grid Name="Spacer"/>
                        <Grid>
                            <StackPanel Name="Train" IsItemsHost="True" Orientation="Horizontal" FlowDirection="RightToLeft"/>

                            <Grid Name="Arrow" Width="40" Margin="-40,1,0,0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                <Polygon Fill="#FFFF0000" Stroke="#FFFFFFFF" StrokeThickness="2" Points="24,8, 16,8, 16,0, 0,16, 16,32, 16,24, 24,24"/>
                            </Grid>
                        </Grid>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Side}" Value="Right">
                            <Setter TargetName="Container" Property="FlowDirection" Value="LeftToRight"/>
                            <Setter TargetName="Container" Property="HorizontalAlignment" Value="Left"/>
                            <Setter TargetName="Train" Property="FlowDirection" Value="LeftToRight"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ThisSideWillOpen}" Value="False">
                            <Setter TargetName="Arrow" Property="VerticalAlignment" Value="Bottom"/>
                            <Setter TargetName="Arrow" Property="Margin" Value="-40,0,0,-2"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Width="75" Height="52" Margin="0,0,2,0" FlowDirection="LeftToRight">
                        <Grid Name="Car" Height="32" VerticalAlignment="Top">
                            <Canvas>
                                <Polygon Name="Front" Fill="#FF448938" Stroke="#FF000000" StrokeThickness="1" StrokeLineJoin="Round" Points="0,3,5,0,5,26,0,32"/>
                                <Polygon Name="Top" Fill="#FF64C84B" Stroke="#FF000000" StrokeThickness="1" StrokeLineJoin="Round" Points="5,0,75,0,75,26,5,26"/>
                                <Polygon Name="Side" Fill="#FF448938" Stroke="#FF000000" StrokeThickness="1" StrokeLineJoin="Round" Points="5,26,75,26,70,32,0,32"/>

                                <Polygon Fill="#50FFFFFF" StrokeLineJoin="Round" Points="10,27,16,27,12,31,6,31"/>
                                <Polygon Fill="#50FFFFFF" StrokeLineJoin="Round" Points="19,27,25,27,21,31,15,31"/>
                                <Polygon Fill="#50FFFFFF" StrokeLineJoin="Round" Points="28,27,34,27,30,31,24,31"/>
                                <Polygon Fill="#50FFFFFF" StrokeLineJoin="Round" Points="37,27,43,27,39,31,33,31"/>
                                <Polygon Fill="#50FFFFFF" StrokeLineJoin="Round" Points="46,27,52,27,48,31,42,31"/>
                                <Polygon Fill="#50FFFFFF" StrokeLineJoin="Round" Points="55,27,61,27,57,31,51,31"/>
                                <Polygon Fill="#50FFFFFF" StrokeLineJoin="Round" Points="64,27,70,27,66,31,60,31"/>
                            </Canvas>
                            <ContentControl Margin="6,1,0,0">
                                <TextBlock FontFamily="Microsoft Sans Serif" FontWeight="Bold" FontSize="22" Text="{Binding CarNumber}" TextAlignment="Center" VerticalAlignment="Top"/>
                            </ContentControl>
                        </Grid>
                        <TextBlock Name="Current" Margin="0,5,0,-2" FontFamily="Meiryo" FontWeight="Bold" FontSize="16" LineStackingStrategy="BlockLineHeight" LineHeight="16" VerticalAlignment="Bottom" TextAlignment="Center"/>
                    </Grid>
                    <DataTemplate.Triggers>
                        <DataTrigger Value="True">
                            <DataTrigger.Binding>
                                <MultiBinding Converter="{StaticResource EquivalenceConverter}">
                                    <Binding Path="CarNumber"/>
                                    <Binding Path="DataContext.CarNumber" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}"/>
                                </MultiBinding>
                            </DataTrigger.Binding>
                            <Setter TargetName="Front" Property="Fill" Value="#FF9F2E26"/>
                            <Setter TargetName="Side" Property="Fill" Value="#FF9F2E26"/>
                            <Setter TargetName="Top" Property="Fill" Value="#FFD66763"/>
                            <Setter TargetName="Current" Property="Text" Value="乗車位置"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding DataContext.ThisSideWillOpen, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False">
                            <Setter TargetName="Car" Property="VerticalAlignment" Value="Bottom"/>
                            <Setter TargetName="Current" Property="VerticalAlignment" Value="Top"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlatformObjects" TargetType="ItemsControl">
        <Style.Resources>
            <DataTemplate x:Key="Akihabara">
                <Control Name="Object" Style="{StaticResource ObjectIcon}" Width="32" Height="32" Margin="0,0,0,-1" HorizontalAlignment="Center"/>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding Pos}" Value="Border">
                        <Setter TargetName="Object" Property="HorizontalAlignment" Value="Right"/>
                        <Setter TargetName="Object" Property="RenderTransform">
                            <Setter.Value>
                                <TranslateTransform X="16"/>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Pos}" Value="Front">
                        <Setter TargetName="Object" Property="HorizontalAlignment" Value="Right"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Pos}" Value="Back">
                        <Setter TargetName="Object" Property="HorizontalAlignment" Value="Left"/>
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ItemsControl">
                    <StackPanel Name="Objects" IsItemsHost="True"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ContentPresenter">
                    <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                    <Style.Triggers>
                        <Trigger Property="FlowDirection" Value="RightToLeft">
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleY="-1"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Control Name="Object" Style="{StaticResource ObjectIcon}" Width="38" Height="40" Margin="0,0,0,-1" HorizontalAlignment="Center"/>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding Pos}" Value="Border">
                            <Setter TargetName="Object" Property="HorizontalAlignment" Value="Right"/>
                            <Setter TargetName="Object" Property="RenderTransform">
                                <Setter.Value>
                                    <TranslateTransform X="19"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Pos}" Value="Front">
                            <Setter TargetName="Object" Property="HorizontalAlignment" Value="Right"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Pos}" Value="Back">
                            <Setter TargetName="Object" Property="HorizontalAlignment" Value="Left"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Style.Triggers>
            <Trigger Property="FlowDirection" Value="RightToLeft">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleY="-1"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <DataTrigger Binding="{Binding DataContext.StationInfo.Platform.HasMultipleExitsBlock, RelativeSource={RelativeSource AncestorType={x:Type ctrl:NextStationView}}}" Value="True">
                <Setter Property="ItemTemplate" Value="{StaticResource Akihabara}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="PlatformUnitOnThisSide">
        <ItemsControl ItemsSource="{Binding ObjectGroups}">
            <ItemsControl.Template>
                <ControlTemplate TargetType="ItemsControl">
                    <Grid IsItemsHost="True"/>
                </ControlTemplate>
            </ItemsControl.Template>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <ItemsControl Name="Objects" ItemsSource="{Binding Objects}" Style="{StaticResource PlatformObjects}" VerticalAlignment="Center"/>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding TargetExit}" Value="0">
                            <Setter TargetName="Objects" Property="VerticalAlignment" Value="Top"/>
                            <Setter TargetName="Objects" Property="Margin" Value="0,2"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding TargetExit}" Value="1">
                            <Setter TargetName="Objects" Property="VerticalAlignment" Value="Bottom"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <DataTemplate x:Key="PlatformUnitOnOppositeSide">
        <ItemsControl ItemsSource="{Binding ObjectGroups}">
            <ItemsControl.Template>
                <ControlTemplate TargetType="ItemsControl">
                    <Grid IsItemsHost="True"/>
                </ControlTemplate>
            </ItemsControl.Template>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <ItemsControl Name="Objects" ItemsSource="{Binding Objects}" Style="{StaticResource PlatformObjects}" VerticalAlignment="Center"/>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding TargetExit}" Value="0">
                            <Setter TargetName="Objects" Property="VerticalAlignment" Value="Bottom"/>
                            <Setter TargetName="Objects" Property="Margin" Value="0,2"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding TargetExit}" Value="1">
                            <Setter TargetName="Objects" Property="VerticalAlignment" Value="Top"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <Style x:Key="PlatformUnits" TargetType="ItemsControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ItemsControl">
                    <StackPanel Name="Units" IsItemsHost="True" Orientation="Horizontal"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ContentPresenter">
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="Width" Value="77"/>
                    <Setter Property="Height" Value="84"/>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExitsOnThisSide" TargetType="ItemsControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ItemsControl">
                    <ContentControl Name="Container" VerticalAlignment="Top">
                        <StackPanel Name="Exits" IsItemsHost="True" RenderTransformOrigin="0.5,0.5"/>
                    </ContentControl>
                    <ControlTemplate.Triggers>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ContentPresenter">
                    <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding DataContext.StationInfo.Platform.HasMultipleExitsBlock, RelativeSource={RelativeSource AncestorType={x:Type ctrl:NextStationView}}}" Value="True">
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <DataTemplate.Resources>                        
                        <Control x:Key="Akihabara" Height="86">
                            <Control.Margin>
                                <MultiBinding Converter="{StaticResource ExitPositionConverterAtAkihabara}">
                                    <MultiBinding.Bindings>
                                        <Binding Path="StartPos"/>
                                        <Binding Path="EndPos"/>
                                    </MultiBinding.Bindings>
                                </MultiBinding>
                            </Control.Margin>
                            <Control.Template>
                                <ControlTemplate>
                                    <Grid Name="Exit" VerticalAlignment="Bottom" Margin="0,7" Height="16">
                                        <Border Background="#FF000000" Height="1.5" VerticalAlignment="Center"/>
                                        <Canvas Name="ExitName" Margin="0" Height="16" HorizontalAlignment="Right" FlowDirection="LeftToRight">
                                            <StackPanel Orientation="Horizontal" Height="16">
                                                <Border Background="#FF000000" Width="32" Height="1.5" VerticalAlignment="Center"/>
                                                <TextBlock Margin="2,0" Text="{Binding Kanji}" FontFamily="Microsoft Sans Serif" FontSize="16" FontWeight="Bold" TextAlignment="Center" LineStackingStrategy="BlockLineHeight" LineHeight="16" FlowDirection="LeftToRight"/>
                                            </StackPanel>
                                        </Canvas>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger SourceName="Exit" Property="FlowDirection" Value="RightToLeft">
                                            <Setter TargetName="ExitName" Property="HorizontalAlignment" Value="Left"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Control.Template>
                        </Control>
                    </DataTemplate.Resources>
                    <StackPanel Orientation="Horizontal">
                        <Control Width="{Binding Offset, Converter={StaticResource PlatformWidthConverter}}"/>
                        <ContentControl Name="ExitContainer" Width="{Binding Length, Converter={StaticResource PlatformWidthConverter}}">
                            <StackPanel Name="Exit">
                                <StackPanel.Margin>
                                    <MultiBinding Converter="{StaticResource ExitPositionConverter}">
                                        <MultiBinding.Bindings>
                                            <Binding Path="StartPos"/>
                                            <Binding Path="EndPos"/>
                                        </MultiBinding.Bindings>
                                    </MultiBinding>
                                </StackPanel.Margin>
                                <Canvas Margin="0,0,0,1" Width="{Binding ActualWidth, ElementName=Japanese}" Height="16" HorizontalAlignment="Center">
                                    <TextBlock Name="Japanese" Text="{Binding Kanji}" FontFamily="Microsoft Sans Serif" FontSize="16" FontWeight="Bold" TextAlignment="Center" LineStackingStrategy="BlockLineHeight" LineHeight="16" FlowDirection="LeftToRight"/>
                                </Canvas>
                                <Border Width="2" Height="2" Background="#FF000000" HorizontalAlignment="Center"/>
                                <Border Height="4" BorderBrush="#FF000000" BorderThickness="1.5,1.5,1.5,0"/>
                            </StackPanel>
                        </ContentControl>
                    </StackPanel>
                    <DataTemplate.Triggers>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                            <Setter TargetName="ExitContainer" Property="Content" Value="{StaticResource Akihabara}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding DataContext.StationInfo.Platform.HasMultipleExitsBlock, RelativeSource={RelativeSource AncestorType={x:Type ctrl:NextStationView}}}" Value="True">
                            <Setter TargetName="Exit" Property="Margin">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource ExitPositionConverterAtAkihabara}">
                                        <MultiBinding.Bindings>
                                            <Binding Path="StartPos"/>
                                            <Binding Path="EndPos"/>
                                        </MultiBinding.Bindings>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExitsOnOppositeSide" TargetType="ItemsControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ItemsControl">
                    <ContentControl Name="Container" VerticalAlignment="Top">
                        <StackPanel Name="Exits" IsItemsHost="True" RenderTransformOrigin="0.5,0.5"/>
                    </ContentControl>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding DataContext.StationInfo.Platform.HasMultipleExitsBlock, RelativeSource={RelativeSource AncestorType={x:Type ctrl:NextStationView}}}" Value="True">
                            <Setter TargetName="Container" Property="Margin" Value="0,-86,0,0"/>
                            <Setter TargetName="Exits" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleY="-1"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ContentPresenter">
                    <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding DataContext.StationInfo.Platform.HasMultipleExitsBlock, RelativeSource={RelativeSource AncestorType={x:Type ctrl:NextStationView}}}" Value="True">
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleY="-1"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <DataTemplate.Resources>
                        <Control x:Key="Akihabara" Height="86">
                            <Control.Margin>
                                <MultiBinding Converter="{StaticResource ExitPositionConverterAtAkihabara}">
                                    <MultiBinding.Bindings>
                                        <Binding Path="StartPos"/>
                                        <Binding Path="EndPos"/>
                                    </MultiBinding.Bindings>
                                </MultiBinding>
                            </Control.Margin>
                            <Control.Template>
                                <ControlTemplate>
                                    <Grid Name="Exit" VerticalAlignment="Top" Margin="0,7" Height="16">
                                        <Border Background="#FF000000" Height="1.5" VerticalAlignment="Center"/>
                                        <Canvas Name="ExitName" Margin="0" Height="16" HorizontalAlignment="Right" FlowDirection="LeftToRight">
                                            <StackPanel Orientation="Horizontal" Height="16">
                                                <Border Background="#FF000000" Width="32" Height="1.5" VerticalAlignment="Center"/>
                                                <TextBlock Margin="2,0" Text="{Binding Kanji}" FontFamily="Microsoft Sans Serif" FontSize="16" FontWeight="Bold" TextAlignment="Center" LineStackingStrategy="BlockLineHeight" LineHeight="16" FlowDirection="LeftToRight"/>
                                            </StackPanel>
                                        </Canvas>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger SourceName="Exit" Property="FlowDirection" Value="RightToLeft">
                                            <Setter TargetName="ExitName" Property="HorizontalAlignment" Value="Left"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Control.Template>
                        </Control>
                    </DataTemplate.Resources>
                    <StackPanel Orientation="Horizontal">
                        <Control Width="{Binding Offset, Converter={StaticResource PlatformWidthConverter}}"/>
                        <ContentControl Name="ExitContainer" Width="{Binding Length, Converter={StaticResource PlatformWidthConverter}}">
                            <StackPanel Name="Exit">
                                <StackPanel.Margin>
                                    <MultiBinding Converter="{StaticResource ExitPositionConverter}">
                                        <MultiBinding.Bindings>
                                            <Binding Path="StartPos"/>
                                            <Binding Path="EndPos"/>
                                        </MultiBinding.Bindings>
                                    </MultiBinding>
                                </StackPanel.Margin>
                                <Border Height="4" BorderBrush="#FF000000" BorderThickness="1.5,0,1.5,1.5"/>
                                <Border Width="2" Height="2" Background="#FF000000" HorizontalAlignment="Center"/>
                                <Canvas Margin="0,1,0,0" Width="{Binding ActualWidth, ElementName=Japanese}" Height="16" HorizontalAlignment="Center">
                                    <TextBlock Name="Japanese" Text="{Binding Kanji}" FontFamily="Microsoft Sans Serif" FontSize="16" FontWeight="Bold" TextAlignment="Center" LineStackingStrategy="BlockLineHeight" LineHeight="16" FlowDirection="LeftToRight"/>
                                </Canvas>
                            </StackPanel>
                        </ContentControl>
                    </StackPanel>
                    <DataTemplate.Triggers>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                            <Setter TargetName="ExitContainer" Property="Content" Value="{StaticResource Akihabara}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding DataContext.StationInfo.Platform.HasMultipleExitsBlock, RelativeSource={RelativeSource AncestorType={x:Type ctrl:NextStationView}}}" Value="True">
                            <Setter TargetName="Exit" Property="Margin">
                                <Setter.Value>
                                    <MultiBinding Converter="{StaticResource ExitPositionConverterAtAkihabara}">
                                        <MultiBinding.Bindings>
                                            <Binding Path="StartPos"/>
                                            <Binding Path="EndPos"/>
                                        </MultiBinding.Bindings>
                                    </MultiBinding>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="PlatformLine" TargetType="Control">
        <Grid>
            <Grid.Background>
                <VisualBrush Stretch="None" TileMode="Tile" Viewport="0,0,10,5" ViewportUnits="Absolute">
                    <VisualBrush.Visual>
                        <Grid Width="10" Height="5">
                            <Rectangle Fill="#FFF0EE70" Width="6" Height="5"/>
                        </Grid>
                    </VisualBrush.Visual>
                </VisualBrush>
            </Grid.Background>
        </Grid>
    </ControlTemplate>

    <Style x:Key="TransferListOfPlatform" TargetType="ItemsControl">
        <Setter Property="ItemsSource" Value="{Binding Lines}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ItemsControl">
                    <Grid>
                        <Grid Margin="0,6" HorizontalAlignment="Center" VerticalAlignment="Top">
                            <Canvas Width="300" Height="32" HorizontalAlignment="Center">
                                <Path>
                                    <Path.Fill>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,0.5" SpreadMethod="Reflect">
                                            <GradientStop Color="#FF6F70FF" Offset="0"/>
                                            <GradientStop Color="#806F70FF" Offset="0.5"/>
                                            <GradientStop Color="#2F6F70FF" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Path.Fill>
                                    <Path.Data>
                                        <PathGeometry>
                                            <PathFigure StartPoint="16,0">
                                                <LineSegment Point="284,0" IsStroked="False"/>
                                                <ArcSegment IsLargeArc="False" Point="284,32" RotationAngle="0" Size="16,16" SweepDirection="Clockwise"/>
                                                <LineSegment Point="16,32" IsStroked="False"/>
                                                <ArcSegment IsLargeArc="False" Point="16,0" RotationAngle="0" Size="16,16" SweepDirection="Clockwise"/>
                                            </PathFigure>
                                        </PathGeometry>
                                    </Path.Data>
                                </Path>
                            </Canvas>
                            <TextBlock Height="32" FontFamily="Meiryo" FontSize="22" FontWeight="Bold" Text="のりかえ ／ Transfer" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ContentControl Name="ItemsHostContainer" Margin="0,40,0,0" Width="940" Height="90" HorizontalAlignment="Center" VerticalAlignment="Top">
                            <Viewbox  StretchDirection="DownOnly" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <ctrl:TransferDisplayGrid x:Name="ItemsHost" IsItemsHost="True" MinWidth="940" Rows="{Binding Rows}" Columns="{Binding Columns}" DistributesBlankSpace="True"/>
                            </Viewbox>
                        </ContentControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Rows}" Value="2">
                            <Setter TargetName="ItemsHostContainer" Property="Height" Value="110"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Columns}" Value="2">
                            <Setter TargetName="ItemsHost" Property="MinWidth" Value="640"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Rows}" Value="2"/>
                                <Condition Binding="{Binding DataContext.StationInfo.Platform.WatchYourStep, RelativeSource={RelativeSource AncestorType={x:Type ctrl:NextStationView}}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ItemsHostContainer" Property="Margin" Value="0,5,0,0"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ContentPresenter">
                    <Setter Property="Grid.Row"  Value="{Binding Row}"/>
                    <Setter Property="Grid.RowSpan" Value="{Binding RowSpan}"/>
                    <Setter Property="Grid.Column" Value="{Binding Column}"/>
                    <Setter Property="Grid.ColumnSpan" Value="{Binding ColumnSpan}"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding DataContext.Rows, RelativeSource={RelativeSource AncestorType={x:Type ctrl:TransferDisplayGrid}}}" Value="1">
                            <Setter Property="HorizontalAlignment" Value="Center"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Name="Container" Margin="2,5,24,10" MinWidth="130" DataContext="{Binding LineInfo}" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                        <ItemsControl ItemsSource="{Binding Icons}" HorizontalAlignment="Left" VerticalAlignment="Top">
                            <ItemsControl.Template>
                                <ControlTemplate TargetType="ItemsControl">
                                    <StackPanel IsItemsHost="True" Orientation="Horizontal"/>
                                </ControlTemplate>
                            </ItemsControl.Template>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <ctrl:LineIcon x:Name="LineIcon" Style="{StaticResource LineIcon}" Margin="0,0,3,0" Width="48" Height="48" IconType="{Binding IconType}" PrimaryLineColor="{Binding LineColor}" SecondaryLineColor="{Binding LineColor2}" LineLetter="{Binding LineLetter}" LineLetterColor="{StaticResource ActiveText}"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <StackPanel Margin="4,0,0,0">
                            <TextBlock Name="Japanese" FontFamily="Microsoft Sans Serif" FontSize="28" FontWeight="Bold" Foreground="#FF000000" Text="{Binding Kanji, Converter={StaticResource RemoveLinefeed}, ConverterParameter=1}" TextAlignment="Left" LineStackingStrategy="BlockLineHeight" LineHeight="34"/>
                            <TextBlock Name="English" Margin="2,-2" FontFamily="Microsoft Sans Serif" FontSize="17" FontWeight="Bold" Foreground="#FF000000" Text="{Binding English, Converter={StaticResource RemoveLinefeed}, ConverterParameter=1}" TextAlignment="Left" LineStackingStrategy="BlockLineHeight" LineHeight="17"/>
                        </StackPanel>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="PlatformOnThisSide" TargetType="Control">
        <ControlTemplate.Resources>
            <cvt:TransferDisplaySelector x:Key="TransferDisplaySelector" TargetMode="Platform" TargetLanguage="Kanji"/>
        </ControlTemplate.Resources>
        <StackPanel>
            <StackPanel Height="200" Background="#FFE5E7E9">
                <Control Template="{StaticResource NextStopInfo}"/>
                <Grid Margin="0,2" Width="{Binding StationInfo.Platform.Length, Converter={StaticResource PlatformWidthConverter}}" Height="114" HorizontalAlignment="Center">
                    <Border VerticalAlignment="Bottom" Height="91" BorderBrush="#FF000000" BorderThickness="2">
                        <Control Template="{StaticResource PlatformLine}" Margin="4,2" Height="2" VerticalAlignment="Bottom"/>
                    </Border>
                    <ItemsControl Name="PlatformBlocks" ItemsSource="{Binding StationInfo.Platform.Blocks}" Width="{Binding StationInfo.Platform.Length, Converter={StaticResource PlatformWidthConverter}}" Height="108" Margin="0,0,0,6" HorizontalAlignment="Center" VerticalAlignment="Bottom">
                        <ItemsControl.Template>
                            <ControlTemplate TargetType="ItemsControl">
                                <StackPanel Name="PlatformPresenter" IsItemsHost="True" Orientation="Horizontal"/>
                                <ControlTemplate.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding TrainInfo.Direction}" Value="Forward"/>
                                            <Condition Binding="{Binding Side}" Value="Right"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="PlatformPresenter" Property="FlowDirection" Value="RightToLeft"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding TrainInfo.Direction}" Value="Opposite"/>
                                            <Condition Binding="{Binding Side}" Value="Left"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="PlatformPresenter" Property="FlowDirection" Value="RightToLeft"/>
                                    </MultiDataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </ItemsControl.Template>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Width="{Binding Length, Converter={StaticResource PlatformWidthConverter}}">
                                    <ItemsControl Name="PlatformExits" ItemsSource="{Binding Exits}" Style="{StaticResource ExitsOnThisSide}" Height="23" VerticalAlignment="Bottom" AlternationCount="{Binding Exits.Count}"/>
                                    <ItemsControl Name="PlatformUnits" ItemsSource="{Binding Units}" Style="{StaticResource PlatformUnits}" ItemTemplate="{StaticResource PlatformUnitOnThisSide}" Margin="0,1,0,0" Height="84" VerticalAlignment="Bottom"/>
                                </StackPanel>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding DataContext.StationInfo.Platform.HasMultipleExitsBlock, RelativeSource={RelativeSource AncestorType={x:Type ctrl:NextStationView}}}" Value="True">
                                        <Setter TargetName="PlatformExits" Property="Height" Value="108"/>
                                        <Setter TargetName="PlatformExits" Property="Margin" Value="0,0,0,-86"/>
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Grid>

                <Grid Width="960" Height="52">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Name="LeftStopPos" Width="18"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Name="RightStopPos" Width="18"/>
                    </Grid.ColumnDefinitions>
                    <Control Margin="5,0" Height="34" VerticalAlignment="Top" Template="{StaticResource Rail}" Grid.ColumnSpan="3"/>
                    <ItemsControl ItemsSource="{Binding Train}" Style="{StaticResource Train}" Name="Train" HorizontalAlignment="Right" VerticalAlignment="Top" Grid.ColumnSpan="2"/>
                </Grid>
            </StackPanel>
            <Grid Height="170">
                <ItemsControl Name="Transfers" DataContext="{Binding StationInfo.Transfer, Converter={StaticResource TransferDisplaySelector}}" Style="{StaticResource TransferListOfPlatform}" VerticalAlignment="Top"/>
                <TextBlock Name="WatchYourStep" Margin="0,30" Foreground="#FFFF0000" FontFamily="Meiryo UI" FontSize="22" FontWeight="Bold" Text="電車とホームの間があいています。ご注意ください。" TextAlignment="Center" VerticalAlignment="Bottom" Visibility="Hidden"/>
                <TextBlock Margin="20,3" Foreground="#FF000000" FontFamily="Microsoft Sans Serif" FontSize="15" TextAlignment="Right" VerticalAlignment="Bottom">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0}年{1}月現在">
                            <MultiBinding.Bindings>
                                <Binding Path="StationInfo.UpdateYear"/>
                                <Binding Path="StationInfo.UpdateMonth"/>
                            </MultiBinding.Bindings>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
            </Grid>
        </StackPanel>

        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Side}" Value="Right">
                <Setter TargetName="Train" Property="HorizontalAlignment" Value="Left"/>
                <Setter TargetName="Train" Property="Grid.Column" Value="1"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding StationInfo.Transfer, Converter={StaticResource TransferDisplaySelector}}" Value="{x:Null}">
                <Setter TargetName="Transfers" Property="Visibility" Value="Hidden"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding StationInfo.Platform.WatchYourStep}" Value="True">
                <Setter TargetName="WatchYourStep" Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="PlatformOnOppositeSide" TargetType="Control">
        <ControlTemplate.Resources>
            <cvt:TransferDisplaySelector x:Key="TransferDisplaySelector" TargetMode="Platform" TargetLanguage="Kanji"/>
        </ControlTemplate.Resources>
        <StackPanel>
            <StackPanel Height="200" Background="#FFE5E7E9">
                <Control Template="{StaticResource NextStopInfo}"/>
                <Grid Margin="0,2" Width="960" Height="52">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Name="LeftStopPos" Width="18"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Name="RightStopPos" Width="18"/>
                    </Grid.ColumnDefinitions>
                    <Control Margin="5,0" Height="34" VerticalAlignment="Bottom" Template="{StaticResource Rail}" Grid.ColumnSpan="3"/>
                    <ItemsControl ItemsSource="{Binding Train}" Style="{StaticResource Train}" Name="Train" HorizontalAlignment="Right" VerticalAlignment="Bottom" Grid.ColumnSpan="2"/>
                </Grid>
                <Grid Width="{Binding StationInfo.Platform.Length, Converter={StaticResource PlatformWidthConverter}}" Height="114" HorizontalAlignment="Center">
                    <Border VerticalAlignment="Top" Height="91" BorderBrush="#FF000000" BorderThickness="2">
                        <Control Template="{StaticResource PlatformLine}" Margin="4,2" Height="2" VerticalAlignment="Top"/>
                    </Border>
                    <ItemsControl Name="PlatformBlocks" ItemsSource="{Binding StationInfo.Platform.Blocks}" Width="{Binding StationInfo.Platform.Length, Converter={StaticResource PlatformWidthConverter}}" Height="108" Margin="0,6,0,0" HorizontalAlignment="Center" VerticalAlignment="Top">
                        <ItemsControl.Template>
                            <ControlTemplate TargetType="ItemsControl">
                                <StackPanel Name="PlatformPresenter" IsItemsHost="True" Orientation="Horizontal"/>
                                <ControlTemplate.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding TrainInfo.Direction}" Value="Forward"/>
                                            <Condition Binding="{Binding Side}" Value="Right"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="PlatformPresenter" Property="FlowDirection" Value="RightToLeft"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding TrainInfo.Direction}" Value="Opposite"/>
                                            <Condition Binding="{Binding Side}" Value="Left"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="PlatformPresenter" Property="FlowDirection" Value="RightToLeft"/>
                                    </MultiDataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </ItemsControl.Template>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Width="{Binding Length, Converter={StaticResource PlatformWidthConverter}}">
                                    <ItemsControl Name="PlatformUnits" ItemsSource="{Binding Units}" Style="{StaticResource PlatformUnits}" ItemTemplate="{StaticResource PlatformUnitOnOppositeSide}" Margin="0,0,0,1" Height="84" VerticalAlignment="Bottom"/>
                                    <ItemsControl Name="PlatformExits" ItemsSource="{Binding Exits}" Style="{StaticResource ExitsOnOppositeSide}" Height="23" VerticalAlignment="Bottom" AlternationCount="{Binding Exits.Count}" Panel.ZIndex="-1"/>
                                </StackPanel>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Grid>
            </StackPanel>
            <Grid Height="170">
                <ItemsControl Name="Transfers" DataContext="{Binding StationInfo.Transfer, Converter={StaticResource TransferDisplaySelector}}" Style="{StaticResource TransferListOfPlatform}" VerticalAlignment="Top"/>
                <TextBlock Name="WatchYourStep" Margin="0,30" Foreground="#FFFF0000" FontFamily="Meiryo UI" FontSize="22" FontWeight="Bold" Text="電車とホームの間があいています。ご注意ください。" TextAlignment="Center" VerticalAlignment="Bottom" Visibility="Hidden"/>
                <TextBlock Margin="20,3" Foreground="#FF000000" FontFamily="Microsoft Sans Serif" FontSize="15" TextAlignment="Right" VerticalAlignment="Bottom">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0}年{1}月現在">
                            <MultiBinding.Bindings>
                                <Binding Path="StationInfo.UpdateYear"/>
                                <Binding Path="StationInfo.UpdateMonth"/>
                            </MultiBinding.Bindings>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
            </Grid>
        </StackPanel>

        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Side}" Value="Right">
                <Setter TargetName="Train" Property="HorizontalAlignment" Value="Left"/>
                <Setter TargetName="Train" Property="Grid.Column" Value="1"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding StationInfo.Transfer, Converter={StaticResource TransferDisplaySelector}}" Value="{x:Null}">
                <Setter TargetName="Transfers" Property="Visibility" Value="Hidden"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding StationInfo.Platform.WatchYourStep}" Value="True">
                <Setter TargetName="WatchYourStep" Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="AlertJapanese" TargetType="Control">
        <Border BorderBrush="#FFFF0000" BorderThickness="15">
            <DockPanel VerticalAlignment="Top">
                <Border Name="Title" DockPanel.Dock="Top" Margin="0,20" BorderBrush="#FFFF0000" BorderThickness="0,0,0,3" HorizontalAlignment="Center">
                    <TextBlock Margin="10,-10" Foreground="#FFFF0000" FontFamily="Meiryo" FontSize="34" FontWeight="Bold" Text="特別警戒実施のお知らせ"/>
                </Border>
                <StackPanel Name="Text" Margin="5">
                    <TextBlock FontFamily="Meiryo" FontSize="25" FontWeight="Bold" Text="" LineStackingStrategy="BlockLineHeight" LineHeight="42" HorizontalAlignment="Center">
                        <Run>ただいま、</Run><Run FontFamily="Microsoft Sans Serif">JR</Run><Run>東日本グループでは、警察と連携し、</Run><Run Foreground="#FFFF0000">特別警戒</Run><Run>を実施して</Run><LineBreak/>
                        <Run>おります。防犯カメラを駅構内に設置しているほか、社員および警備員による</Run><LineBreak/>
                        <Run>駅構内・列車内の巡回を強化して、お客さまに安心してご利用いただけるように</Run><LineBreak/>
                        <Run>努めております。</Run><LineBreak/>
                        <Run>駅構内で</Run><Run Foreground="#FFFF0000">不審物や気がかりなこと</Run><Run>がございましたら、お近くの駅係員、車掌</Run><LineBreak/>
                        <Run>または警備員までお知らせください。お客さまのご協力をお願いいたします。</Run>
                    </TextBlock>
                </StackPanel>
            </DockPanel>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="AlertEnglish" TargetType="Control">
        <ControlTemplate.Resources>
            <LinearGradientBrush x:Key="GradientBrush" StartPoint="0,0.5" EndPoint="0.5,0.5" SpreadMethod="Reflect">
                <GradientStop Color="#66FFFFFF" Offset="0"/>
                <GradientStop Color="#FFFF0000" Offset="0.3"/>
            </LinearGradientBrush>
        </ControlTemplate.Resources>
        <Border BorderBrush="#FFFF0000" BorderThickness="15">
            <DockPanel VerticalAlignment="Top">
                <Border Name="Title" DockPanel.Dock="Top" Margin="0,10,0,15" BorderBrush="#FFFF0000" BorderThickness="0,0,0,3" HorizontalAlignment="Center">
                    <TextBlock Margin="40,2" Foreground="#FFFF0000" FontFamily="Microsoft Sans Serif" FontSize="42" FontWeight="Bold" Text="Security Notice"/>
                </Border>
                <StackPanel Name="Text" Margin="5">
                    <TextBlock FontFamily="Microsoft Sans Serif" FontSize="30" FontWeight="Bold" Text="" LineStackingStrategy="BlockLineHeight" LineHeight="48" HorizontalAlignment="Center">
                        <Run>JR East Group and the Police Department together are now</Run><LineBreak/>
                        <Run Foreground="#FFFF0000">on a high alert.</Run><LineBreak/>
                        <Run>If you find</Run> <Run Foreground="#FFFF0000">something suspicious</Run> <Run>at a station or on a train,</Run><LineBreak/>
                        <Run>please inform station staff, conductors or security guards as soon</Run><LineBreak/>
                        <Run>as possible.</Run>
                    </TextBlock>
                </StackPanel>
            </DockPanel>
        </Border>
    </ControlTemplate>
    
    <ControlTemplate x:Key="PrioritySeat" TargetType="Control">
        <StackPanel>
            <Border Margin="0,5" Width="560" Height="300" Background="#FFFFFFFF" BorderBrush="#FFD0D0D0" BorderThickness="1" CornerRadius="8" HorizontalAlignment="Center">
                <Viewbox Stretch="Fill" StretchDirection="DownOnly" Margin="4">
                    <ctrl:SvgPresenter Source="Themes\E233-1000\SVG\PrioritySeat.svg"/>
                </Viewbox>
            </Border>
            <Viewbox Margin="0,-4,0,-8" Width="860" Stretch="Fill" StretchDirection="DownOnly">
                <TextBlock FontFamily="Meiryo" FontSize="32" Text="優先席を必要とされるお客さまがいらっしゃいましたら、席をお譲りください。" TextAlignment="Center"/>
            </Viewbox>
            <Viewbox Width="560" Stretch="Fill" StretchDirection="DownOnly">
                <TextBlock FontFamily="Microsoft Sans Serif" FontSize="32" Text="Please offer your seat to those who may need it." TextAlignment="Center"/>
            </Viewbox>
        </StackPanel>
    </ControlTemplate>

    <ControlTemplate x:Key="MobilePhone" TargetType="Control">
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
            <ContentControl Width="360">
                <Border Width="300" Height="225" Background="#FFFFFFFF" BorderBrush="#FF000000" BorderThickness="1" CornerRadius="30" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Viewbox Margin="28,0" Stretch="Uniform">
                        <ctrl:SvgPresenter Source="Themes\E233-1000\SVG\MobilePhone.svg"/>
                    </Viewbox>
                </Border>
            </ContentControl>
            <StackPanel Width="540" VerticalAlignment="Center">
                <Viewbox Margin="0,0,0,0" Width="400" Height="100" Stretch="Fill" StretchDirection="DownOnly" HorizontalAlignment="Center">
                    <TextBlock FontFamily="Meiryo" FontSize="44" LineStackingStrategy="BlockLineHeight" LineHeight="60">
                        <Run>マナーモードに設定の上、</Run><LineBreak/><Run>通話はご遠慮ください。</Run>
                    </TextBlock>
                </Viewbox>
                <Viewbox Margin="20,45,0,0"  Width="500" Height="100" Stretch="Fill" StretchDirection="DownOnly" HorizontalAlignment="Left">
                    <TextBlock FontFamily="Microsoft Sans Serif" FontSize="28" HorizontalAlignment="Center" LineStackingStrategy="BlockLineHeight" LineHeight="34">
                        <Run>Please set your mobile phone to silent</Run><LineBreak/><Run>mode and refrain from talking on the phone.</Run>
                    </TextBlock>
                </Viewbox>
            </StackPanel>
        </StackPanel>
    </ControlTemplate>

    <Style x:Key="MainArea" TargetType="Control">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <Border Background="#FFD3D8DE" BorderBrush="#FF808080" BorderThickness="0,0,0,2">
                        <Grid>
                            <Control Style="{StaticResource TrainType}" Margin="10,10" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                            <Control Style="{StaticResource Destination}" Margin="230,3,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                            <Control Style="{StaticResource StationName}" Margin="0,0,0,3" VerticalAlignment="Bottom"/>
                            <Control Style="{StaticResource CarNumber}" Margin="0,8,10,0" HorizontalAlignment="Right" VerticalAlignment="Top"/>
                            <Control Style="{StaticResource CurrentTime}" Margin="0,0,10,3" HorizontalAlignment="Right" VerticalAlignment="Bottom"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="OptionalArea" TargetType="Control">
        <Style.Triggers>
            <DataTrigger Binding="{Binding OptionalArea.Mode}" Value="DetailedRouteMap">
                <Setter Property="Template" Value="{StaticResource DetailedRouteMap}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding OptionalArea.Mode}" Value="RouteMap">
                <Setter Property="Template" Value="{StaticResource RouteMap}"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding OptionalArea.Mode}" Value="Platform"/>
                    <Condition Binding="{Binding ThisSideWillOpen}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource PlatformOnThisSide}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding OptionalArea.Mode}" Value="Platform"/>
                    <Condition Binding="{Binding ThisSideWillOpen}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource PlatformOnOppositeSide}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding OptionalArea.Mode}" Value="Door"/>
                    <Condition Binding="{Binding ThisSideWillOpen}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource DoorsOnThisSide}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding OptionalArea.Mode}" Value="Door"/>
                    <Condition Binding="{Binding ThisSideWillOpen}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource DoorsOnOppositeSide}"/>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding OptionalArea.Mode}" Value="Transfers">
                <Setter Property="Template" Value="{StaticResource Transfers}"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding OptionalArea.Mode}" Value="Alert"/>
                    <Condition Binding="{Binding OptionalArea.Language}" Value="Kanji"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource AlertJapanese}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding OptionalArea.Mode}" Value="Alert"/>
                    <Condition Binding="{Binding OptionalArea.Language}" Value="English"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Template" Value="{StaticResource AlertEnglish}"/>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding OptionalArea.Mode}" Value="PrioritySeat">
                <Setter Property="Template" Value="{StaticResource PrioritySeat}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding OptionalArea.Mode}" Value="MobilePhone">
                <Setter Property="Template" Value="{StaticResource MobilePhone}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="ctrl:NextStationView">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ctrl:NextStationView">
                    <StackPanel Width="960" Height="540" Background="#FFF5F7F9">
                        <Control Name="MainArea" Style="{StaticResource MainArea}" Height="170"/>
                        <Control Name="OptionalArea" Style="{StaticResource OptionalArea}" Height="370"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>